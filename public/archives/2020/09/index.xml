<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2020/09 on すいすいSwift</title>
    <link>https://swiswiswift.com/archives/2020/09/</link>
    <description>Recent content in 2020/09 on すいすいSwift</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language><atom:link href="https://swiswiswift.com/archives/2020/09/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Swiftで文章を読み上げる（音声合成）</title>
      <link>https://swiswiswift.com/2020-09-15/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-15/</guid>
      <description>Swiftで文章を読み上げる（音声合成）方法です。 AVFoundation を import し、以下のコードを書くことで iPhone に文字列を読み</description>
    </item>
    
    <item>
      <title>SwiftUIでButton内の画像やテキストの色を変えない</title>
      <link>https://swiswiswift.com/2020-09-14/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-14/</guid>
      <description>SwiftUIでButton内の画像やテキストの色を変えない方法です。 .buttonStyle(PlainButtonStyle()) ではフルーツの一覧を表示して</description>
    </item>
    
    <item>
      <title>SwiftUIで画面遷移時に値を渡す</title>
      <link>https://swiswiswift.com/2020-09-13/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-13/</guid>
      <description>SwiftUIで画面遷移時に値を渡す方法です。 ContentView ではフルーツの一覧を表示しています。 フルーツが表示さ</description>
    </item>
    
    <item>
      <title>GithubのAPIを叩き、SwiftUIでリポジトリを取得する。一番最後までいくと追加で取得しIndicator を表示する</title>
      <link>https://swiswiswift.com/2020-09-12/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-12/</guid>
      <description>GithubのAPIを叩き、リポジトリを取得する。一番最後までいくと追加で取得しIndicator を</description>
    </item>
    
    <item>
      <title>GithubのAPIを叩き、SwiftUIでリポジトリの情報をリストに表示する。一番下までスクロールされたら追加する</title>
      <link>https://swiswiswift.com/2020-09-11/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-11/</guid>
      <description>GithubのAPIを叩き、リポジトリの情報をリストに表示する。一番下までスクロールされたら追加する</description>
    </item>
    
    <item>
      <title>GithubのAPIを叩き、SwiftUIでリポジトリの情報をリストに表示する（Combine）</title>
      <link>https://swiswiswift.com/2020-09-10/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-10/</guid>
      <description>GithubのAPIを叩き、リポジトリの情報をリストに表示する方法です。 Infinite List Scroll with SwiftUI and Combine を参考にさせて</description>
    </item>
    
    <item>
      <title>GithubのAPIを叩き、SwiftUIでリポジトリの情報をリストに表示する（Closure）</title>
      <link>https://swiswiswift.com/2020-09-09/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-09/</guid>
      <description>GithubのAPIを叩き、SwiftUIでリポジトリの情報をリストに表示する方法です。 Infinite List Scroll with SwiftUI and</description>
    </item>
    
    <item>
      <title>SwiftUIでViewを横に等間隔で横に並べる</title>
      <link>https://swiswiswift.com/2020-09-08/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-08/</guid>
      <description>SwiftUIでViewを横に等間隔で横に並べて表示するほうほうです。 アイコンを等間隔で表示したりす</description>
    </item>
    
    <item>
      <title>SwiftUIで画像を丸く切り取り、枠を付ける</title>
      <link>https://swiswiswift.com/2020-09-07/</link>
      <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-07/</guid>
      <description>SwiftUIで丸い枠に合わせて画像を丸く切り取り、枠を付ける方法です。 アイコンの表示する箇所などに</description>
    </item>
    
    <item>
      <title>SwiftUIで画像をリサイズして表示（clip）</title>
      <link>https://swiswiswift.com/2020-09-06/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-06/</guid>
      <description>SwiftUIで画像をリサイズして表示します。 アスペクト比が異なる場合ははみ出た箇所を切り取って表示</description>
    </item>
    
    <item>
      <title>SwiftUIで画像をリサイズして表示（fit）</title>
      <link>https://swiswiswift.com/2020-09-05/</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-05/</guid>
      <description>SwiftUIで画像をリサイズして表示します。 アスペクト比が異なる場合は余白が赤色で表示されます。</description>
    </item>
    
    <item>
      <title>Buttonを押すとTextの文字が変わる</title>
      <link>https://swiswiswift.com/2020-09-04/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-04/</guid>
      <description>SwiftUIでButtonが押されたら文字の色を変える方法です。 ボタンが押されたタイミングで @State var text</description>
    </item>
    
    <item>
      <title>SwiftUIでアラートとシートを出し分ける</title>
      <link>https://swiswiswift.com/2020-09-03/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-03/</guid>
      <description>SwiftUIでアラートとシートを出し分ける方法です。 TextField に入力された文字列が Double に変換できるかチェック</description>
    </item>
    
    <item>
      <title>curl で iOSにVoIPプッシュを送る</title>
      <link>https://swiswiswift.com/2020-09-02/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-02/</guid>
      <description>curl で iOSにVoIPプッシュを送る方法です。 まず VoIPプッシュ通知用の .p12 ファイルを .pem に変換します。</description>
    </item>
    
    <item>
      <title>SwiftUIでプログラムで前の画面に戻る</title>
      <link>https://swiswiswift.com/2020-09-01/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-01/</guid>
      <description>SwiftUI でプログラムで前の画面に戻る方法です。 NavigationView と NavigationLink を使うと画面遷移することができます。 戻るボタンは自動で</description>
    </item>
    
  </channel>
</rss>
