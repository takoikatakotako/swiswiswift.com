<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SwiftUI on すいすいSwift</title>
    <link>https://swiswiswift.com/tags/swiftui/</link>
    <description>Recent content in SwiftUI on すいすいSwift</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 07 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://swiswiswift.com/tags/swiftui/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SwiftUIでMapViewを使い複数の位置情報を選択する</title>
      <link>https://swiswiswift.com/2022-03-07/</link>
      <pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-03-07/</guid>
      <description>SwiftUIでMapViewを使い複数の位置情報を選択する方法です。 addボタンを押した位置情報を</description>
    </item>
    
    <item>
      <title>SwiftUIでさまざまなデバイスのプレビューを確認する</title>
      <link>https://swiswiswift.com/2022-01-03/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-01-03/</guid>
      <description>SwiftUIでさまざまなデバイスのプレビューを確認する方法です。 まず以下のコマンドでデバイスの一覧</description>
    </item>
    
    <item>
      <title>iOS15でPickerを横に並べるとタップ領域が重なってしまう</title>
      <link>https://swiswiswift.com/2022-01-02/</link>
      <pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-01-02/</guid>
      <description>iOS15でPickerを横に並べるとタップ領域が重なってしまう不具合に悩まされたのでその忘備録です</description>
    </item>
    
    <item>
      <title>SwiftUIでMapViewの中央に十字を用意し、その中央の座標を取得する</title>
      <link>https://swiswiswift.com/2021-12-05/</link>
      <pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-12-05/</guid>
      <description>SwiftUIでMapViewの中央に十字を用意し、その中央の座標を取得する方法です。 MapView</description>
    </item>
    
    <item>
      <title>SwiftUIでPHPickerViewControllerを使って画像を選択する</title>
      <link>https://swiswiswift.com/2021-11-09/</link>
      <pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-09/</guid>
      <description>SwiftUIでPHPickerViewControllerを使って画像を選択する方法です。 Imag</description>
    </item>
    
    <item>
      <title>SwiftUIでスライダーとスクロールを連動させる</title>
      <link>https://swiswiswift.com/2021-11-02/</link>
      <pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-02/</guid>
      <description>SwiftUIでスライダーとスクロールを連動させる方法です。 スライダーの値を変えることでScroll</description>
    </item>
    
    <item>
      <title>SwiftUIでカメラを使う</title>
      <link>https://swiswiswift.com/2021-11-01/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-01/</guid>
      <description>SwiftUIでカメラを使う方法です。 録画を可能にする CameraView を作成しそれを SwiftUI 側で呼び出すようにします。 S</description>
    </item>
    
    <item>
      <title>iOSで実機ビルドだと動けどTestFlightから配信すると動かない</title>
      <link>https://swiswiswift.com/2021-07-05/</link>
      <pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-07-05/</guid>
      <description>iOSアプリ開発中に実機ビルドだと動けどTestFlightから配信すると動かない。ということがあり</description>
    </item>
    
    <item>
      <title>複数の型を持つJSONをemumでDecodeする</title>
      <link>https://swiswiswift.com/2021-07-04/</link>
      <pubDate>Sun, 04 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-07-04/</guid>
      <description>複数の型を持つ JSON を enum を使って Decode する方法です。 とある API を叩くと JSON が返ってきますが、その中身がポケモンな</description>
    </item>
    
    <item>
      <title>自分で定義したStructをUserDefaultsに保存する</title>
      <link>https://swiswiswift.com/2021-07-03/</link>
      <pubDate>Sat, 03 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-07-03/</guid>
      <description>自分で定義したStructをUserDefaultsに保存する方法です。 そのままでは保存することがで</description>
    </item>
    
    <item>
      <title>Identifiableに適合していないStructでListを使う</title>
      <link>https://swiswiswift.com/2021-07-02/</link>
      <pubDate>Fri, 02 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-07-02/</guid>
      <description>Identifiableに適合していないStructでListを使う方法です。 id でプロパティユニーク</description>
    </item>
    
    <item>
      <title>iOSのファイルアプリを開いてドキュメントフォルダに保存したファイルを開く</title>
      <link>https://swiswiswift.com/2021-06-02/</link>
      <pubDate>Wed, 02 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-06-02/</guid>
      <description>iOSのファイルアプリを開いてドキュメントフォルダに保存したファイルを開く方法です。 アプリのドキュメ</description>
    </item>
    
    <item>
      <title>SwiftUIのTabViewのタブをコードから動的に切り替える</title>
      <link>https://swiswiswift.com/2021-06-01/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-06-01/</guid>
      <description>SwiftUIのTabViewのタブをコードから動的に切り替える方法です。 コードで動的にタブを切り替</description>
    </item>
    
    <item>
      <title>iOSでバージョンとビルド番号を取得する</title>
      <link>https://swiswiswift.com/2021-05-10/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-10/</guid>
      <description>iOSでバージョンとビルド番号を取得する方法です。 バージョンとビルド番号を文字列で取得します。 オプシ</description>
    </item>
    
    <item>
      <title>SwiftUIでListにButtonを設定してパラメーターの違う画面に遷移する</title>
      <link>https://swiswiswift.com/2021-05-09/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-09/</guid>
      <description>SwiftUIでListにButtonを設定してパラメーターの違う画面に遷移する方法です。 詳細ページ</description>
    </item>
    
    <item>
      <title>SwiftUIで少しカスタマイズしたActivityIndicatorを表示する</title>
      <link>https://swiswiswift.com/2021-05-08/</link>
      <pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-08/</guid>
      <description>SwiftUIで少しカスタマイズしたActivityIndicatorを表示する方法です。背景色をつ</description>
    </item>
    
    <item>
      <title>Swiftでデフォルト引数を使う</title>
      <link>https://swiswiswift.com/2021-05-07/</link>
      <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-07/</guid>
      <description>Swiftでデフォルト引数を使う方法です。 favorite 関数に引数を渡さず呼び出すと &amp;quot;I love Snorlax が返り、任意の名前を渡</description>
    </item>
    
    <item>
      <title>SwiftUIでActivityIndicatorを表示する</title>
      <link>https://swiswiswift.com/2021-05-06/</link>
      <pubDate>Thu, 06 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-06/</guid>
      <description>SwiftUIでActivityIndicatorを表示する方法です。 ロード中などのくるくるするやつ</description>
    </item>
    
    <item>
      <title>SwiftUIでUIActivityViewControllerを表示する</title>
      <link>https://swiswiswift.com/2021-05-05/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-05/</guid>
      <description>SwiftUIでUIActivityViewControllerを表示する方法です。 ボタンを押すと URL</description>
    </item>
    
    <item>
      <title>SwiftUIでSearchBar(TextField)にクリアボタンをつける</title>
      <link>https://swiswiswift.com/2021-05-02/</link>
      <pubDate>Sun, 02 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-02/</guid>
      <description>SwiftUIでSearchBar(TextField)にクリアボタンをつける方法です。 TextFiled に文字を入</description>
    </item>
    
    <item>
      <title>SwiftUIでSearchBar(TextField)を使って検索する</title>
      <link>https://swiswiswift.com/2021-05-01/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-01/</guid>
      <description>SwiftUIでSearchBar(TextField)を使って検索する方法です。 TextFiled に文字を入力する</description>
    </item>
    
    <item>
      <title>SwiftUIのListの中にボタンを複数設置する</title>
      <link>https://swiswiswift.com/2021-04-08/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-04-08/</guid>
      <description>SwiftUIのListの中にボタンを複数設置する方法です。 buttonStyle(PlainButtonStyle()) を設定することできました。 参考サイト SwiftUI</description>
    </item>
    
    <item>
      <title>SwiftUIのListでSpacerの部分にもタップ判定をつける</title>
      <link>https://swiswiswift.com/2021-04-07/</link>
      <pubDate>Wed, 07 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-04-07/</guid>
      <description>SwiftUIのListでSpacerの部分にもタップ判定をつける方法です。 .contentShape(Rectangle()) を設定することでタップ</description>
    </item>
    
    <item>
      <title>SwiftUIでListをEditModeにして並び替える</title>
      <link>https://swiswiswift.com/2021-04-02/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-04-02/</guid>
      <description>SwiftUIでListをEditModeにして並び替える方法です。 UITableViewのEdit</description>
    </item>
    
    <item>
      <title>SwiftUIでシートを表示し、プッシュ遷移後にシートを閉じる</title>
      <link>https://swiswiswift.com/2021-03-10/</link>
      <pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-10/</guid>
      <description>SwiftUIでシートを表示し、プッシュ遷移後にシートを閉じる方法です。 遷移後のシートでもisPre</description>
    </item>
    
    <item>
      <title>SwiftUIで初めの画面に遷移する（popToRootViewController）</title>
      <link>https://swiswiswift.com/2021-03-09/</link>
      <pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-09/</guid>
      <description>SwiftUIで初めの画面に遷移する（popToRootViewController）方法です。 isDetailLink が</description>
    </item>
    
    <item>
      <title>Swiftで10進数を2進数に変換する</title>
      <link>https://swiswiswift.com/2021-03-08/</link>
      <pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-08/</guid>
      <description>Swiftで10進数を2進数に変換する方法です。 TextFieldに数字を入力し、変換ボタンを押すと</description>
    </item>
    
    <item>
      <title>SwiftUIのTextFieldで表示するキーボードを指定する</title>
      <link>https://swiswiswift.com/2021-03-07/</link>
      <pubDate>Sun, 07 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-07/</guid>
      <description>SwiftUIのTextFieldで表示するキーボードを指定する方法です。 keyboardType を指定することで表示する</description>
    </item>
    
    <item>
      <title>SwiftでMKMapViewに線を引く</title>
      <link>https://swiswiswift.com/2021-03-05/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-05/</guid>
      <description>SwiftでMKMapViewに線を引く方法です。 以下の例では大阪、松本、東京で線を引いています。 (adsbygoogle</description>
    </item>
    
    <item>
      <title>SwiftUIでButtonを有効にしたり無効にしたりする</title>
      <link>https://swiswiswift.com/2021-03-04/</link>
      <pubDate>Thu, 04 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-04/</guid>
      <description>SwiftUIでButtonを有効にしたり無効にしたりする方法です。 Toggleを押すとボタンが有効</description>
    </item>
    
    <item>
      <title>SwiftUIでViewを横スクロールで表示する</title>
      <link>https://swiswiswift.com/2021-03-02/</link>
      <pubDate>Tue, 02 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-02/</guid>
      <description>SwiftUIでViewを横スクロールで表示する方法です。 SwiftUIだと簡単に実装できて良いです</description>
    </item>
    
    <item>
      <title>QGridを使ってCollectionViewを実装する</title>
      <link>https://swiswiswift.com/2021-03-01/</link>
      <pubDate>Mon, 01 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-01/</guid>
      <description>QGridを使ってCollectionViewを実装する方法です。 iOS13のSwiftUIではCo</description>
    </item>
    
    <item>
      <title>Swiftでオンライン上のファイルを再生する</title>
      <link>https://swiswiswift.com/2021-02-10/</link>
      <pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-10/</guid>
      <description>Swiftでオンライン上のファイルを再生する方法です。 簡単に実装できました。ただエラーハンドリングが</description>
    </item>
    
    <item>
      <title>SwiftUIでアラートを入れ子にして使うことができない</title>
      <link>https://swiswiswift.com/2021-02-09/</link>
      <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-09/</guid>
      <description>SwiftUIでアラートを入れ子にして使うことができなかったのでそのメモです。 以下のコードの様に HStack の</description>
    </item>
    
    <item>
      <title>iOSでGoogle-Mobile-Ads-SDKの８系が入らない</title>
      <link>https://swiswiswift.com/2021-02-08/</link>
      <pubDate>Mon, 08 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-08/</guid>
      <description>iOSでGoogle-Mobile-Ads-SDKの８系が入らない時の対処法です。 Firebase/adMob を外したらうまく</description>
    </item>
    
    <item>
      <title>SwiftUIでボタンを押すとポップアップを表示する</title>
      <link>https://swiswiswift.com/2021-02-07/</link>
      <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-07/</guid>
      <description>SwiftUIでボタンを押すとポップアップを表示する方法です。 以下の例ではボタンを押すとアラート（中</description>
    </item>
    
    <item>
      <title>SwiftUIでBMIを計算し、結果を別のViewで表示する</title>
      <link>https://swiswiswift.com/2021-02-06/</link>
      <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-06/</guid>
      <description>SwiftUIでBMIを計算し、結果を別のViewで表示する方法です。 身長と体重を入力し、計算ボタン</description>
    </item>
    
    <item>
      <title>@Stateと@Bindingの使い分け</title>
      <link>https://swiswiswift.com/2021-02-05/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-05/</guid>
      <description>@Stateと@Bindingの使い分けについです。 @State のついた変数を変更することでViewにその変更</description>
    </item>
    
    <item>
      <title>SwiftUIで複数のモーダルをEnumで出し分ける</title>
      <link>https://swiswiswift.com/2021-02-03/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-03/</guid>
      <description>SwiftUIで複数のモーダルをEnumで出し分ける方法です。 enumを使うことでスッキリと書くこと</description>
    </item>
    
    <item>
      <title>SwiftUIでフルスクリーンモーダルを表示する（iOS14以上）</title>
      <link>https://swiswiswift.com/2021-02-02/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-02/</guid>
      <description>SwiftUIでフルスクリーンモーダルを表示する方法です。（iOS14以上） いままでSwiftUIで</description>
    </item>
    
    <item>
      <title>SwiftUIでモーダルを表示する時に値を渡す</title>
      <link>https://swiswiswift.com/2021-02-01/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-01/</guid>
      <description>SwiftUIでモーダルを表示する時に値を渡す方法です。 TextFieldでname変数に文字列を入</description>
    </item>
    
    <item>
      <title>Swiftで文字列を圧縮して保存し、そのデータを読み取る</title>
      <link>https://swiswiswift.com/2021-01-01/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-01-01/</guid>
      <description>Swiftで文字列を圧縮して保存し、そのデータを読み取る方法です。 zlib というアルゴリズムで文字列を圧縮</description>
    </item>
    
    <item>
      <title>SwiftUIでAVAudioPlayerNodeで音楽を再生し、再生終了を検知する</title>
      <link>https://swiswiswift.com/2020-12-13/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-13/</guid>
      <description>SwiftUIでAVAudioPlayerNodeで音楽を再生し、再生終了を検知する方法です。 AVAudioPlayer は Delegate</description>
    </item>
    
    <item>
      <title>SwiftUIでAVAudioPlayerで音楽を再生し、再生終了を検知する</title>
      <link>https://swiswiswift.com/2020-12-12/</link>
      <pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-12/</guid>
      <description>SwiftUIでAVAudioPlayerで音楽を再生し、再生終了を検知する方法です。 SwiftUI</description>
    </item>
    
    <item>
      <title>SwiftUIを使ったTODOアプリのサンプル</title>
      <link>https://swiswiswift.com/2020-12-10/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-10/</guid>
      <description>SwiftUIを使ったTODOアプリのサンプルコードです。 InputView で入力した TODOは ContentView に表示されます。 (adsbygoogle</description>
    </item>
    
    <item>
      <title>AVAudioPlayerNodeを使って音楽の再生、一時停止、再生速度変更、ピッチ変更、ボリューム変更を行う</title>
      <link>https://swiswiswift.com/2020-12-09/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-09/</guid>
      <description>AVAudioPlayerNodeを使って音楽の再生、一時停止、再生速度変更、ピッチ変更、ボリューム</description>
    </item>
    
    <item>
      <title>AVAudioPlayerを使って音楽の再生、一時停止、停止、ボリューム変更、再生速度変更を行う</title>
      <link>https://swiswiswift.com/2020-12-08/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-08/</guid>
      <description>AVAudioPlayerを使って音楽の再生、一時停止、停止、ボリューム変更、再生速度変更を行う方法</description>
    </item>
    
    <item>
      <title>SwiftUIでImageを長押しするとContextMenuを表示する</title>
      <link>https://swiswiswift.com/2020-12-07/</link>
      <pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-07/</guid>
      <description>SwiftUIでImageを長押しするとContextMenuを表示する方法です。 アイコンが表示され</description>
    </item>
    
    <item>
      <title>SwiftUIでMapを使う。Mapにピンを立てる</title>
      <link>https://swiswiswift.com/2020-11-07/</link>
      <pubDate>Sat, 07 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-07/</guid>
      <description>SwiftUIでMapを使う。Mapにピンを立てる方法です。 UIViewRepresentableを</description>
    </item>
    
    <item>
      <title>SwiftUIでViewの上にViewを重ねる</title>
      <link>https://swiswiswift.com/2020-11-06/</link>
      <pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-06/</guid>
      <description>SwiftUIでViewの上にViewを重ねる方法です。 Imageの上に半透明に黒いTextを重ねて</description>
    </item>
    
    <item>
      <title>SwiftUIで端末のシェイクを検知する</title>
      <link>https://swiswiswift.com/2020-11-01/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-01/</guid>
      <description>SwiftUIで端末のシェイクを検知する方法です。 端末をシェイクすると Text 内の文字が変わります。 Rea</description>
    </item>
    
    <item>
      <title>SwiftUIでAppStorageを使ってUserDefaultの値を監視する</title>
      <link>https://swiswiswift.com/2020-10-08/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-08/</guid>
      <description>SwiftUIでAppStorageを使ってUserDefaultの値を監視する方法です。 UserD</description>
    </item>
    
    <item>
      <title>SwiftUIでListの中に複数のNavigationLinkを設置する</title>
      <link>https://swiswiswift.com/2020-10-07/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-07/</guid>
      <description>SwiftUIでListの中に複数のNavigationLinkを設置する方法です。 素直に実装すると</description>
    </item>
    
    <item>
      <title>SwiftUIでViewの周りに影をつける</title>
      <link>https://swiswiswift.com/2020-10-01/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-01/</guid>
      <description>SwiftでUIViewの周りに影をつける方法です。 ImageのViewの周りに影をつけています。 shadowOffset</description>
    </item>
    
    <item>
      <title>SwiftUIでButton内の画像やテキストの色を変えない</title>
      <link>https://swiswiswift.com/2020-09-14/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-14/</guid>
      <description>SwiftUIでButton内の画像やテキストの色を変えない方法です。 .buttonStyle(PlainButtonStyle()) ではフルーツの一覧を表示して</description>
    </item>
    
    <item>
      <title>SwiftUIで画面遷移時に値を渡す</title>
      <link>https://swiswiswift.com/2020-09-13/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-13/</guid>
      <description>SwiftUIで画面遷移時に値を渡す方法です。 ContentView ではフルーツの一覧を表示しています。 フルーツが表示さ</description>
    </item>
    
    <item>
      <title>GithubのAPIを叩き、SwiftUIでリポジトリを取得する。一番最後までいくと追加で取得しIndicator を表示する</title>
      <link>https://swiswiswift.com/2020-09-12/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-12/</guid>
      <description>GithubのAPIを叩き、リポジトリを取得する。一番最後までいくと追加で取得しIndicator を</description>
    </item>
    
    <item>
      <title>GithubのAPIを叩き、SwiftUIでリポジトリの情報をリストに表示する。一番下までスクロールされたら追加する</title>
      <link>https://swiswiswift.com/2020-09-11/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-11/</guid>
      <description>GithubのAPIを叩き、リポジトリの情報をリストに表示する。一番下までスクロールされたら追加する</description>
    </item>
    
    <item>
      <title>GithubのAPIを叩き、SwiftUIでリポジトリの情報をリストに表示する（Combine）</title>
      <link>https://swiswiswift.com/2020-09-10/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-10/</guid>
      <description>GithubのAPIを叩き、リポジトリの情報をリストに表示する方法です。 Infinite List Scroll with SwiftUI and Combine を参考にさせて</description>
    </item>
    
    <item>
      <title>GithubのAPIを叩き、SwiftUIでリポジトリの情報をリストに表示する（Closure）</title>
      <link>https://swiswiswift.com/2020-09-09/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-09/</guid>
      <description>GithubのAPIを叩き、SwiftUIでリポジトリの情報をリストに表示する方法です。 Infinite List Scroll with SwiftUI and</description>
    </item>
    
    <item>
      <title>SwiftUIでViewを横に等間隔で横に並べる</title>
      <link>https://swiswiswift.com/2020-09-08/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-08/</guid>
      <description>SwiftUIでViewを横に等間隔で横に並べて表示するほうほうです。 アイコンを等間隔で表示したりす</description>
    </item>
    
    <item>
      <title>SwiftUIで画像を丸く切り取り、枠を付ける</title>
      <link>https://swiswiswift.com/2020-09-07/</link>
      <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-07/</guid>
      <description>SwiftUIで丸い枠に合わせて画像を丸く切り取り、枠を付ける方法です。 アイコンの表示する箇所などに</description>
    </item>
    
    <item>
      <title>SwiftUIで画像をリサイズして表示（clip）</title>
      <link>https://swiswiswift.com/2020-09-06/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-06/</guid>
      <description>SwiftUIで画像をリサイズして表示します。 アスペクト比が異なる場合ははみ出た箇所を切り取って表示</description>
    </item>
    
    <item>
      <title>SwiftUIで画像をリサイズして表示（fit）</title>
      <link>https://swiswiswift.com/2020-09-05/</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-05/</guid>
      <description>SwiftUIで画像をリサイズして表示します。 アスペクト比が異なる場合は余白が赤色で表示されます。 (adsbygoogle</description>
    </item>
    
    <item>
      <title>Buttonを押すとTextの文字が変わる</title>
      <link>https://swiswiswift.com/2020-09-04/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-04/</guid>
      <description>SwiftUIでButtonが押されたら文字の色を変える方法です。 ボタンが押されたタイミングで @State var t</description>
    </item>
    
    <item>
      <title>SwiftUIでアラートとシートを出し分ける</title>
      <link>https://swiswiswift.com/2020-09-03/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-03/</guid>
      <description>SwiftUIでアラートとシートを出し分ける方法です。 TextField に入力された文字列が Double に変換できるかチェック</description>
    </item>
    
    <item>
      <title>Xcodeで行を入れ替える</title>
      <link>https://swiswiswift.com/2020-08-08/</link>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-08/</guid>
      <description>Xcodeで行を入れ替える方法です。 command + option + [ でカーソルのある行を上に持ってくることができます。 また</description>
    </item>
    
    <item>
      <title>Xcodeでコードをフォーマットする</title>
      <link>https://swiswiswift.com/2020-08-07/</link>
      <pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-07/</guid>
      <description>Xcodeでコードをフォーマットする方法です。 command + a でコードを全て選択し、control + i でコード</description>
    </item>
    
    <item>
      <title>SwiftUIのTextFieldで編集中と編集完了を検知する</title>
      <link>https://swiswiswift.com/2020-08-06/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-06/</guid>
      <description>SwiftUIのTextFieldで編集中と編集完了を検知する方法です。 UIKit よりも少ないコードで実現で</description>
    </item>
    
    <item>
      <title>SwiftUIのPreviewを横向きにする</title>
      <link>https://swiswiswift.com/2020-08-04/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-04/</guid>
      <description>SwiftUIのPreviewを横向きにする方法です。 Previewのサイズを変更することで実現しま</description>
    </item>
    
    <item>
      <title>Buttonからプッシュ遷移をする（NavigationLinkを無効にする）</title>
      <link>https://swiswiswift.com/2020-08-03/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-03/</guid>
      <description>Buttonからプッシュ遷移をする方法です。 この方法であれば、NavigationLink を擬似的に</description>
    </item>
    
    <item>
      <title>SwiftUIでNavigationBarを隠す</title>
      <link>https://swiswiswift.com/2020-08-02/</link>
      <pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-02/</guid>
      <description>SwiftUI で NavigationBar を隠す方法です。 .navigationBarHidden(true)を設定すると隠すことができ</description>
    </item>
    
    <item>
      <title>よくあるチュートリアル画面をUIPageViewControllerとSwiftUIで作る</title>
      <link>https://swiswiswift.com/2020-06-28/</link>
      <pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-28/</guid>
      <description>UIPageViewControllerとSwiftUIでよくあるチュートリアル画面を作ります。 画面</description>
    </item>
    
    <item>
      <title>SwiftUIでUITestを動かす</title>
      <link>https://swiswiswift.com/2020-06-24/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-24/</guid>
      <description>SwiftUIでUITestを動かす方法です。 UIKit の時と違って sleep を入れないと良い感じに動かなかったです</description>
    </item>
    
    <item>
      <title>SwiftUIでText中の文字の太さや色を変える</title>
      <link>https://swiswiswift.com/2020-06-22/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-22/</guid>
      <description>SwiftUIでText中の文字の太さや色を変える方法です。 SwiftUI で Text を結合できるのが面白いです。 (adsbygoogle = window.adsbygoogle</description>
    </item>
    
    <item>
      <title>SwiftUIで続きを読む。。。ボタンがあるViewを実装する</title>
      <link>https://swiswiswift.com/2020-06-20/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-20/</guid>
      <description>SwiftUIで続きを読む。。。ボタンがあるViewを実装する方法です。 背景を透明色にし、そのサイズ</description>
    </item>
    
    <item>
      <title>SwiftUIで閉じることができないモーダルを表示する</title>
      <link>https://swiswiswift.com/2020-06-01/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-01/</guid>
      <description>SwiftUIで閉じることができないモーダルを表示する方法です。 以下の記事の応用です、UIKit を使</description>
    </item>
    
    <item>
      <title>シミュレーターのスクリーンショットを影無しで撮影する（ツールバー無しで撮影する）</title>
      <link>https://swiswiswift.com/2020-05-14/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-14/</guid>
      <description>シミュレーターのスクリーンショットを影無しで撮影する（ツールバー無しで撮影する）方法です。 command + shift + 4</description>
    </item>
    
    <item>
      <title>SwiftUIでモーダルからフルモーダルを表示する</title>
      <link>https://swiswiswift.com/2020-05-13/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-13/</guid>
      <description>SwiftUIでモーダルからフルモーダルを表示する方法です。 以下の記事の改良版？です。 SwiftUI</description>
    </item>
    
    <item>
      <title>SwiftUIでアプリ起動時に画面を遷移させる</title>
      <link>https://swiswiswift.com/2020-05-12/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-12/</guid>
      <description>SwiftUIでアプリ起動時に画面を遷移させる方法です。 登録の導線で途中離脱したらその途中から再開さ</description>
    </item>
    
    <item>
      <title>FunctionBuilderを使ってViewに影をつける</title>
      <link>https://swiswiswift.com/2020-05-07/</link>
      <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-07/</guid>
      <description>FunctionBuilderを使ってViewに影をつける方法です。 FunctionBuilderと</description>
    </item>
    
    <item>
      <title>ViewModifierを使ってViewに影をつける</title>
      <link>https://swiswiswift.com/2020-05-06/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-06/</guid>
      <description>ViewModifierを使ってViewに影をつける方法です。 FunctionBuilderとVie</description>
    </item>
    
    <item>
      <title>SwiftUIでフルスクリーンモーダルを表示する</title>
      <link>https://swiswiswift.com/2020-05-05/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-05/</guid>
      <description>SwiftUIでフルスクリーンモーダルを表示する方法です。 SwiftにもっとAPI増えて欲しいです。</description>
    </item>
    
    <item>
      <title>SwiftUIでNavigationViewのタイトルやテーブルビューの背景を変える</title>
      <link>https://swiswiswift.com/2020-05-04/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-04/</guid>
      <description>SwiftUIでNavigationViewのタイトルやテーブルビューの背景を変える方法です。 TableView と UITextView</description>
    </item>
    
    <item>
      <title>SwiftUI で文字列中にタップ可能なリンクを追加する</title>
      <link>https://swiswiswift.com/2020-05-03/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-03/</guid>
      <description>SwiftUI で文字列中にタップ可能なリンクを追加するを作成する方法です。 UIViewRepresentable と UITextView を使って実現しました。 Reference: UITe</description>
    </item>
    
    <item>
      <title>SwiftUIでUICollectionViewのようにViewを並べる</title>
      <link>https://swiswiswift.com/2020-02-09/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-09/</guid>
      <description>SwiftUI で UICollectionView のように表示する方法です。 Q-Mobile/QGrid というライブラリを使うと簡単です。 QGrid を参考にしながら書いてみました</description>
    </item>
    
    <item>
      <title>SwiftUIでFirestoreの画像を表示する</title>
      <link>https://swiswiswift.com/2020-02-08/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-08/</guid>
      <description>SwiftUI で Firestore の画像を表示する方法です。 UIImage は SDWebImage を使えば簡単に表示できますが、SwiftUI ではそれができませ</description>
    </item>
    
    <item>
      <title>SwiftUIのToggleの変更を検知する</title>
      <link>https://swiswiswift.com/2020-02-05/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-05/</guid>
      <description>SwiftUIのToggleの変更を検知し、print 文を実行します。 参考: How can I trigger an action when a swiftUI toggle() is toggled?</description>
    </item>
    
    <item>
      <title>SwiftUIで複数行のPickerを作成する</title>
      <link>https://swiswiswift.com/2020-01-14/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-14/</guid>
      <description>UIPickerView のような複数行の Picker を作成する方法です。 UIPickerView と使い勝手がかなり異なり、戸惑いました。 参考: Multi-Component Picker (UIPickerView) in SwiftUI 追</description>
    </item>
    
    <item>
      <title>SwiftUIのPickerでLabelを表示しない</title>
      <link>https://swiswiswift.com/2020-01-13/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-13/</guid>
      <description>SwiftUIのPickerでLabelを表示しない方法です。 labelsHidden を設定することで可能です。 参考: How to</description>
    </item>
    
    <item>
      <title>SwiftUIでPicker を表示する</title>
      <link>https://swiswiswift.com/2020-01-12/</link>
      <pubDate>Sun, 12 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-12/</guid>
      <description>SwiftUI で Picker を表示するサンプルです。 複数行の場合はこちらです。 SwiftUIで複数行のPickerを作成す</description>
    </item>
    
    <item>
      <title>SwiftUI で画面遷移先の View から遷移元のメソッドを呼び出す</title>
      <link>https://swiswiswift.com/2020-01-11/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-11/</guid>
      <description>SwiftUI で画面遷移先の View から遷移元のメソッドを呼び出すサンプルです。 delegate を使ったのですが、Combine で書</description>
    </item>
    
    <item>
      <title>SwiftUI でアラートを表示する</title>
      <link>https://swiswiswift.com/2019-12-20/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-20/</guid>
      <description>SwiftUI でアラートを表示する方法です。 UIAlertController とはかなり書き方が異なります。 Property Wrapper の @State がまだ慣れません。 (adsbygoogle = window.adsbygoogle || []).push({});</description>
    </item>
    
    <item>
      <title>SwiftUIでリストのセルをタップするとアラートが表示される方法</title>
      <link>https://swiswiswift.com/2019-12-18/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-18/</guid>
      <description>SwiftUI でリストのセルをタップするとアラートが表示される方法です。 まだまだ SwiftUI に慣れません。 (adsbygoogle = window.adsbygoogle || []).push({}); amzn_assoc_ad_type =&#34;responsive_search_widget&#34;; amzn_assoc_tracking_id</description>
    </item>
    
    <item>
      <title>SwiftUIでリストを編集する</title>
      <link>https://swiswiswift.com/2019-12-17/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-17/</guid>
      <description>SwiftUIでリストを編集する方法です。 UITableView よりも短いコードで書くことができました。 参考: How to enable editing on</description>
    </item>
    
    <item>
      <title>TabViewを使って画面を切り替える（SwiftUI）</title>
      <link>https://swiswiswift.com/2019-11-21/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-21/</guid>
      <description>TabViewを使って画面を切り替えるサンプルです。 かなり簡単に書くことができますね。 TabView - SwiftUI | Apple Developer Documentation</description>
    </item>
    
    <item>
      <title>ListViewからそれぞれ別のViewに遷移する（SwiftUI）</title>
      <link>https://swiswiswift.com/2019-11-20/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-20/</guid>
      <description>設定画面のようにListViewからそれぞれ別のViewに遷移する方法が少し手間でした。 もっと良い方</description>
    </item>
    
  </channel>
</rss>
