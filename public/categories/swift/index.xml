<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swift on すいすいSwift</title>
    <link>https://swiswiswift.com/categories/swift/</link>
    <description>Recent content in Swift on すいすいSwift</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 01 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://swiswiswift.com/categories/swift/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>iOSでMKMapViewの上に図形を描画する</title>
      <link>https://swiswiswift.com/2021-07-01/</link>
      <pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-07-01/</guid>
      <description>iOSのMKMapViewの上に図形を描画する方法です。 MKPolygon を使うことで任意の多角形を描画することがで</description>
    </item>
    
    <item>
      <title>Swiftでプロジェクトの中に含まれるJSONファイルを読み込む</title>
      <link>https://swiswiswift.com/2021-04-01/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-04-01/</guid>
      <description>Swiftでプロジェクトの中に含まれるJSONファイルを読み込む方法です。 まずプロジェクトに読み込み</description>
    </item>
    
    <item>
      <title>SwiftでMKMapViewに図を追加する</title>
      <link>https://swiswiswift.com/2021-03-06/</link>
      <pubDate>Sat, 06 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-06/</guid>
      <description>SwiftでMKMapViewに図を追加する方法です。 以下の例では大阪、松本、東京を結ぶ三角形を追加</description>
    </item>
    
    <item>
      <title>Swiftで配列からランダムに任意の個数抽出する</title>
      <link>https://swiswiswift.com/2021-03-03/</link>
      <pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-03/</guid>
      <description>Swiftで配列からランダムに任意の個数抽出する方法です。 もっと良いやり方がありましたらTwitte</description>
    </item>
    
    <item>
      <title>TableViewのセルを長押しでContextMenuを表示する</title>
      <link>https://swiswiswift.com/2021-02-04/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-04/</guid>
      <description>TableViewのセルを長押しでContextMenuを表示する方法です。 手軽にメニューが表示する</description>
    </item>
    
    <item>
      <title>SwiftUIを使ったTODOアプリのサンプル</title>
      <link>https://swiswiswift.com/2020-12-10/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-10/</guid>
      <description>SwiftUIを使ったTODOアプリのサンプルコードです。 InputView で入力した TODOは ContentView に表示されます。 (adsbygoogle</description>
    </item>
    
    <item>
      <title>AVAudioPlayerNodeを使って音楽の再生、一時停止、再生速度変更、ピッチ変更、ボリューム変更を行う</title>
      <link>https://swiswiswift.com/2020-12-09/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-09/</guid>
      <description>AVAudioPlayerNodeを使って音楽の再生、一時停止、再生速度変更、ピッチ変更、ボリューム</description>
    </item>
    
    <item>
      <title>AVAudioPlayerを使って音楽の再生、一時停止、停止、ボリューム変更、再生速度変更を行う</title>
      <link>https://swiswiswift.com/2020-12-08/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-08/</guid>
      <description>AVAudioPlayerを使って音楽の再生、一時停止、停止、ボリューム変更、再生速度変更を行う方法</description>
    </item>
    
    <item>
      <title>SwiftUIでImageを長押しするとContextMenuを表示する</title>
      <link>https://swiswiswift.com/2020-12-07/</link>
      <pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-07/</guid>
      <description>SwiftUIでImageを長押しするとContextMenuを表示する方法です。 アイコンが表示され</description>
    </item>
    
    <item>
      <title>ImageViewを長押しするとContextMenuを表示する</title>
      <link>https://swiswiswift.com/2020-12-06/</link>
      <pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-06/</guid>
      <description>ImageViewを長押しするとUIMenuを表示する方法です。 アイコンが表示されているImageV</description>
    </item>
    
    <item>
      <title>SwiftUIでMapを表示してアノテーションを表示する</title>
      <link>https://swiswiswift.com/2020-12-05/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-05/</guid>
      <description>SwiftUIでMapを表示してアノテーションを表示する方法です。 iOS14からSwiftUIでMa</description>
    </item>
    
    <item>
      <title>UIStepperを使って値を増減させる</title>
      <link>https://swiswiswift.com/2020-12-04/</link>
      <pubDate>Fri, 04 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-04/</guid>
      <description>UIStepperを使って値を増減させる方法です。 UIStepperを使うと値を増減させるUIを簡単</description>
    </item>
    
    <item>
      <title>Xcodeでプロジェクトを作成してGithubにプッシュする</title>
      <link>https://swiswiswift.com/2020-12-03/</link>
      <pubDate>Thu, 03 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-03/</guid>
      <description>Xcodeでプロジェクトを作成してGithubにプッシュする忘備録です。 まずプロジェクトを作成します</description>
    </item>
    
    <item>
      <title>SwiftでSpringBootで作られたAPIに文字列を渡す</title>
      <link>https://swiswiswift.com/2020-12-02/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-02/</guid>
      <description>SwiftでSpringBootで作られたAPIに文字列を渡した時にちょっと詰まったのでそれの忘備録</description>
    </item>
    
    <item>
      <title>TableViewでセルのロングタップを検出する</title>
      <link>https://swiswiswift.com/2020-11-10/</link>
      <pubDate>Tue, 10 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-10/</guid>
      <description>TableViewでセルのロングタップを検出する方法です。 通常のタップとロングタップをそれぞれのイベ</description>
    </item>
    
    <item>
      <title>UIAlertControllerの中でTextFieldを使い、文字数を制限する</title>
      <link>https://swiswiswift.com/2020-11-09/</link>
      <pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-09/</guid>
      <description>UIAlertControllerの中でTextFieldを使い、文字数を制限する方法です。 このサン</description>
    </item>
    
    <item>
      <title>UIAlertControllerの中でTextFieldを使う</title>
      <link>https://swiswiswift.com/2020-11-08/</link>
      <pubDate>Sun, 08 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-08/</guid>
      <description>UIAlertControllerの中でTextFieldを使う方法です。 Alertの中でテキストを</description>
    </item>
    
    <item>
      <title>SwiftUIでMapを使う。Mapにピンを立てる</title>
      <link>https://swiswiswift.com/2020-11-07/</link>
      <pubDate>Sat, 07 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-07/</guid>
      <description>SwiftUIでMapを使う。Mapにピンを立てる方法です。 UIViewRepresentableを</description>
    </item>
    
    <item>
      <title>SwiftUIでViewの上にViewを重ねる</title>
      <link>https://swiswiswift.com/2020-11-06/</link>
      <pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-06/</guid>
      <description>SwiftUIでViewの上にViewを重ねる方法です。 Imageの上に半透明に黒いTextを重ねて</description>
    </item>
    
    <item>
      <title>UIViewに影をつける</title>
      <link>https://swiswiswift.com/2020-11-04/</link>
      <pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-04/</guid>
      <description>UIViewに影をつける方法です。 オレンジ色のUIView の周りに影をつけています。 影があると浮き上</description>
    </item>
    
    <item>
      <title>画面内にPageViewControllerがあるウォークスルー画面を実装する</title>
      <link>https://swiswiswift.com/2020-11-02/</link>
      <pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-02/</guid>
      <description>画面内にPageViewControllerがあるウォークスルー画面を実装する方法です。 一番最後のペ</description>
    </item>
    
    <item>
      <title>SwiftUIで端末のシェイクを検知する</title>
      <link>https://swiswiswift.com/2020-11-01/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-01/</guid>
      <description>SwiftUIで端末のシェイクを検知する方法です。 端末をシェイクすると Text 内の文字が変わります。 Rea</description>
    </item>
    
    <item>
      <title>SwiftUIでAppStorageを使ってUserDefaultの値を監視する</title>
      <link>https://swiswiswift.com/2020-10-08/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-08/</guid>
      <description>SwiftUIでAppStorageを使ってUserDefaultの値を監視する方法です。 UserD</description>
    </item>
    
    <item>
      <title>SwiftUIでListの中に複数のNavigationLinkを設置する</title>
      <link>https://swiswiswift.com/2020-10-07/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-07/</guid>
      <description>SwiftUIでListの中に複数のNavigationLinkを設置する方法です。 素直に実装すると</description>
    </item>
    
    <item>
      <title>ディレクトリにあるwavファイルをcafに変換する</title>
      <link>https://swiswiswift.com/2020-10-06/</link>
      <pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-06/</guid>
      <description>ディレクトリにあるwavファイルをcafに変換する方法です。ディレクトリに存在する全ての.wavファ</description>
    </item>
    
    <item>
      <title>ディレクトリにあるtxtファイルでループする</title>
      <link>https://swiswiswift.com/2020-10-05/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-05/</guid>
      <description>ディレクトリにあるtxtファイルでループする方法です。ディレクトリに存在する全ての.txtファイルに</description>
    </item>
    
    <item>
      <title>ディレクトリにあるファイル名でループする</title>
      <link>https://swiswiswift.com/2020-10-04/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-04/</guid>
      <description>ディレクトリにあるファイル名でループする方法です。ディレクトリに存在する全てのファイルに処理をしたい</description>
    </item>
    
    <item>
      <title>SwiftUIでVStackの周りに影をつける</title>
      <link>https://swiswiswift.com/2020-10-03/</link>
      <pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-03/</guid>
      <description>SwiftでUIViewの周りに影をつける方法です。 ImageのViewの周りに影をつけています。 shadowOffset</description>
    </item>
    
    <item>
      <title>UIPageViewControllerでウォークスルー画面を実装する</title>
      <link>https://swiswiswift.com/2020-10-02/</link>
      <pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-02/</guid>
      <description>UIPageViewControllerでウォークスルー画面を実装する方法です。 ウォークスルー画面は</description>
    </item>
    
    <item>
      <title>Swiftで文章を読み上げる（音声合成）</title>
      <link>https://swiswiswift.com/2020-09-15/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-15/</guid>
      <description>Swiftで文章を読み上げる（音声合成）方法です。 AVFoundation を import し、以下のコードを書くことで iPhone に文字列を読み</description>
    </item>
    
    <item>
      <title>curl で iOSにVoIPプッシュを送る</title>
      <link>https://swiswiswift.com/2020-09-02/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-02/</guid>
      <description>curl で iOSにVoIPプッシュを送る方法です。 まず VoIPプッシュ通知用の .p12 ファイルを .pem に変換します。</description>
    </item>
    
    <item>
      <title>SwiftUIでプログラムで前の画面に戻る</title>
      <link>https://swiswiswift.com/2020-09-01/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-01/</guid>
      <description>SwiftUI でプログラムで前の画面に戻る方法です。 NavigationView と NavigationLink を使うと画面遷移することができます。 戻るボタンは自動で</description>
    </item>
    
    <item>
      <title>Swiftで仮引数を持つイニシャライザをスマートに書く</title>
      <link>https://swiswiswift.com/2020-08-09/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-09/</guid>
      <description>Swiftで仮引数を持つイニシャライザをスマートに書く方法です。 仮引数がついたイニシャライザをもち、</description>
    </item>
    
    <item>
      <title>UIAlertControllerでアラートを表示する</title>
      <link>https://swiswiswift.com/2020-08-05/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-05/</guid>
      <description>UIAlertControllerを使ってアラートを出すサンプルです。 UIAlertControll</description>
    </item>
    
    <item>
      <title>SwiftUIのPreviewを横向きにする</title>
      <link>https://swiswiswift.com/2020-08-04/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-04/</guid>
      <description>SwiftUIのPreviewを横向きにする方法です。 Previewのサイズを変更することで実現しま</description>
    </item>
    
    <item>
      <title>Buttonからプッシュ遷移をする（NavigationLinkを無効にする）</title>
      <link>https://swiswiswift.com/2020-08-03/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-03/</guid>
      <description>Buttonからプッシュ遷移をする方法です。 この方法であれば、NavigationLink を擬似的に</description>
    </item>
    
    <item>
      <title>SwiftUIでNavigationBarを隠す</title>
      <link>https://swiswiswift.com/2020-08-02/</link>
      <pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-02/</guid>
      <description>SwiftUI で NavigationBar を隠す方法です。 .navigationBarHidden(true)を設定すると隠すことができ</description>
    </item>
    
    <item>
      <title>UIGestureRecognizer でジェスチャーイベントを取得する</title>
      <link>https://swiswiswift.com/2020-08-01/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-01/</guid>
      <description>UIGestureRecognizer でジェスチャーイベントを取得する方法です。 UITapGestureRecognizer, UIPinchGestureRecognizer, UILongPressGestureRecognizer, UISwipeGestureRecognizer などを使ってスワイプ、ピンチなどのイベントを取得</description>
    </item>
    
    <item>
      <title>UIPickerViewを使って値を選択する</title>
      <link>https://swiswiswift.com/2020-07-05/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-07-05/</guid>
      <description>UIPickerViewを使って値を取得するサンプルコードです。 PIPickerViewは選択肢の中</description>
    </item>
    
    <item>
      <title>iPadでモーダルのサイズを取得する</title>
      <link>https://swiswiswift.com/2020-07-02/</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-07-02/</guid>
      <description>iPadでモーダルのサイズを取得する方法です。 viewWillLayoutSubviews でモーダルのサイズを取得することができます。 (adsbygoogle = window.adsbygoogle ||</description>
    </item>
    
    <item>
      <title>削除、セルの移動が可能なUITableViewを作る</title>
      <link>https://swiswiswift.com/2020-07-01/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-07-01/</guid>
      <description>削除、セルの移動が可能なUITableViewを作る方法です。 TableViewを使うと簡単に編集可</description>
    </item>
    
    <item>
      <title>UserDefaults に配列を保存してTableViewに表示する</title>
      <link>https://swiswiswift.com/2020-06-27/</link>
      <pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-27/</guid>
      <description>UserDefaults に配列を保存してTableViewに表示する方法です。 FirstViewController のボタンを押すと UserDefaults に現在の時刻が文字列とし</description>
    </item>
    
    <item>
      <title>UINavigationBar, UITabBar の色を変える</title>
      <link>https://swiswiswift.com/2020-06-26/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-26/</guid>
      <description>iOSでUINavigationBar, UITabBar の色を変える方法です。 エヴァンゲリオンをイメージしたカラー</description>
    </item>
    
    <item>
      <title>UITabBarControllerにUINavigationControllerを入れ子で実装する</title>
      <link>https://swiswiswift.com/2020-06-25/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-25/</guid>
      <description>UITabBarControllerにUINavigationControllerを入れ子で実装する</description>
    </item>
    
    <item>
      <title>Swiftで録画開始とスクリーンショットが取られたことを検知する</title>
      <link>https://swiswiswift.com/2020-06-15/</link>
      <pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-15/</guid>
      <description>Swiftで録画開始とスクリーンショットが取られたことを検知する方法です。 画面録画開始前に captureStatusDidChange を実行さ</description>
    </item>
    
    <item>
      <title>SwiftUIで閉じることができないモーダルを表示する</title>
      <link>https://swiswiswift.com/2020-06-01/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-01/</guid>
      <description>SwiftUIで閉じることができないモーダルを表示する方法です。 以下の記事の応用です、UIKit を使</description>
    </item>
    
    <item>
      <title>シミュレーターのスクリーンショットを影無しで撮影する（ツールバー無しで撮影する）</title>
      <link>https://swiswiswift.com/2020-05-14/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-14/</guid>
      <description>シミュレーターのスクリーンショットを影無しで撮影する（ツールバー無しで撮影する）方法です。 command + shift + 4</description>
    </item>
    
    <item>
      <title>SwiftUIでモーダルからフルモーダルを表示する</title>
      <link>https://swiswiswift.com/2020-05-13/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-13/</guid>
      <description>SwiftUIでモーダルからフルモーダルを表示する方法です。 以下の記事の改良版？です。 SwiftUI</description>
    </item>
    
    <item>
      <title>SwiftUIでアプリ起動時に画面を遷移させる</title>
      <link>https://swiswiswift.com/2020-05-12/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-12/</guid>
      <description>SwiftUIでアプリ起動時に画面を遷移させる方法です。 登録の導線で途中離脱したらその途中から再開さ</description>
    </item>
    
    <item>
      <title>FunctionBuilderを使ってViewに影をつける</title>
      <link>https://swiswiswift.com/2020-05-07/</link>
      <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-07/</guid>
      <description>FunctionBuilderを使ってViewに影をつける方法です。 FunctionBuilderと</description>
    </item>
    
    <item>
      <title>ViewModifierを使ってViewに影をつける</title>
      <link>https://swiswiswift.com/2020-05-06/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-06/</guid>
      <description>ViewModifierを使ってViewに影をつける方法です。 FunctionBuilderとVie</description>
    </item>
    
    <item>
      <title>SwiftUIでフルスクリーンモーダルを表示する</title>
      <link>https://swiswiswift.com/2020-05-05/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-05/</guid>
      <description>SwiftUIでフルスクリーンモーダルを表示する方法です。 SwiftにもっとAPI増えて欲しいです。</description>
    </item>
    
    <item>
      <title>SwiftUIでNavigationViewのタイトルやテーブルビューの背景を変える</title>
      <link>https://swiswiswift.com/2020-05-04/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-04/</guid>
      <description>SwiftUIでNavigationViewのタイトルやテーブルビューの背景を変える方法です。 TableView と UITextView</description>
    </item>
    
    <item>
      <title>SwiftUI で文字列中にタップ可能なリンクを追加する</title>
      <link>https://swiswiswift.com/2020-05-03/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-03/</guid>
      <description>SwiftUI で文字列中にタップ可能なリンクを追加するを作成する方法です。 UIViewRepresentable と UITextView を使って実現しました。 Reference: UITe</description>
    </item>
    
    <item>
      <title>SwiftでPDFを作成する</title>
      <link>https://swiswiswift.com/2020-04-03/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-04-03/</guid>
      <description>Swift で PDF を作成する方法です。 PDFKit で簡単に PDF を作ることができました、素敵ですね。 (adsbygoogle = window.adsbygoogle || []).push({}); amzn_assoc_ad_type =&#34;responsive_search_widget&#34;; amzn_assoc_tracking_id =&#34;swiswiswift-22&#34;; amzn_assoc_marketplace =&#34;amazon&#34;; amzn_assoc_region =&#34;JP&#34;;</description>
    </item>
    
    <item>
      <title>UIActivityViewControllerでText, JSON, PDFを共有する</title>
      <link>https://swiswiswift.com/2020-04-02/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-04-02/</guid>
      <description>(adsbygoogle = window.adsbygoogle || []).push({}); amzn_assoc_ad_type =&#34;responsive_search_widget&#34;; amzn_assoc_tracking_id =&#34;swiswiswift-22&#34;; amzn_assoc_marketplace =&#34;amazon&#34;; amzn_assoc_region =&#34;JP&#34;; amzn_assoc_placement =&#34;&#34;; amzn_assoc_search_type = &#34;search_widget&#34;;amzn_assoc_width =&#34;auto&#34;; amzn_assoc_height =&#34;auto&#34;; amzn_assoc_default_search_category =&#34;&#34;; amzn_assoc_default_search_key =&#34;&#34;;amzn_assoc_theme =&#34;light&#34;; amzn_assoc_bg_color =&#34;FFFFFF&#34;;</description>
    </item>
    
    <item>
      <title>SwiftUIでWebViewを表示する</title>
      <link>https://swiswiswift.com/2020-03-27/</link>
      <pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-03-27/</guid>
      <description>SwiftUIでWebViewを表示する方法です。 UIViewRepresentable を使わなくても良い WebView が早く出て欲しいです。 (adsbygoogle = window.adsbygoogle</description>
    </item>
    
    <item>
      <title>SwiftUIでListの要素を削除した入り増やしたりする</title>
      <link>https://swiswiswift.com/2020-03-01/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-03-01/</guid>
      <description>SwiftUIでListの要素を削除した入り増やしたりする方法です。 Closure で渡すのはあまりよくない気がし</description>
    </item>
    
    <item>
      <title>SwiftUIでキーボードをボタンで隠す</title>
      <link>https://swiswiswift.com/2020-02-29/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-29/</guid>
      <description>SwiftUIでキーボードをボタンで隠す方法です。 UIApplicationを拡張して実現しています</description>
    </item>
    
    <item>
      <title>SwiftUIでKeyboardの高さや出現を検知する</title>
      <link>https://swiswiswift.com/2020-02-28/</link>
      <pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-28/</guid>
      <description>SwiftUIでKeyboardの高さや出現を検知する方法です。 Combineを使って実現しています</description>
    </item>
    
    <item>
      <title>SwiftUIで複数行の文字列を入力する</title>
      <link>https://swiswiswift.com/2020-02-27/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-27/</guid>
      <description>SwiftUIで複数行の文字列を入力する方法です。 UIKitのTextViewを使って実現しています</description>
    </item>
    
    <item>
      <title>SwiftUIで下からPickerを出す</title>
      <link>https://swiswiswift.com/2020-02-26/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-26/</guid>
      <description>SwiftUIで下から Picker を出す方法です。 下からモーダルのように表示させています。 Importing an image into SwiftUI using UIImagePickerController (adsbygoogle = window.adsbygoogle</description>
    </item>
    
    <item>
      <title>SwiftUIでUIImagePickerControllerを使う</title>
      <link>https://swiswiswift.com/2020-02-25/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-25/</guid>
      <description>SwiftUIでSwiftUIでUIImagePickerControllerを使う方法です。 UIKit と同</description>
    </item>
    
    <item>
      <title>SwiftUIでButton内の画像の色を変えない</title>
      <link>https://swiswiswift.com/2020-02-24/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-24/</guid>
      <description>SwiftUIでButton内の画像の色を変えない方法です。 デフォルトのままだと以下の画像のように色</description>
    </item>
    
    <item>
      <title>iOS13のModalPresentationStyleを全部試してみた</title>
      <link>https://swiswiswift.com/2020-02-23/</link>
      <pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-23/</guid>
      <description>iOS13のModalPresentationStyleを全部試してみました。 PopPage モーダルのことを弊社</description>
    </item>
    
    <item>
      <title>Swiftで動画の終了を検知する</title>
      <link>https://swiswiswift.com/2020-02-22/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-22/</guid>
      <description>Swiftで動画の終了を検知するサンプルです。 動画はこちらのサイトからお借りしました。 Hybrid Creative Movies SAKURA こちら</description>
    </item>
    
    <item>
      <title>Swiftで動画を再生する</title>
      <link>https://swiswiswift.com/2020-02-21/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-21/</guid>
      <description>Swiftで動画を再生するサンプルです。 動画はこちらのサイトからお借りしました。 Hybrid Creative Movies SAKURA こちらのサイ</description>
    </item>
    
    <item>
      <title>SwiftUIでSwiftUIでサイドメニュー（ハンバーガーメニュー）を表示する</title>
      <link>https://swiswiswift.com/2020-02-20/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-20/</guid>
      <description>SwiftUIでサイドメニュー（ハンバーガーメニュー）を表示するサンプルです。 ドラッグで消す箇所など</description>
    </item>
    
    <item>
      <title>SwiftUIのListのSectionの色を変える</title>
      <link>https://swiswiswift.com/2020-02-19/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-19/</guid>
      <description>SwiftUIのListのSectionの色を変えるサンプルです。 Appearanceを使って背景色</description>
    </item>
    
    <item>
      <title>タップでセクション区切りのListViewにチェックを入れる</title>
      <link>https://swiswiswift.com/2020-02-18/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-18/</guid>
      <description>タップでセクション区切りのListViewにチェックを入れるサンプルです。 タップすることで State が変化し</description>
    </item>
    
    <item>
      <title>タップでListViewにチェックを入れる</title>
      <link>https://swiswiswift.com/2020-02-17/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-17/</guid>
      <description>タップで ListView にチェックを入れるサンプルです。 タップすることで State が変化し、✔︎を描画するようになります。</description>
    </item>
    
    <item>
      <title>SwiftでCSVを集計する</title>
      <link>https://swiswiswift.com/2020-02-16/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-16/</guid>
      <description>Swift で CSV を集計する方法です。 まず前処理として、CSV ファイルを utf8 に変換する必要があります。 Mac の場合は Numbers</description>
    </item>
    
    <item>
      <title>UIViewの背景をグリッドにしたり、ドットにしたりする</title>
      <link>https://swiswiswift.com/2020-02-14/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-14/</guid>
      <description>UIView の背景をグリッドにしたり、ドットにしたりする方法です。 今回は GridView という UIView のサブクラスを作り、ボタンを</description>
    </item>
    
    <item>
      <title>ReplayKitを使って画面を録音する</title>
      <link>https://swiswiswift.com/2020-02-12/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-12/</guid>
      <description>ReplayKit を使うと画面を録画することができます。 凄く簡単に使うことができる上に、マイクで実況？をしたりするこ</description>
    </item>
    
    <item>
      <title>SwiftUIでUICollectionViewのようにViewを並べる</title>
      <link>https://swiswiswift.com/2020-02-09/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-09/</guid>
      <description>SwiftUI で UICollectionView のように表示する方法です。 Q-Mobile/QGrid というライブラリを使うと簡単です。 QGrid を参考にしながら書いてみました</description>
    </item>
    
    <item>
      <title>SwiftUIでFirestoreの画像を表示する</title>
      <link>https://swiswiswift.com/2020-02-08/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-08/</guid>
      <description>SwiftUI で Firestore の画像を表示する方法です。 UIImage は SDWebImage を使えば簡単に表示できますが、SwiftUI ではそれができませ</description>
    </item>
    
    <item>
      <title>SwiftUIのToggleの変更を検知する</title>
      <link>https://swiswiswift.com/2020-02-05/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-05/</guid>
      <description>SwiftUIのToggleの変更を検知し、print 文を実行します。 参考: How can I trigger an action when a swiftUI toggle() is toggled?</description>
    </item>
    
    <item>
      <title>SwiftUIで複数行のPickerを作成する</title>
      <link>https://swiswiswift.com/2020-01-14/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-14/</guid>
      <description>UIPickerView のような複数行の Picker を作成する方法です。 UIPickerView と使い勝手がかなり異なり、戸惑いました。 参考: Multi-Component Picker (UIPickerView) in SwiftUI 追</description>
    </item>
    
    <item>
      <title>SwiftUIのPickerでLabelを表示しない</title>
      <link>https://swiswiswift.com/2020-01-13/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-13/</guid>
      <description>SwiftUIのPickerでLabelを表示しない方法です。 labelsHidden を設定することで可能です。 参考: How to</description>
    </item>
    
    <item>
      <title>SwiftUIでPicker を表示する</title>
      <link>https://swiswiswift.com/2020-01-12/</link>
      <pubDate>Sun, 12 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-12/</guid>
      <description>SwiftUI で Picker を表示するサンプルです。 複数行の場合はこちらです。 SwiftUIで複数行のPickerを作成す</description>
    </item>
    
    <item>
      <title>SwiftUI で画面遷移先の View から遷移元のメソッドを呼び出す</title>
      <link>https://swiswiswift.com/2020-01-11/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-11/</guid>
      <description>SwiftUI で画面遷移先の View から遷移元のメソッドを呼び出すサンプルです。 delegate を使ったのですが、Combine で書</description>
    </item>
    
    <item>
      <title>Swiftで数字が連番になった配列を作成する</title>
      <link>https://swiswiswift.com/2020-01-10/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-10/</guid>
      <description>Swiftで数字が連番になった配列を作成する方法です。 なかなか書き方を覚えられません。 (adsbygoogle = window.adsbygoogle || []).push({}); amzn_assoc_ad_type =&#34;responsive_search_widget&#34;;</description>
    </item>
    
    <item>
      <title>MVPアーキテクチャを使ったサンプルアプリ</title>
      <link>https://swiswiswift.com/2019-12-30/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-30/</guid>
      <description>MVPアーキテクチャを使ったサンプルアプリです。 Unitテスト、UIテストも書きました。 以下のような</description>
    </item>
    
    <item>
      <title>StoryboardsをiOS13以上のプロジェクトから削除する</title>
      <link>https://swiswiswift.com/2019-12-29/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-29/</guid>
      <description>Swift &amp;amp; Storyboard でファイルを作成します。 Main.storyboard を削除します。 Main storyboard file base name の項を削除する。 Application Scene Manifest -&amp;gt; Application Session Role -&amp;gt; Item0 -&amp;gt; Storyboard Name を削</description>
    </item>
    
    <item>
      <title>Swift5.1で追加されたFunctionBuilderを使ってStructを作る</title>
      <link>https://swiswiswift.com/2019-12-19/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-19/</guid>
      <description>Swift5.1で追加されたFunctionBuilderを使ってStructを作る方法です。 SwiftUI でも</description>
    </item>
    
    <item>
      <title>TabViewを使って画面を切り替える（SwiftUI）</title>
      <link>https://swiswiswift.com/2019-11-21/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-21/</guid>
      <description>TabViewを使って画面を切り替えるサンプルです。 かなり簡単に書くことができますね。 TabView - SwiftUI | Apple Developer Documentation</description>
    </item>
    
    <item>
      <title>ListViewからそれぞれ別のViewに遷移する（SwiftUI）</title>
      <link>https://swiswiswift.com/2019-11-20/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-20/</guid>
      <description>設定画面のようにListViewからそれぞれ別のViewに遷移する方法が少し手間でした。 もっと良い方</description>
    </item>
    
    <item>
      <title>Alamofireで受け取ったJsonをCodableを使ってパースする</title>
      <link>https://swiswiswift.com/2019-11-19/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-19/</guid>
      <description>お天気Webサービス（Livedoor Weather Web Service） の API を Alamofire から叩き、帰ってきた JSON を struct にパース</description>
    </item>
    
    <item>
      <title>SwiftUIでStructが使いまわされる</title>
      <link>https://swiswiswift.com/2019-11-14/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-14/</guid>
      <description>onDisappear で id を再生成することで回避しました。 @State に変化が無い場合はキャッシュを使い回したりするということでし</description>
    </item>
    
    <item>
      <title>SwiftUIでListを表示する</title>
      <link>https://swiswiswift.com/2019-11-13/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-13/</guid>
      <description>SwiftUI でList を表示する方法です。 画面遷移後の画面なので、NavigationBar がいます。 (adsbygoogle = window.adsbygoogle ||</description>
    </item>
    
    <item>
      <title>TableViewのセルの高さを変更する（Swift5.0.1）</title>
      <link>https://swiswiswift.com/2019-07-30/</link>
      <pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-07-30/</guid>
      <description>TableView のセルの高さを変更する方法です。 一括で帰るときは .rowHeight を使い、個別に変えたいときは heightForRowAt を使うと実現できま</description>
    </item>
    
    <item>
      <title>一定間隔の値をUISlider で取得する(Swift5.0)</title>
      <link>https://swiswiswift.com/2019-06-02/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-06-02/</guid>
      <description>0, 0.5, 1.0, 1.5 …. と一定間隔の値をUISlider で取得するサンプルコードです。 (adsbygoogle = window.adsbygoogle || []).push({}); amzn_assoc_ad_type =&#34;responsive_search_widget&#34;; amzn_assoc_tracking_id =&#34;swiswiswift-22&#34;; amzn_assoc_marketplace =&#34;amazon&#34;; amzn_assoc_region =&#34;JP&#34;;</description>
    </item>
    
    <item>
      <title>UITableViewでテーブルにアイテムを表示（Swift4.2）</title>
      <link>https://swiswiswift.com/2019-01-22/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-22/</guid>
      <description>UITableViewのクラス階層 NSObject ↑ UIResponder ↑ UIView ↑ UIScrollView ↑ UITableView AppleDeveloperリファレンスUITa</description>
    </item>
    
    <item>
      <title>NavigationControllerで画面遷移を行う（Swift4.2）</title>
      <link>https://swiswiswift.com/2019-01-21/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-21/</guid>
      <description>NavigationContorollerのサンプルコードです。 NavigationContorol</description>
    </item>
    
    <item>
      <title>NavigationControllerのRootを切り替える（Swift4.2）</title>
      <link>https://swiswiswift.com/2019-01-20/</link>
      <pubDate>Sun, 20 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-20/</guid>
      <description>(adsbygoogle = window.adsbygoogle || []).push({}); amzn_assoc_ad_type =&#34;responsive_search_widget&#34;; amzn_assoc_tracking_id =&#34;swiswiswift-22&#34;; amzn_assoc_marketplace =&#34;amazon&#34;; amzn_assoc_region =&#34;JP&#34;; amzn_assoc_placement =&#34;&#34;; amzn_assoc_search_type = &#34;search_widget&#34;;amzn_assoc_width =&#34;auto&#34;; amzn_assoc_height =&#34;auto&#34;; amzn_assoc_default_search_category =&#34;&#34;; amzn_assoc_default_search_key =&#34;&#34;;amzn_assoc_theme =&#34;light&#34;; amzn_assoc_bg_color =&#34;FFFFFF&#34;;</description>
    </item>
    
  </channel>
</rss>
