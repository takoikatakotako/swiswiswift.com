<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>すいすいSwift</title>
    <link>https://swiswiswift.com/</link>
    <description>Recent content on すいすいSwift</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 11 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://swiswiswift.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>プリンター,etc（LPIC）</title>
      <link>https://swiswiswift.com/2022-12-11/</link>
      <pubDate>Sun, 11 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-12-11/</guid>
      <description>プリンター,etc Postscript Printer Description（PPD） PPDはフォント、用紙サイズ、解像度などPos</description>
    </item>
    
    <item>
      <title>syslog,rsyslog,syslog-ng,systemd journal,logger,etc（LPIC）</title>
      <link>https://swiswiswift.com/2022-12-10/</link>
      <pubDate>Sat, 10 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-12-10/</guid>
      <description>syslog,rsyslog,syslog-ng,systemd journal システムログを収集するソフトウェアです。 syslog ファシリティ ファシリティはメッセージの生成元を表します</description>
    </item>
    
    <item>
      <title>chronyc,chronyd（LPIC）</title>
      <link>https://swiswiswift.com/2022-12-09/</link>
      <pubDate>Fri, 09 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-12-09/</guid>
      <description>chronyc,chronyd 従来のntpdデーモン、ntpdateコマンドに代わり、機能及びパフォーマンスを改善したものです。</description>
    </item>
    
    <item>
      <title>groupadd,groupdel（LPIC）</title>
      <link>https://swiswiswift.com/2022-12-08/</link>
      <pubDate>Thu, 08 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-12-08/</guid>
      <description> groupadd,groupdel groupadd $ groupadd pokemon $ cat /etc/group | grep pokemon pokemon:x:1001: groupdel $ groupdel pokemon </description>
    </item>
    
    <item>
      <title>getent（LPIC）</title>
      <link>https://swiswiswift.com/2022-12-07/</link>
      <pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-12-07/</guid>
      <description>getent ネームサービススイッチ（/etc/nsswitch.conf）の設定に従い、引数で指定したデータベ</description>
    </item>
    
    <item>
      <title>Wayland（LPIC）</title>
      <link>https://swiswiswift.com/2022-12-06/</link>
      <pubDate>Tue, 06 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-12-06/</guid>
      <description>Wayland WaylaはXに変わる新しいディスプレイサーバーです。</description>
    </item>
    
    <item>
      <title>cron,crontab,anacron,etc（LPIC）</title>
      <link>https://swiswiswift.com/2022-12-05/</link>
      <pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-12-05/</guid>
      <description>cron,crontab,anacron,etc cron crontab /etc/cron.allow, /etc/cron.deby /etc/cron.allow に記述があるユーザーはcrontabを作成することができる。 /etc/cron.deby に記述があるユーザーはcr</description>
    </item>
    
    <item>
      <title>/etc/group（LPIC）</title>
      <link>https://swiswiswift.com/2022-12-04/</link>
      <pubDate>Sun, 04 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-12-04/</guid>
      <description>/etc/group グループの設定は /etc/group に保存されています。 1 2 3 4 pokemon:x:1002:snorlax,ditto グループ名 グループパスワード。 グループID グループ</description>
    </item>
    
    <item>
      <title>/etc/passwd（LPIC）</title>
      <link>https://swiswiswift.com/2022-12-03/</link>
      <pubDate>Sat, 03 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-12-03/</guid>
      <description>/etc/passwd ユーザーのアカウント情報は /etc/passwd ファイルに保存されます。 1 2 3 4 5 6 7 snorlax:x:1000:1000:I Love Snorlax! :/home/snorlax:/bin/bash ユーザー名 パスワード。s</description>
    </item>
    
    <item>
      <title>X.org（LPIC）</title>
      <link>https://swiswiswift.com/2022-12-02/</link>
      <pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-12-02/</guid>
      <description>X.org,etc xorg.conf 設定ファイルです。 /etc/X11/xorg.conf xorg.conf.d 以下に設定ファイルが分割されて格納されている場合もあります。 /etc/X11/xorg.conf.d/* /usr/share/X11/xorg.conf.d/* ディスプレ</description>
    </item>
    
    <item>
      <title>LPIC101直前まとめ（LPIC）</title>
      <link>https://swiswiswift.com/2022-12-01/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-12-01/</guid>
      <description>LPIC101直前まとめ テスト直前に確認することを想定したページです。 setはシェル変数の一覧を表示</description>
    </item>
    
    <item>
      <title>pkill（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-30/</link>
      <pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-30/</guid>
      <description>pkill サンプル nginxを終了させる $ ps ax | grep nginx 5241 ? Ss 0:00 nginx: master process /usr/sbin/nginx 5242 ? S 0:00 nginx: worker process 5244 pts/0 S+ 0:00 grep --color=auto nginx $ pkill nginx `` $ ps</description>
    </item>
    
    <item>
      <title>parted（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-29/</link>
      <pubDate>Tue, 29 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-29/</guid>
      <description> parted </description>
    </item>
    
    <item>
      <title>gdisk（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-28/</link>
      <pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-28/</guid>
      <description>gdisk GPTに対応したパーティションの作成や削除などに使うコマンドです。</description>
    </item>
    
    <item>
      <title>chgrp（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-27/</link>
      <pubDate>Sun, 27 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-27/</guid>
      <description> chgrp </description>
    </item>
    
    <item>
      <title>cpio（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-26/</link>
      <pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-26/</guid>
      <description>cpio ファイルをアーカイブファイルにコピーしたり、アーカイブからファイルをコピーします。</description>
    </item>
    
    <item>
      <title>debugfs（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-25/</link>
      <pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-25/</guid>
      <description>debugfs ex2, ex3, ex4ファイルシステムのファイワ的なデバッガツールです。</description>
    </item>
    
    <item>
      <title>systemd（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-24/</link>
      <pubDate>Thu, 24 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-24/</guid>
      <description>systemd サンプル nginxサービスを起動する $ systemctl start nginx.service nginxサービスを停止する $ systemctl stop nginx.service nginxサービス</description>
    </item>
    
    <item>
      <title>SysVinit（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-23/</link>
      <pubDate>Wed, 23 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-23/</guid>
      <description>SysVinit SysVinitの起動手順 init が /etc/inittab ファイルを読み込む init が /etc/rc.sysinit スクリプトを読み込む init が /etc/rcスク</description>
    </item>
    
    <item>
      <title>dd（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-22/</link>
      <pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-22/</guid>
      <description>dd 入力側に指定したファイルからの入力をファイルもしくは標準出力に送るコマンドです。</description>
    </item>
    
    <item>
      <title>shutdown（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-21/</link>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-21/</guid>
      <description>shutdown オプション -r 再起動する。 -h シャットダウン後システムを停止する。 -k 実際にはシャットダウンを行なわず、</description>
    </item>
    
    <item>
      <title>journalctl（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-20/</link>
      <pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-20/</guid>
      <description>journalctl systemd-journaldが収集したログを表示するためのコマンドです。 サンプル 保管されている</description>
    </item>
    
    <item>
      <title>ntpd,ntpdate,etc（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-19/</link>
      <pubDate>Sat, 19 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-19/</guid>
      <description>ntpd,ntpdate,etc ntpd NTPにより時刻の同期を取るデーモンです。 /etc/ntp.conf ntpdの設定ファイルです。 オプション driftfile restrict server リモート</description>
    </item>
    
    <item>
      <title>hwclock（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-18/</link>
      <pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-18/</guid>
      <description>hwclock ハードウェアクロックをシステムクロックに合わせる $ hwclock -u --systohc システムクロックをハードウェアクロックに合</description>
    </item>
    
    <item>
      <title>chage（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-17/</link>
      <pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-17/</guid>
      <description>change サンプル snorlaxユーザーのパスワードの有効期限を調べる $ chage -l snorlax snorlaxのパスワードの有</description>
    </item>
    
    <item>
      <title>date（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-16/</link>
      <pubDate>Wed, 16 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-16/</guid>
      <description>date サンプル 現在時間を表示 $ date Tue Aug 23 05:19:08 PM JST 2022 日付が入りでファイルを生成 $ touch `date &amp;#34;+%Y%m%d-snorlax.txt&amp;#34;` UTCで現在時刻を表示 $</description>
    </item>
    
    <item>
      <title>userdel（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-15/</link>
      <pubDate>Tue, 15 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-15/</guid>
      <description>userdel ユーザーを削除するコマンドです。 サンプル snorlaxユーザーを削除する（snorlaxのホームデ</description>
    </item>
    
    <item>
      <title>zypper（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-14/</link>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-14/</guid>
      <description>zypper Libzyppライブラリを利用したコマンドラインによるパッケージ管理ツールです。 サンプル</description>
    </item>
    
    <item>
      <title>at,batch（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-13/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-13/</guid>
      <description>at,batch 指定したコマンドを1回だけ実行するコマンドです。 at /etc/at.allow /etc/at.allow に登録されたユーザーは、atコマンドとbat</description>
    </item>
    
    <item>
      <title>BIOSとUEFI（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-12/</link>
      <pubDate>Sat, 12 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-12/</guid>
      <description>BIOSとUEFI BIOS、UEFIはマザーボードに搭載されているプログラムです。 UEFIはBIOS</description>
    </item>
    
    <item>
      <title>/etc/hostsでホスト名とIPアドレスを対応させる（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-11/</link>
      <pubDate>Fri, 11 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-11/</guid>
      <description>/etc/hostsでホスト名とIPアドレスを対応させる</description>
    </item>
    
    <item>
      <title>wall（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-10/</link>
      <pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-10/</guid>
      <description> wall </description>
    </item>
    
    <item>
      <title>uname（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-09/</link>
      <pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-09/</guid>
      <description> uname </description>
    </item>
    
    <item>
      <title>systemctl（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-08/</link>
      <pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-08/</guid>
      <description>systemctl サンプル sshd.serviceを開始する $ systemctl start sshd.service システム起動時にsshd.serviceを自動起</description>
    </item>
    
    <item>
      <title>init, telinit（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-07/</link>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-07/</guid>
      <description>init, telinit ランレベルを変更するコマンドです。</description>
    </item>
    
    <item>
      <title>dd（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-06/</link>
      <pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-06/</guid>
      <description>dd サンプル</description>
    </item>
    
    <item>
      <title>GRUB（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-05/</link>
      <pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-05/</guid>
      <description>GRUB ブートローダーです。 GRUBの設定ファイルは /boot/grub/menu.lst と /boot/grub/grub.conf です。 設定項目 default デフォルトで起動するOSを定義す</description>
    </item>
    
    <item>
      <title>GPTとMBR（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-04/</link>
      <pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-04/</guid>
      <description>GPTとMBR MBRとGPTは、マスターブートレコード（Master Boot Record）とGUIDパーテ</description>
    </item>
    
    <item>
      <title>ACPI（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-03/</link>
      <pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-03/</guid>
      <description>Advanced Configuration and Power Interface（ACPI） ACPIはPC/AT互換機の電源制御の統一規格として採用された</description>
    </item>
    
    <item>
      <title>modprobe（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-02/</link>
      <pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-02/</guid>
      <description>modprobe 指定したモジュールの依存関係を確認し、必要なモジュールを自動的に追加、もしくは削除します。 モジュー</description>
    </item>
    
    <item>
      <title>システムアーキテクチャ（LPIC）</title>
      <link>https://swiswiswift.com/2022-11-01/</link>
      <pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-11-01/</guid>
      <description>システムアーキテクチャ PCI PCI Express USB eDP DDR SDRAM</description>
    </item>
    
    <item>
      <title>type（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-31/</link>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-31/</guid>
      <description>type コマンドのパスや種類を表示するときに使うコマンドです。 WindowsとLinuxでは挙動が異なりま</description>
    </item>
    
    <item>
      <title>xfs_repair（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-30/</link>
      <pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-30/</guid>
      <description>xfs_repair XFSファイルシステムを検査、修復するコマンドです。</description>
    </item>
    
    <item>
      <title>fsck,e2fsck（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-29/</link>
      <pubDate>Sat, 29 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-29/</guid>
      <description>fsck,e2fsck ファイルシステムにエラーがないかどうかのチェックと修復を行うコマンドです。 オプション -A /etc/f</description>
    </item>
    
    <item>
      <title>tune2fs（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-28/</link>
      <pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-28/</guid>
      <description>tune2fs ext2/ext3/ext4 ファイルシステムのパラメーターを調整するコマンドです。 オプション -c [回数] チェックなしでマウント</description>
    </item>
    
    <item>
      <title>man（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-27/</link>
      <pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-27/</guid>
      <description>man コマンドのマニュアルを表示するためのコマンドです。 オプション -a すべてのセクションのmanページが表</description>
    </item>
    
    <item>
      <title>特殊文字のエスケープ（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-26/</link>
      <pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-26/</guid>
      <description>xargs 標準入力から受け取った値を引数に渡すコマンドです。 サンプル ls に &amp;lsquo;-li&amp;rsquo; を渡して実行する ls -li と同等です。 $</description>
    </item>
    
    <item>
      <title>特殊文字のエスケープ（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-25/</link>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-25/</guid>
      <description>エスケープ バックスラッシュ \ で特殊文字はエスケープできます。 サンプル (^^)/ をechoで出力する $ echo \\\(^^\)\/ $ echo</description>
    </item>
    
    <item>
      <title>正規表現（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-24/</link>
      <pubDate>Mon, 24 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-24/</guid>
      <description>正規表現 ## サンプル 以下のようなファイルからNginxという文字列が入った行を抽出する logNginx0 logNginx1 logApache0 logNginx2 logApache1 logDatadog0 $ grep</description>
    </item>
    
    <item>
      <title>stat（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-23/</link>
      <pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-23/</guid>
      <description>stat ファイルやディレクトリの属性や日付、iノード番号などを表示するコマンドです。 サンプル $ stat file.txt 16777222 84363776 -rw-r--r-- 1</description>
    </item>
    
    <item>
      <title>変数の展開（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-22/</link>
      <pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-22/</guid>
      <description>変数の展開 ダブルクオート内で変数を展開する $ echo &amp;#34;I am ${USER}.&amp;#34; I am snorlax. 鉤括弧を使わなくても変数を展開できます。 $</description>
    </item>
    
    <item>
      <title>split（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-21/</link>
      <pubDate>Fri, 21 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-21/</guid>
      <description> split </description>
    </item>
    
    <item>
      <title>シェル変数と環境変数の違い（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-20/</link>
      <pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-20/</guid>
      <description>シェル変数と環境変数の違い シェル変数と環境変数を設定します。 $ export POKEMON_ENV=Snorlax # 環境変数を設定 $ POKEMON_SHELL=Ditto # シェル変数を</description>
    </item>
    
    <item>
      <title>lscpu（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-19/</link>
      <pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-19/</guid>
      <description>lscpu CPUの情報を表示するコマンドです。 /proc/cpuinfo にもCPUの情報が格納されています。</description>
    </item>
    
    <item>
      <title>/etc/fstab（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-18/</link>
      <pubDate>Tue, 18 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-18/</guid>
      <description>/etc/fstab マウントするファイルシステムとマウントポイント、マウント時に指定するオプションなどmountコマン</description>
    </item>
    
    <item>
      <title>umount（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-17/</link>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-17/</guid>
      <description>umount ファイルシステムをルートファイルシステムから切り離す（アンマウントする）ためのコマンドです。 オプシ</description>
    </item>
    
    <item>
      <title>lsblk（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-16/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-16/</guid>
      <description>lsblk 利用可能なブロックデバイスの一覧を表示するコマンドです。 サンプル 利用可能なブロックデバイスの一覧を</description>
    </item>
    
    <item>
      <title>複数の画像をpdfに変換する</title>
      <link>https://swiswiswift.com/2022-10-15/</link>
      <pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-15/</guid>
      <description>複数の画像をpdfに変換する方法です。 ImageMagicがインストールされていない場合はインストー</description>
    </item>
    
    <item>
      <title>Conohaでディスクを追加する</title>
      <link>https://swiswiswift.com/2022-10-14/</link>
      <pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-14/</guid>
      <description>Conohaでディスクを追加する方法です。 まずはサーバーを立ち上げ、ファイルシステムの使用状況を確認</description>
    </item>
    
    <item>
      <title>wall（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-13/</link>
      <pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-13/</guid>
      <description> wall </description>
    </item>
    
    <item>
      <title>uname（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-12/</link>
      <pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-12/</guid>
      <description> uname </description>
    </item>
    
    <item>
      <title>telinit（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-11/</link>
      <pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-11/</guid>
      <description> telinit </description>
    </item>
    
    <item>
      <title>init（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-10/</link>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-10/</guid>
      <description> init </description>
    </item>
    
    <item>
      <title>dmesg（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-09/</link>
      <pubDate>Sun, 09 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-09/</guid>
      <description>dmesg システム起動時にカーネルが画面に表示するメッセージを表示するコマンドです。 メッセージを表示 $ dmesg [269117.247721] [UFW</description>
    </item>
    
    <item>
      <title>dmesg（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-08/</link>
      <pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-08/</guid>
      <description> dmesg </description>
    </item>
    
    <item>
      <title>ブートローダー（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-07/</link>
      <pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-07/</guid>
      <description>ブートローダー</description>
    </item>
    
    <item>
      <title>ハードウェア（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-06/</link>
      <pubDate>Thu, 06 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-06/</guid>
      <description>ハードウェア</description>
    </item>
    
    <item>
      <title>lsmod（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-05/</link>
      <pubDate>Wed, 05 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-05/</guid>
      <description>lsmod 現在システムにロードされているモジュールの状態を表示するコマンドです。 またモジュールの状態は /proc/modules に格</description>
    </item>
    
    <item>
      <title>lsusb（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-04/</link>
      <pubDate>Tue, 04 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-04/</guid>
      <description>lsusb USBバスと、接続されているデバイスに関する情報を表示します。 $ lsusb Bus 001 Device 002: ID 0627:0001 Adomax Technology Co., Ltd QEMU USB Tablet Bus 001 Device</description>
    </item>
    
    <item>
      <title>lspci（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-03/</link>
      <pubDate>Mon, 03 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-03/</guid>
      <description>lspci システムのすべてのPCIバスと、接続されているデバイスに関する情報を表示するコマンドです。 $ lspci 00:00.0 Host</description>
    </item>
    
    <item>
      <title>仮想マシン（VM）とコンテナ（LXC）（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-02/</link>
      <pubDate>Sun, 02 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-02/</guid>
      <description>仮想マシン（VM）とコンテナ（LXC）</description>
    </item>
    
    <item>
      <title>apt-get（LPIC）</title>
      <link>https://swiswiswift.com/2022-10-01/</link>
      <pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-10-01/</guid>
      <description>apt-get サブコマンド install upgrade update dist-upgrade remove apt-get update と apt-get upgrade と apt-get dist-upgrade の違い apt-get update パッケージのリストを更新する インストールされている</description>
    </item>
    
    <item>
      <title>uniq（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-30/</link>
      <pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-30/</guid>
      <description>uniq 重複する内容の行を1行にまとめることができます。 ソートされていない場合は事前にソートする必要があり</description>
    </item>
    
    <item>
      <title>dselect（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-29/</link>
      <pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-29/</guid>
      <description> dselect </description>
    </item>
    
    <item>
      <title>dpkg,etc（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-28/</link>
      <pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-28/</guid>
      <description>dpkg オプション -l, &amp;ndash;list インストール済みの全debパッケージの情報を表示します。 -s, &amp;ndash;status 指定したパッケージの情報</description>
    </item>
    
    <item>
      <title>id（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-27/</link>
      <pubDate>Tue, 27 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-27/</guid>
      <description> id </description>
    </item>
    
    <item>
      <title>SGID（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-26/</link>
      <pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-26/</guid>
      <description> SUID </description>
    </item>
    
    <item>
      <title>SUID（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-25/</link>
      <pubDate>Sun, 25 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-25/</guid>
      <description> SUID </description>
    </item>
    
    <item>
      <title>adduser（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-24/</link>
      <pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-24/</guid>
      <description>adduser 対話形式でユーザーを作成するコマンドです。</description>
    </item>
    
    <item>
      <title>userdel（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-23/</link>
      <pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-23/</guid>
      <description>userdel ユーザーを削除するコマンドです。</description>
    </item>
    
    <item>
      <title>Linuxのファイル（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-22/</link>
      <pubDate>Thu, 22 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-22/</guid>
      <description>Linuxのファイル /etc/apt/sources.list Debian系のパッケージのダウンロード先（リポジトリ）が書かれたファイル /etc/fstab デ</description>
    </item>
    
    <item>
      <title>mount（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-21/</link>
      <pubDate>Wed, 21 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-21/</guid>
      <description>mount オプション -a /etc/fstab ファイルに記載されているファイルシステムをすべてマウントする。 -r ファイスシステムを読</description>
    </item>
    
    <item>
      <title>mkfs（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-20/</link>
      <pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-20/</guid>
      <description>mkfs,mke2fs ファイルシステムの作成（初期化）を行うコマンドです。 オプション -t ファイルシステムのタイプを指定しま</description>
    </item>
    
    <item>
      <title>ファイルシステム（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-19/</link>
      <pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-19/</guid>
      <description>ファイルシステム ext ext2 ext3 ext4 reiserfs ジャーナル機能を持ったファイルシステム。 ディスクの使用効率が良く、クラッシ</description>
    </item>
    
    <item>
      <title>passwd（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-18/</link>
      <pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-18/</guid>
      <description>passwd パスワードの変更を行うコマンドです。 サンプル snorlaxのパスワードを設定する $ passwd snorlax snorla</description>
    </item>
    
    <item>
      <title>useradd（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-17/</link>
      <pubDate>Sat, 17 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-17/</guid>
      <description>useradd,usermod,userdel ユーザーを追加したり、削除したりするコマンドです。 useradd ユーザーを追加するためのコマンドです。 似たコマ</description>
    </item>
    
    <item>
      <title>シェルスクリプト（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-16/</link>
      <pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-16/</guid>
      <description>シェルスクリプト シェル上で実行できるプログラミング言語です。 変数 $$ シェルのPID $? 最後に時効したコマ</description>
    </item>
    
    <item>
      <title>シェル変数（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-15/</link>
      <pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-15/</guid>
      <description>シェル変数 さまざまなシェル変数についてです。 特殊なシェル変数 $$ シェルのPID $? 最後に実行したコマンド</description>
    </item>
    
    <item>
      <title>unalias（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-14/</link>
      <pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-14/</guid>
      <description>unalias エイリアスを解除するコマンドです。 サンプル $ alias snorlax=&amp;#39;echo Snorlax&amp;#39; $ snorlax Snorlax $ unalias snorlax $ snorlax zsh: command not found: snorlax</description>
    </item>
    
    <item>
      <title>alias（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-13/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-13/</guid>
      <description>alias エイリアスを設定するコマンドです。 サンプル $ alias snorlax=&amp;#39;echo Snorlax&amp;#39; $ snorlax Snorlax</description>
    </item>
    
    <item>
      <title>SSHキーを設定する（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-12/</link>
      <pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-12/</guid>
      <description>SSHキーを設定する サーバー側で鍵を生成し、クライアント側にダウンロードする方法です。 ubuntuで</description>
    </item>
    
    <item>
      <title>profile、.bash_profile、.profile、.bash_login（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-11/</link>
      <pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-11/</guid>
      <description>bash Linuxでコマンドなどの命令文を記述したシェルを実行するために使われます。 /etc/profil</description>
    </item>
    
    <item>
      <title>rpm2cpio（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-09/</link>
      <pubDate>Fri, 09 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-09/</guid>
      <description>rpm2cpio rpmコマンドをcpioアーカイブ形式に変換し、標準出力に出力するコマンドです。 サンプル rpmコマ</description>
    </item>
    
    <item>
      <title>yum,etc（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-08/</link>
      <pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-08/</guid>
      <description>yum yum update と yum upgrade の違い yum update はインストール済みのパッケージをアップデートするコマンドです。 yum upgrade は yum update --obsoletes と同</description>
    </item>
    
    <item>
      <title>rpm（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-07/</link>
      <pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-07/</guid>
      <description>rpm Red Hat Linux や Fedora linux、CentOS などの Red Hat 系のディストリビューションで採用されているパッケージ管</description>
    </item>
    
    <item>
      <title>ldd（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-06/</link>
      <pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-06/</guid>
      <description>ldd lddコマンドは共有ライブラリへの依存関係を表示するコマンドです。 サンプル /usr/bin/slが</description>
    </item>
    
    <item>
      <title>ldconfig（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-05/</link>
      <pubDate>Mon, 05 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-05/</guid>
      <description>ldconfig リンクの作成やライブラリのキャッシュを行うコマンドです。 ldconfig を実行すると /etc/ld.so.conf に基づいて /etc/ld.so.cache を再構築します</description>
    </item>
    
    <item>
      <title>whereis（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-04/</link>
      <pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-04/</guid>
      <description>whereis 指定されたコマンドのバイナリー、ソース、マニュアルページの場所を表示するコマンドです。 サンプル sl</description>
    </item>
    
    <item>
      <title>which（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-03/</link>
      <pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-03/</guid>
      <description>which 指定されたコマンドがどのディレクトリに格納されているかを、PATH環境変数で指定されたディレクトリ</description>
    </item>
    
    <item>
      <title>locate,updatedb（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-02/</link>
      <pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-02/</guid>
      <description>locate,updatedb locateはファイルを名前で検索するコマンドです。 updatedbはlocate用の検索データベ</description>
    </item>
    
    <item>
      <title>find（LPIC）</title>
      <link>https://swiswiswift.com/2022-09-01/</link>
      <pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-09-01/</guid>
      <description>find 指定したディレクトリ以下で、指定した検索条件に合致するファイルを検索するコマンドです。 オプション -name</description>
    </item>
    
    <item>
      <title>ln（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-31/</link>
      <pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-31/</guid>
      <description>ln ファイルへのリンクを作成するコマンドです。 ハードリンクとシンボリックリンクの違い 複数の実名を付ける</description>
    </item>
    
    <item>
      <title>chgrep（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-30/</link>
      <pubDate>Tue, 30 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-30/</guid>
      <description>chgrep 指定されたファイルの所有者と所有グループを変更します。</description>
    </item>
    
    <item>
      <title>chown（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-29/</link>
      <pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-29/</guid>
      <description>chown 指定されたファイルの所有者とグループを変更します。 オプション -R ディレクトリのみに指定が可能であり、</description>
    </item>
    
    <item>
      <title>umask（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-28/</link>
      <pubDate>Sun, 28 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-28/</guid>
      <description>umask デフォルトのパーミッションを決定するumask値を確認、設定するコマンドです。 ファイルの場合は66</description>
    </item>
    
    <item>
      <title>chmod（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-27/</link>
      <pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-27/</guid>
      <description>chmod ファイルやディレクトリに設定されているパーミッションを変更するコマンドです。 オプション -R ディレクト</description>
    </item>
    
    <item>
      <title>パーミッション（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-26/</link>
      <pubDate>Fri, 26 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-26/</guid>
      <description>パーミッション ディレクトリやファイルなどを操作するための権限です。 パーミッションの読み方 左からファイ</description>
    </item>
    
    <item>
      <title>groups（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-25/</link>
      <pubDate>Thu, 25 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-25/</guid>
      <description>groups ユーザーのグループを表示するコマンドです。 サンプル snorlaxのグループを表示する $ groups snorlax</description>
    </item>
    
    <item>
      <title>du（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-24/</link>
      <pubDate>Wed, 24 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-24/</guid>
      <description>du ファイル、ディレクトリの使用容量の表示するコマンドです。 オプション -a ディレクトリだけでなく、すべて</description>
    </item>
    
    <item>
      <title>df（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-23/</link>
      <pubDate>Tue, 23 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-23/</guid>
      <description>df ファイルシステムの使用状況を表示するコマンドです。 オプション -k KB単位で表示する -h 容量に合わせた適</description>
    </item>
    
    <item>
      <title>fdisk（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-22/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-22/</guid>
      <description>fdisk パーティションを作成、削除するコマンドです。 オプション -d 領域を削除 -l パーテションのタイプを表示 -m 利</description>
    </item>
    
    <item>
      <title>pvcreate（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-21/</link>
      <pubDate>Sun, 21 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-21/</guid>
      <description>pvcreate Logical Volume Manage（LVM）は複数のハードディスクやパーティションにまたがった記憶領域を、あたかも一</description>
    </item>
    
    <item>
      <title>Filesystem Hierarcchy Standard（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-20/</link>
      <pubDate>Sat, 20 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-20/</guid>
      <description>Filesystem Hierarcchy Standard Filesystem Hierarcchy Standard（FHS）はディレクトリ構造の標準を定めた仕様書です。 / ファイルシステムの</description>
    </item>
    
    <item>
      <title>tmux（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-19/</link>
      <pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-19/</guid>
      <description>tmux tmuxは、1画面で複数の端末（ターミナル）を操作できるアプリケーションです。</description>
    </item>
    
    <item>
      <title>watch（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-18/</link>
      <pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-18/</guid>
      <description>watch 指定されたコマンドを繰り返し実行するコマンドです。 サンプル 5秒ごとに echo &amp;ldquo;snorlax&amp;rdquo; を実行するコマンド # wip 動く</description>
    </item>
    
    <item>
      <title>killall（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-17/</link>
      <pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-17/</guid>
      <description>killall プロセス名を指定してシグナルを送信する際に使用するコマンドです。 主なシグナル SIGUP シグナル番号1、端末</description>
    </item>
    
    <item>
      <title>kill（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-16/</link>
      <pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-16/</guid>
      <description>kill シグナルを送信し、プロセスを終了させるためのコマンドです。 主なシグナル SIGUP シグナル番号1、端末の切断</description>
    </item>
    
    <item>
      <title>nohup（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-15/</link>
      <pubDate>Mon, 15 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-15/</guid>
      <description>nohup ログアウトしてもプログラムを実行し続けるためのコマンドです。 ## サンプル バックグラウンドで sl コマンド</description>
    </item>
    
    <item>
      <title>jobs（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-14/</link>
      <pubDate>Sun, 14 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-14/</guid>
      <description>jobs 実行中のジョブを表示するコマンドです。</description>
    </item>
    
    <item>
      <title>bg（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-13/</link>
      <pubDate>Sat, 13 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-13/</guid>
      <description>bg 指定したジョブをバックグラウンドに移行します。</description>
    </item>
    
    <item>
      <title>fg（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-12/</link>
      <pubDate>Fri, 12 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-12/</guid>
      <description>fg 指定したジョブをフォアグラウンドに移行します。</description>
    </item>
    
    <item>
      <title>renice（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-11/</link>
      <pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-11/</guid>
      <description>renice 動作中のプロセスの優先度を変更します。</description>
    </item>
    
    <item>
      <title>nice（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-10/</link>
      <pubDate>Wed, 10 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-10/</guid>
      <description>nice プロセスの優先度をデフォルトから変更して実行するコマンドです。 nice値は -20~19 の値で変更可能です。 n</description>
    </item>
    
    <item>
      <title>ps（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-09/</link>
      <pubDate>Tue, 09 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-09/</guid>
      <description>ps プロセスの情報を得るコマンドです。 BSDでのオプション a すべてのプロセスを表示する u 詳細情報を表示</description>
    </item>
    
    <item>
      <title>vi（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-08/</link>
      <pubDate>Mon, 08 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-08/</guid>
      <description>vi ファイルの作成、編集を行うコマンド（エディタ）です。 コマンドモード、入力モード、exモードを使い分</description>
    </item>
    
    <item>
      <title>fgrep（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-07/</link>
      <pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-07/</guid>
      <description>fgrep fgrepは正規表現を使用せずに検索したい時に使用します。 grep コマンドではこのように正規表現を使って</description>
    </item>
    
    <item>
      <title>pgrep（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-06/</link>
      <pubDate>Sat, 06 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-06/</guid>
      <description>pgrep 現在実行中のプロセスを調べて、ユーザー名、UID、GIDなどを元にプロセスIDを検索します。 オプシ</description>
    </item>
    
    <item>
      <title>sha256sum（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-05/</link>
      <pubDate>Fri, 05 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-05/</guid>
      <description>sha256sum SHA256ハッシュ値を求めるコマンドです。 $ sha256sum file.txt e1134eadacc182c3838b5121687b4cbb6a2fa46d18aeeb7ab09f3752766a9c56 file.txt sha512sum SHA512ハッシュ値を求めるコマンドです</description>
    </item>
    
    <item>
      <title>od（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-03/</link>
      <pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-03/</guid>
      <description>od ファイルの内容を8進数で表示するコマンドです。 オプション -d Decimal（10進数）で表示する -x Hexa</description>
    </item>
    
    <item>
      <title>wc（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-02/</link>
      <pubDate>Tue, 02 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-02/</guid>
      <description>wc テキストファイルの文字数や行数を数えるコマンドです。 オプション -c バイト数だけを出力する。 -l 行数だけ</description>
    </item>
    
    <item>
      <title>tr（LPIC）</title>
      <link>https://swiswiswift.com/2022-08-01/</link>
      <pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-08-01/</guid>
      <description>cut ファイル内の行中の特定部分のみを取り出すコマンドです。 オプション -c 指定された位置の各文字だけを表示</description>
    </item>
    
    <item>
      <title>tr（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-31/</link>
      <pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-31/</guid>
      <description>sed テキストを置換するコマンドです。 オプション -i 編集結果をファイルに書き込む。 サンプル pokemons</description>
    </item>
    
    <item>
      <title>tr（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-30/</link>
      <pubDate>Sat, 30 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-30/</guid>
      <description>tr 標準入力であるキーボードから入力した文字を指定した文字に変換し、標準出力であるディスプレイに表示し</description>
    </item>
    
    <item>
      <title>tail（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-29/</link>
      <pubDate>Fri, 29 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-29/</guid>
      <description>tail テキストファイルの末尾部分を表示するコマンドです。 デフォルトでは10行目まで表示します。 オプション</description>
    </item>
    
    <item>
      <title>head（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-28/</link>
      <pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-28/</guid>
      <description>head テキストファイルの先頭部分を表示するコマンドです。 デフォルトでは10行目まで表示します。 オプション</description>
    </item>
    
    <item>
      <title>grep（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-27/</link>
      <pubDate>Wed, 27 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-27/</guid>
      <description>grep テキストデータ内の文字列検索を行うコマンドです。 オプション -v パターンに一致しない行を表示する -n 行番</description>
    </item>
    
    <item>
      <title>コマンドを続けて実行する（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-26/</link>
      <pubDate>Tue, 26 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-26/</guid>
      <description>コマンドを続けて実行する 複数のコマンドを続けて実行する方法です。 サンプル ;の前のコマンドの終了コード</description>
    </item>
    
    <item>
      <title>tee（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-25/</link>
      <pubDate>Mon, 25 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-25/</guid>
      <description>tee 標準入力から読み込んだデータ尾を標準出力とファイルの両方に出力するコマンドです。 サンプル pokemons.txt を行番号</description>
    </item>
    
    <item>
      <title>リダイレクト（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-24/</link>
      <pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-24/</guid>
      <description>リダイレクト リダイレクトをすることで出力結果やエラーをテキストファイルに出力したりすることができます</description>
    </item>
    
    <item>
      <title>cat（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-23/</link>
      <pubDate>Sat, 23 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-23/</guid>
      <description>cat cat はテキストを表示するために使うコマンドです。 オプション -n 行番号を表示します。 サンプル file.txt を表示する</description>
    </item>
    
    <item>
      <title>less（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-22/</link>
      <pubDate>Fri, 22 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-22/</guid>
      <description>less less は1画面に収まらないような長いテキストを表示するために使うコマンドです。 似たコマンドに more がありま</description>
    </item>
    
    <item>
      <title>more（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-21/</link>
      <pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-21/</guid>
      <description>more more は1画面に収まらないような長いテキストを表示するために使うコマンドです。 似たコマンドに less がありま</description>
    </item>
    
    <item>
      <title>xz,unxz（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-20/</link>
      <pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-20/</guid>
      <description>xz,unxz xz は圧縮に、unxz は解凍に使われるコマンドです。 サンプル file1.txt をxzで圧縮する $ xz file1.txt file1.txt.xz が生成され、f</description>
    </item>
    
    <item>
      <title>bzip2,bunzip2（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-19/</link>
      <pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-19/</guid>
      <description>bzip2,bunzip2 bzip2 は圧縮に、bunzip2 は解凍に使われるコマンドです。 サンプル file1.txt をbzip2で圧縮する $ bzip2 file1.txt file1.txt.bz2 が</description>
    </item>
    
    <item>
      <title>gzip, gunzip（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-18/</link>
      <pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-18/</guid>
      <description>gzip, gunzip gzip は圧縮に、gunzip は解凍に使われるコマンドです。 サンプル file1.txt をgzipで圧縮する $ gzip file1.txt file1.txt.gz が生</description>
    </item>
    
    <item>
      <title>tar（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-17/</link>
      <pubDate>Sun, 17 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-17/</guid>
      <description>tar アーカイブファイルの管理に使用するコマンドです。 オプション -c アーカイブファイルを作成する -t アーカイ</description>
    </item>
    
    <item>
      <title>chsh（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-16/</link>
      <pubDate>Sat, 16 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-16/</guid>
      <description>chsh ユーザーをログインをできないようにするコマンドです。 サンプル ユーザーを対話的なログインをできないよ</description>
    </item>
    
    <item>
      <title>JavaScriptで数値か文字列か判定する</title>
      <link>https://swiswiswift.com/2022-07-15/</link>
      <pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-15/</guid>
      <description>JavaScriptで数値か文字列か判定する方法です。 isNaN() を使うと数値化文字列か判定することができます</description>
    </item>
    
    <item>
      <title>UICollectionViewでContextMenuを使う</title>
      <link>https://swiswiswift.com/2022-07-14/</link>
      <pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-14/</guid>
      <description>UICollectionViewでContextMenuを使う方法です。 セルを長押しするとConte</description>
    </item>
    
    <item>
      <title>Terraformを使ってサーバーレスでサービスを作成したので振り返る</title>
      <link>https://swiswiswift.com/2022-07-13/</link>
      <pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-13/</guid>
      <description>はじめに 個人開発でサービスを作るのが趣味です。 Terraform, Lambda, DynamoDBを使ってサーバーレスで簡単なービス</description>
    </item>
    
    <item>
      <title>EC2インスタンスのバックアップを作成する（AMI）</title>
      <link>https://swiswiswift.com/2022-07-12/</link>
      <pubDate>Tue, 12 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-12/</guid>
      <description>EC2インスタンスのバックアップを作成する方法です。 EC2インスタンスをバックアップする方法はいくつ</description>
    </item>
    
    <item>
      <title>メタキャラクター（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-11/</link>
      <pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-11/</guid>
      <description>メタキャラクター メタキャラクターは特別な意味や役割を持つ文字です。 サンプル .txt拡張子を持つファイ</description>
    </item>
    
    <item>
      <title>fileコマンド（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-10/</link>
      <pubDate>Sun, 10 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-10/</guid>
      <description>file ファイルの種類を調べるコマンドです。 オプション -i MINEタイプで表示する サンプル file.txt のファイルの種類</description>
    </item>
    
    <item>
      <title>touchコマンド（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-09/</link>
      <pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-09/</guid>
      <description>touch ファイルを作成するコマンドです。 サンプル hello.txtを作る $ touch hello.txt タイムスタンプを指定してhe</description>
    </item>
    
    <item>
      <title>rmdirコマンド（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-08/</link>
      <pubDate>Fri, 08 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-08/</guid>
      <description>rmdir ディレクトリを削除するコマンドです。 サンプル helloディレクトリを削除する $ rmdir hello helloディレ</description>
    </item>
    
    <item>
      <title>rmコマンド（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-07/</link>
      <pubDate>Thu, 07 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-07/</guid>
      <description>rm ファイルを削除するコマンドです。 オプション -i ファイルを削除する前にユーザーへ確認する -f ユーザーへの</description>
    </item>
    
    <item>
      <title>mkdirコマンド（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-06/</link>
      <pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-06/</guid>
      <description>mkdir mkdirはディレクトリを作成するコマンドです。 サンプル helloディレクトリを作成する $ mkdir hello</description>
    </item>
    
    <item>
      <title>mvコマンド（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-05/</link>
      <pubDate>Tue, 05 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-05/</guid>
      <description>mv ファイルやディレクトリの移動に使用するコマンドです。 memo.txt を memo2.txt にリネームする $ mv memo.txt memo2.txt /tmp/snorlax ディレクトリにあ</description>
    </item>
    
    <item>
      <title>cpコマンド（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-04/</link>
      <pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-04/</guid>
      <description>cp ファイルやディレクトリを複製する場合に使うコマンドです。 オプション -i コピー先に同名ファイルが存在す</description>
    </item>
    
    <item>
      <title>lsコマンド（LPIC）</title>
      <link>https://swiswiswift.com/2022-07-03/</link>
      <pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-03/</guid>
      <description>ls ファイルやディレクトリの情報を一覧表示するコマンドです。 オプション -F ファイルタイプを表す記号の表示</description>
    </item>
    
    <item>
      <title>LPICレベル1で出てくるLinuxコマンドのまとめ</title>
      <link>https://swiswiswift.com/2022-07-02/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-02/</guid>
      <description>LPICレベル1で出てくるLinuxコマンドのまとめです。 bzip2,bunzip2 bzip2 は圧縮に、bunzip2 は解凍に使われ</description>
    </item>
    
    <item>
      <title>curlでLambdaの関数URLにデータ付きでリクエストを送る</title>
      <link>https://swiswiswift.com/2022-07-01/</link>
      <pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-07-01/</guid>
      <description>curlでLambdaの関数URLにリクエストを送る方法です。 Lambdaと関数URLの作成方法は こ</description>
    </item>
    
    <item>
      <title>Swiftのasync,awaitを使ってAPIと画像を取得し、全てが揃ってから表示する</title>
      <link>https://swiswiswift.com/2022-06-16/</link>
      <pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-16/</guid>
      <description>Swiftのasync,awaitを使ってAPIと画像を取得し、全てが揃ってから表示する方法です。</description>
    </item>
    
    <item>
      <title>Swiftのasync,awaitを使ってAPIをフェッチする</title>
      <link>https://swiswiswift.com/2022-06-15/</link>
      <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-15/</guid>
      <description>Swiftのasync,awaitを使ってAPIをフェッチする方法です。 従来のClosureを使った</description>
    </item>
    
    <item>
      <title>ECS-EC2でnginxを動かす</title>
      <link>https://swiswiswift.com/2022-06-14/</link>
      <pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-14/</guid>
      <description>ECS-EC2でnginxを動かす方法です。 ロール作成 ECSで使用するロール、sample-ecs-</description>
    </item>
    
    <item>
      <title>CodeBuildでC言語をビルドする</title>
      <link>https://swiswiswift.com/2022-06-13/</link>
      <pubDate>Mon, 13 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-13/</guid>
      <description>CodeBuildでC言語をビルドする方法です。 C言語を書き、main.c というファイル名で保存しま</description>
    </item>
    
    <item>
      <title>AWSでEC2をプライベートサブネットに設置する</title>
      <link>https://swiswiswift.com/2022-06-12/</link>
      <pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-12/</guid>
      <description>AWSでEC2をプライベートサブネットに設置する方法です。 Private-Subnetを作成します。</description>
    </item>
    
    <item>
      <title>Dockerイメージを作成してECSで動かす</title>
      <link>https://swiswiswift.com/2022-06-11/</link>
      <pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-11/</guid>
      <description>Dockerイメージを作成してECSで動かします。 Dockerのおさらいとnginxイメージについて</description>
    </item>
    
    <item>
      <title>シェル変数と環境変数</title>
      <link>https://swiswiswift.com/2022-06-10/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-10/</guid>
      <description>シェル変数と環境変数の違いについての解説です。 シェル変数は子プロセスでその値を呼び出すことはできませ</description>
    </item>
    
    <item>
      <title>DynamoDBのItemを一度に削除する（batch-write-item）</title>
      <link>https://swiswiswift.com/2022-06-09/</link>
      <pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-09/</guid>
      <description>DynamoDBのItemを一度に削除する方法です。 batch-write-item を使うことで一度に削除することができます。 今回</description>
    </item>
    
    <item>
      <title>LambdaでBMIを計算するAPIを作成してJSで呼び出す</title>
      <link>https://swiswiswift.com/2022-06-08/</link>
      <pubDate>Wed, 08 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-08/</guid>
      <description>LambdaでBMIを計算するAPIを作成してJSで呼び出す方法です。 LambdaでAPIを作成する</description>
    </item>
    
    <item>
      <title>LambdaでBMIを計算するAPIを作成する</title>
      <link>https://swiswiswift.com/2022-06-07/</link>
      <pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-07/</guid>
      <description>LambdaでBMIを計算するAPIを作成する方法です。 以下のコードをコードタブに貼り付けLambd</description>
    </item>
    
    <item>
      <title>SwiftUIでObservableObjectの@publishedなプロパティとBindingをする</title>
      <link>https://swiswiswift.com/2022-06-06/</link>
      <pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-06/</guid>
      <description>SwiftUIでObservableObjectの@publishedなプロパティとBindingを</description>
    </item>
    
    <item>
      <title>iOSのファイルアプリ（UIDocumentPickerViewController）を開いてドキュメントフォルダに保存したファイルを開く</title>
      <link>https://swiswiswift.com/2022-06-05/</link>
      <pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-05/</guid>
      <description>iOSのファイルアプリ（UIDocumentPickerViewController）を開いてドキュ</description>
    </item>
    
    <item>
      <title>Swiftで複数のViewをドラッグで移動する</title>
      <link>https://swiswiswift.com/2022-06-04/</link>
      <pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-04/</guid>
      <description>Swiftで複数のViewをドラッグで移動する方法です。 ViewController でタッチのイベントを検出し、Pokemon</description>
    </item>
    
    <item>
      <title>Swiftでドラッグで移動し、長押しでContextMenuを表示する</title>
      <link>https://swiswiswift.com/2022-06-03/</link>
      <pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-03/</guid>
      <description>Swiftでドラッグで移動し、長押しでContextMenuを表示する方法です。 ViewController でタッチのイベント</description>
    </item>
    
    <item>
      <title>Swiftでタップ、ドラッグした箇所にViewを移動させる</title>
      <link>https://swiswiswift.com/2022-06-02/</link>
      <pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-02/</guid>
      <description>Swiftでタップ、ドラッグした箇所にViewを移動させる方法です。 ViewController でタッチのイベントを検出し、そ</description>
    </item>
    
    <item>
      <title>Playgroundで2次のベジェ曲線を描画する</title>
      <link>https://swiswiswift.com/2022-06-01/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-06-01/</guid>
      <description>Playgroundで2次のベジェ曲線を描画する方法です。 あなたの知らないベジェ曲線の世界 に詳細な解</description>
    </item>
    
    <item>
      <title>Swiftで配列からランダムに要素を取り出す</title>
      <link>https://swiswiswift.com/2022-05-10/</link>
      <pubDate>Tue, 10 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-05-10/</guid>
      <description>Swiftで配列からランダムに要素を取り出す方法です。 配列をシャッフルした後に先頭の要素を取得してい</description>
    </item>
    
    <item>
      <title>Swiftで16進数を使う</title>
      <link>https://swiswiswift.com/2022-05-09/</link>
      <pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-05-09/</guid>
      <description>Swiftで16進数を使う方法です。 0x を使うことで16進数を表現できます。(1, 2, 3, 4, 5, 6, 7, 8, 9, a, b,</description>
    </item>
    
    <item>
      <title>Swiftで桁数を指定する</title>
      <link>https://swiswiswift.com/2022-05-08/</link>
      <pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-05-08/</guid>
      <description>e の後ろに桁数を指定することができます。 let number: Double = 123e2 print(number) // 12300.0 負の値にすると小数点にできます。 let number: Double = 123e-4 print(number)</description>
    </item>
    
    <item>
      <title>Swiftで関数の引数にジェネリクスを使う</title>
      <link>https://swiswiswift.com/2022-05-07/</link>
      <pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-05-07/</guid>
      <description>Swiftで関数の引数にジェネリクスを使う方法です。 以下のように記述することで、引数に Int でも String でも受</description>
    </item>
    
    <item>
      <title>PlaygroundでViewのプレビューを表示する</title>
      <link>https://swiswiswift.com/2022-05-06/</link>
      <pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-05-06/</guid>
      <description>PlaygroundでViewのプレビューを表示する方法です。 PlaygroundPage.current.liveView に表示したいViewを設定することで</description>
    </item>
    
    <item>
      <title>SwiftでSetから要素を削除する</title>
      <link>https://swiswiswift.com/2022-05-06/</link>
      <pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-05-06/</guid>
      <description>SwiftでSetから要素を削除する方法です。 remove を使うことで要素を削除することができます。 var mySet: Set = [1,</description>
    </item>
    
    <item>
      <title>Pythonで別ファイルの関数を実行する</title>
      <link>https://swiswiswift.com/2022-05-04/</link>
      <pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-05-04/</guid>
      <description>Pythonで別ファイルの関数を実行する方法です。 functions.py で定義した hello() を main.py で実行しています。 $ python main.py</description>
    </item>
    
    <item>
      <title>JavaScriptでBMI計算機を作る</title>
      <link>https://swiswiswift.com/2022-05-03/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-05-03/</guid>
      <description>JavaScriptでBMI計算機を作る方法です。</description>
    </item>
    
    <item>
      <title>EC2にMySQLをインストールする</title>
      <link>https://swiswiswift.com/2022-05-02/</link>
      <pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-05-02/</guid>
      <description>EC2インスタンスにMySQLをインストールする方法です。 # ルートユーザーに切り替える。 sudo su - # イン</description>
    </item>
    
    <item>
      <title>FFmpegを使って動画の情報を表示する</title>
      <link>https://swiswiswift.com/2022-05-01/</link>
      <pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-05-01/</guid>
      <description>FFmpegを使って動画の情報を表示する方法です。 以下のコマンドで表示することができました。 $ ffmpeg -i movie.mp4</description>
    </item>
    
    <item>
      <title>ターミナルのアカウント名を一時的に変更する</title>
      <link>https://swiswiswift.com/2022-04-10/</link>
      <pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-04-10/</guid>
      <description>ターミナルのアカウント名を一時的に変更する方法です。 以下のコマンドで一時的にアカウント名を変えること</description>
    </item>
    
    <item>
      <title>Lambdaトリガー（Lambda Permission）のStatement IDを確認する</title>
      <link>https://swiswiswift.com/2022-04-09/</link>
      <pubDate>Sat, 09 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-04-09/</guid>
      <description>Lambdaトリガー（Lambda Permission）のStatement IDを確認する方法です。</description>
    </item>
    
    <item>
      <title>API GatewayのリソースIDを取得する</title>
      <link>https://swiswiswift.com/2022-04-08/</link>
      <pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-04-08/</guid>
      <description>API GatewayのリソースIDを取得する方法です。 Terraform で API Gateway のリソースをインポートするには REST-API-ID と RESOURCE-ID が必要</description>
    </item>
    
    <item>
      <title>SwiftUIで画像をピンチで拡大する（UIImageView &#43; UIScrollView）</title>
      <link>https://swiswiswift.com/2022-04-07/</link>
      <pubDate>Thu, 07 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-04-07/</guid>
      <description>SwiftUIで画像をピンチで拡大する方法です。 UIImageViewとUIScrollViewを使</description>
    </item>
    
    <item>
      <title>SwiftUIで画像をピンチで拡大する（PDFView）</title>
      <link>https://swiswiswift.com/2022-04-06/</link>
      <pubDate>Wed, 06 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-04-06/</guid>
      <description>SwiftUIで画像をピンチで拡大する方法です。 画像をピンチで拡大します。 他にはこのような方法があり</description>
    </item>
    
    <item>
      <title>SwiftUIで画像をピンチで拡大する（MagnificationGesture）</title>
      <link>https://swiswiswift.com/2022-04-05/</link>
      <pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-04-05/</guid>
      <description>SwiftUIで画像をピンチで拡大する方法です。 MagnificationGestureを使った方法</description>
    </item>
    
    <item>
      <title>findコマンドでディレクトリを探す</title>
      <link>https://swiswiswift.com/2022-04-04/</link>
      <pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-04-04/</guid>
      <description>findコマンドでディレクトリを探す方法です。 findコマンドで2階層以内のsnorlaxディレクト</description>
    </item>
    
    <item>
      <title>cut コマンドで文字をカットする</title>
      <link>https://swiswiswift.com/2022-04-03/</link>
      <pubDate>Sun, 03 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-04-03/</guid>
      <description>cutコマンドを使うことで文字列を切り取ることができます。 2文字目から4文字目をカットしています。 echo</description>
    </item>
    
    <item>
      <title>Dockerビルドに秘密情報を使う</title>
      <link>https://swiswiswift.com/2022-04-02/</link>
      <pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-04-02/</guid>
      <description>Dockerビルドに秘密情報を使う方法です。 Dockerビルド時にアクセスキーなどの秘密情報が必要な</description>
    </item>
    
    <item>
      <title>Spring Bootの起動時に文字列の配列を渡す</title>
      <link>https://swiswiswift.com/2022-04-01/</link>
      <pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-04-01/</guid>
      <description>Spring Bootの起動時に文字列の配列を渡す方法です。 以下のようなオプションを付与することで pokemons に文字列の配</description>
    </item>
    
    <item>
      <title>API Gatewayに独自ドメインを設定する</title>
      <link>https://swiswiswift.com/2022-03-09/</link>
      <pubDate>Wed, 09 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-03-09/</guid>
      <description>API Gatewayに独自ドメインを設定する方法です。 API Gateway用のLambda関数を作成します。</description>
    </item>
    
    <item>
      <title>API GatewayとLambdaとDynamoDBを組み合わせてToDoアプリを作る</title>
      <link>https://swiswiswift.com/2022-03-08/</link>
      <pubDate>Tue, 08 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-03-08/</guid>
      <description>GatewayとLambdaとDynamoDBを組み合わせてToDoアプリを作る方法です。 Lambda 関数を作</description>
    </item>
    
    <item>
      <title>SwiftUIでMapViewを使い複数の位置情報を選択する</title>
      <link>https://swiswiswift.com/2022-03-07/</link>
      <pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-03-07/</guid>
      <description>SwiftUIでMapViewを使い複数の位置情報を選択する方法です。 addボタンを押した位置情報を</description>
    </item>
    
    <item>
      <title>AWS CLIでDynamoDBを操作する</title>
      <link>https://swiswiswift.com/2022-03-06/</link>
      <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-03-06/</guid>
      <description>AWS CLIでDynamoDBを操作する方法です。 AWS マネジメントコンソールから pokemon-table という名前でテーブルを作</description>
    </item>
    
    <item>
      <title>DynamoDBのスキャン時に「Attribute name is a reserved keyword; reserved keyword: type」が出る</title>
      <link>https://swiswiswift.com/2022-03-05/</link>
      <pubDate>Sat, 05 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-03-05/</guid>
      <description>DynamoDBのスキャン時に「Attribute name is a reserved keyword; reserved keyword: type」が出る時の対処法です。 カラ</description>
    </item>
    
    <item>
      <title>プロファイルを使って複数のAWSアカウントを使い分ける</title>
      <link>https://swiswiswift.com/2022-03-04/</link>
      <pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-03-04/</guid>
      <description>プロファイルを使って複数のAWSアカウントを使い分ける方法です。 一台のPCから複数のAWSアカウント</description>
    </item>
    
    <item>
      <title>SwiftUIでのプッシュ通知の最小構成</title>
      <link>https://swiswiswift.com/2022-03-03/</link>
      <pubDate>Thu, 03 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-03-03/</guid>
      <description>SwiftUIでのプッシュ通知の最小構成です。 プッシュ通知のテストをしたい時に使用します。</description>
    </item>
    
    <item>
      <title>LambdaのコードをCLIから更新する</title>
      <link>https://swiswiswift.com/2022-03-02/</link>
      <pubDate>Wed, 02 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-03-02/</guid>
      <description>LambdaのコードをCLIから更新する方法です。 list-functions コマンドで更新したい関数名を確認します。 aws lambda list-functions |</description>
    </item>
    
    <item>
      <title>ALBに独自ドメインを設定してHTTPSにする</title>
      <link>https://swiswiswift.com/2022-03-01/</link>
      <pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-03-01/</guid>
      <description>ALBに独自ドメインを設定してHTTPSにする方法です。 ALBの向き先をnginxをインストールした</description>
    </item>
    
    <item>
      <title>EC2インスタンスにnginxをインストールしてブラウザからアクセスする</title>
      <link>https://swiswiswift.com/2022-02-09/</link>
      <pubDate>Wed, 09 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-02-09/</guid>
      <description>EC2インスタンスを立ててnginxをインストールしてブラウザからアクセスする方法です。 まずSSH用</description>
    </item>
    
    <item>
      <title>PythonでWebサイトのHTMLファイルを取得して保存する</title>
      <link>https://swiswiswift.com/2022-02-08/</link>
      <pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-02-08/</guid>
      <description>PythonでWebサイトのHTMLファイルを取得して保存する方法です。 urllibでGETアクセス</description>
    </item>
    
    <item>
      <title>LambdaとEvent BridgeでDiscordの目覚ましBotを作る</title>
      <link>https://swiswiswift.com/2022-02-07/</link>
      <pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-02-07/</guid>
      <description>LambdaとEvent BridgeでDiscordの目覚ましBotを作る方法です。 「おはよう」と毎</description>
    </item>
    
    <item>
      <title>MKMapViewで経路を表示する</title>
      <link>https://swiswiswift.com/2022-02-06/</link>
      <pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-02-06/</guid>
      <description>MKMapViewで経路を表示する方法です。 新宿駅から秋葉原駅への経路を表示しています。 参考: 【Sw</description>
    </item>
    
    <item>
      <title>MKMapViewの表示範囲を設定する</title>
      <link>https://swiswiswift.com/2022-02-05/</link>
      <pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-02-05/</guid>
      <description>MKMapViewの表示範囲を設定する方法です。 秋葉原駅（35.6984, 139.7731）を中心と</description>
    </item>
    
    <item>
      <title>CollectionViewに区切り線を追加する</title>
      <link>https://swiswiswift.com/2022-02-04/</link>
      <pubDate>Fri, 04 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-02-04/</guid>
      <description>CollectionViewに区切り線を追加する方法です。 参考: UICollectionView の Layout で悩んだら Decoration Viewを用いてC</description>
    </item>
    
    <item>
      <title>CollectionViewの背景にスクロールする画像を設定する</title>
      <link>https://swiswiswift.com/2022-02-03/</link>
      <pubDate>Thu, 03 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-02-03/</guid>
      <description>CollectionViewの背景にスクロールする画像を設定する方法です。 よくわかっていないのですが</description>
    </item>
    
    <item>
      <title>UICollectionViewのサンプル</title>
      <link>https://swiswiswift.com/2022-02-02/</link>
      <pubDate>Wed, 02 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-02-02/</guid>
      <description>UICollectionViewのサンプルです。 makeColor() 関数でランダムに生成した色をセルに入れています。 ス</description>
    </item>
    
    <item>
      <title>AWS CLI を使ってS3バケットを作成する</title>
      <link>https://swiswiswift.com/2022-02-01/</link>
      <pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-02-01/</guid>
      <description>AWS Command Line Interface（CLI）を使ってS3バケットを作成する方法です。 AWS CLIはAWSが提供する</description>
    </item>
    
    <item>
      <title>Swiftで最低幅を持ち横幅が可変なボタンを作成する</title>
      <link>https://swiswiswift.com/2022-01-09/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-01-09/</guid>
      <description>Swiftで最低幅を持ち横幅が可変なボタンを作成する方法です。 ボタンの横幅が最低53pxで、余白が1</description>
    </item>
    
    <item>
      <title>全画面にするとChormeのタブが表示されない</title>
      <link>https://swiswiswift.com/2022-01-08/</link>
      <pubDate>Sat, 08 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-01-08/</guid>
      <description>全画面にするとChormeのタブが表示されなくなってしまった時の戻し方です。（Macの場合） command + shift +</description>
    </item>
    
    <item>
      <title>S3に静的ファイルを置いてインターネットに公開する</title>
      <link>https://swiswiswift.com/2022-01-07/</link>
      <pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-01-07/</guid>
      <description>S3に画像などの静的ファイルを置いて公開する方法です。 まずS3のコンソールにアクセスします。 「バケッ</description>
    </item>
    
    <item>
      <title>CollectionViewで並び替え時に選択されたセルにアニメーションを付与する</title>
      <link>https://swiswiswift.com/2022-01-06/</link>
      <pubDate>Thu, 06 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-01-06/</guid>
      <description>CollectionViewで並び替え時に選択されたセルにアニメーションを付与する方法です。 長押しす</description>
    </item>
    
    <item>
      <title>UICollectionViewのセルを並び替える</title>
      <link>https://swiswiswift.com/2022-01-05/</link>
      <pubDate>Wed, 05 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-01-05/</guid>
      <description>UICollectionViewのセルを並び替える方法です。 長押しすると移動できるようになります。 参</description>
    </item>
    
    <item>
      <title>Xcodeで左側のファイル一覧のナビゲーションが隠れてしまって出てこない</title>
      <link>https://swiswiswift.com/2022-01-04/</link>
      <pubDate>Tue, 04 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-01-04/</guid>
      <description>Xcodeで左側のファイル一覧のナビゲーションが隠れてしまって出てこないときの方法です。 command + 0 で出し</description>
    </item>
    
    <item>
      <title>SwiftUIでさまざまなデバイスのプレビューを確認する</title>
      <link>https://swiswiswift.com/2022-01-03/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-01-03/</guid>
      <description>SwiftUIでさまざまなデバイスのプレビューを確認する方法です。 まず以下のコマンドでデバイスの一覧</description>
    </item>
    
    <item>
      <title>iOS15でPickerを横に並べるとタップ領域が重なってしまう</title>
      <link>https://swiswiswift.com/2022-01-02/</link>
      <pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-01-02/</guid>
      <description>iOS15でPickerを横に並べるとタップ領域が重なってしまう不具合に悩まされたのでその忘備録です</description>
    </item>
    
    <item>
      <title>2022年の目標</title>
      <link>https://swiswiswift.com/2022-01-01/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2022-01-01/</guid>
      <description>あけましておめでとうございます、2022年もよろしくお願いします！ 今年の目標は以下の通りです。 個人開</description>
    </item>
    
    <item>
      <title>SwiftUIでMapViewの中央に十字を用意し、その中央の座標を取得する</title>
      <link>https://swiswiswift.com/2021-12-05/</link>
      <pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-12-05/</guid>
      <description>SwiftUIでMapViewの中央に十字を用意し、その中央の座標を取得する方法です。 MapView</description>
    </item>
    
    <item>
      <title>RustでキャメルケースのJSONをスネークケースにデシリアライズしたり、キャメルケースのJSONにする</title>
      <link>https://swiswiswift.com/2021-12-04/</link>
      <pubDate>Sat, 04 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-12-04/</guid>
      <description>RustでキャメルケースのJSONをスネークケースにデシリアライズしたり、キャメルケースのJSONに</description>
    </item>
    
    <item>
      <title>RustでEnumのプロパティがあるstructをシリアライズしたりデシリアライズする</title>
      <link>https://swiswiswift.com/2021-12-03/</link>
      <pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-12-03/</guid>
      <description>RustでEnumのプロパティがあるstructをシリアライズしたりデシリアライズする方法です。 En</description>
    </item>
    
    <item>
      <title>RustでstructをJSONにシリアライズしてファイルに保存する</title>
      <link>https://swiswiswift.com/2021-12-02/</link>
      <pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-12-02/</guid>
      <description>RustでstructをJSONにシリアライズしてファイルに保存する方法です。 StringにしてJS</description>
    </item>
    
    <item>
      <title>RustでJSONを読み込みVecにデシリアライズする</title>
      <link>https://swiswiswift.com/2021-12-01/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-12-01/</guid>
      <description>RustでJSONを読み込みVecにデシリアライズする方法です。 JSONを読み込んでVecに変換して</description>
    </item>
    
    <item>
      <title>RustでVecやArrayをシリアライズしたりデシリアライズする</title>
      <link>https://swiswiswift.com/2021-11-16/</link>
      <pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-16/</guid>
      <description>RustでVecやArrayをシリアライズしたりデシリアライズする方法です。 VecでもArrayでも</description>
    </item>
    
    <item>
      <title>RustでJSONを読み込んでstructにデシリアライズする</title>
      <link>https://swiswiswift.com/2021-11-15/</link>
      <pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-15/</guid>
      <description>RustでJSONを読み込んでstructにデシリアライズする方法です。 ローカルのJSONを読み込ん</description>
    </item>
    
    <item>
      <title>RustでstructをJSONにシリアライズしたりデシリアライズする</title>
      <link>https://swiswiswift.com/2021-11-14/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-14/</guid>
      <description>RustでstructをJSONにシリアライズしたりデシリアライズする方法です。 参考</description>
    </item>
    
    <item>
      <title>SpringBootでログをファイルに出力する</title>
      <link>https://swiswiswift.com/2021-11-13/</link>
      <pubDate>Sat, 13 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-13/</guid>
      <description>SpringBootでログをファイルに出力する方法です。 application.properties に logging.file.name=spring.log を追加するとログがファイルとしても出力</description>
    </item>
    
    <item>
      <title>SwiftでMapViewの中央に十字を用意し、その中央の座標を取得する</title>
      <link>https://swiswiswift.com/2021-11-12/</link>
      <pubDate>Fri, 12 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-12/</guid>
      <description>SwiftでMapViewの中央に十字を用意し、その中央の座標を取得する方法です。 スクロールしたりピ</description>
    </item>
    
    <item>
      <title>Rustでコマンドライン引数を渡す</title>
      <link>https://swiswiswift.com/2021-11-11/</link>
      <pubDate>Thu, 11 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-11/</guid>
      <description>Rustでコマンドライン引数を渡す方法です。 use std::env; fn main() { let args: Vec&amp;lt;String&amp;gt; = env::args().collect(); println!(&amp;#34;{:?}&amp;#34;, args); } rustc main.rs ./main snorlax 143 [&amp;#34;./main&amp;#34;, &amp;#34;snorlax&amp;#34;, &amp;#34;143&amp;#34;]</description>
    </item>
    
    <item>
      <title>RustでHelloWorldをする</title>
      <link>https://swiswiswift.com/2021-11-10/</link>
      <pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-10/</guid>
      <description>RustでHelloWorldをする方法です。 main.rs というファイルを作成します。 fn main() { println!(&amp;#34;Hello, World&amp;#34;); } 以下のコマン</description>
    </item>
    
    <item>
      <title>SwiftUIでPHPickerViewControllerを使って画像を選択する</title>
      <link>https://swiswiswift.com/2021-11-09/</link>
      <pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-09/</guid>
      <description>SwiftUIでPHPickerViewControllerを使って画像を選択する方法です。 Imag</description>
    </item>
    
    <item>
      <title>SwiftでJSONエンコードするときに数字の桁数を指定する</title>
      <link>https://swiswiswift.com/2021-11-08/</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-08/</guid>
      <description>SwiftでJSONデコードするときに数字の桁数を指定する方法です。 文字列になってしまいましたが、以</description>
    </item>
    
    <item>
      <title>Swiftの細かい文法のメモ</title>
      <link>https://swiswiswift.com/2021-11-07/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-07/</guid>
      <description>関数の引数は呼び出し側で省略したり、別名をつけたりすることができる。 func buyA(product: Int, price: Int, quantity: Int) { print(product, price, quantity) } buyA(product: 1200, price: 1500,</description>
    </item>
    
    <item>
      <title>Swiftで引数を参照渡しをする</title>
      <link>https://swiswiswift.com/2021-11-06/</link>
      <pubDate>Sat, 06 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-06/</guid>
      <description>Swiftで引数を参照渡しをする方法です。 まず普通に書いた場合です。 プログラム実行後 x = 2, y = 4 とな</description>
    </item>
    
    <item>
      <title>PHPickerViewControllerを使って画像を選択する</title>
      <link>https://swiswiswift.com/2021-11-05/</link>
      <pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-05/</guid>
      <description>PHPickerViewController を使って画像を選択する方法です。 UIImagePickerController が将来的に非推奨になり PHPickerViewController に置き換わっていくみたいです。 参考: Meet the</description>
    </item>
    
    <item>
      <title>UIKitのScrollViewでページングを実装する</title>
      <link>https://swiswiswift.com/2021-11-04/</link>
      <pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-04/</guid>
      <description>UIKitのScrollViewでページングを実装する方法です。 スクロールすると切り替わるタイミング</description>
    </item>
    
    <item>
      <title>SpringBootでマークダウンをHTMLに変換してThymeleafで表示する</title>
      <link>https://swiswiswift.com/2021-11-03/</link>
      <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-03/</guid>
      <description>SpringBootでマークダウンをHTMLに変換してThymeleafで表示する方法です。 マークダ</description>
    </item>
    
    <item>
      <title>SwiftUIでスライダーとスクロールを連動させる</title>
      <link>https://swiswiswift.com/2021-11-02/</link>
      <pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-02/</guid>
      <description>SwiftUIでスライダーとスクロールを連動させる方法です。 スライダーの値を変えることでScroll</description>
    </item>
    
    <item>
      <title>SwiftUIでカメラを使う</title>
      <link>https://swiswiswift.com/2021-11-01/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-11-01/</guid>
      <description>SwiftUIでカメラを使う方法です。 録画を可能にする CameraView を作成しそれを SwiftUI 側で呼び出すようにします。 S</description>
    </item>
    
    <item>
      <title>Springを使ってお問い合わせフォームを作るその６</title>
      <link>https://swiswiswift.com/2021-10-09/</link>
      <pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-10-09/</guid>
      <description>Springを使ってお問い合わせフォームを作るその６です。 今回は作ったアプリケーションをサーバーにデ</description>
    </item>
    
    <item>
      <title>Springを使ってお問い合わせフォームを作るその５</title>
      <link>https://swiswiswift.com/2021-10-08/</link>
      <pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-10-08/</guid>
      <description>Springを使ってお問い合わせフォームを作るその５です。 前回自体でアプリケーションは大体できたので</description>
    </item>
    
    <item>
      <title>Springを使ってお問い合わせフォームを作るその４</title>
      <link>https://swiswiswift.com/2021-10-07/</link>
      <pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-10-07/</guid>
      <description>Springを使ってお問い合わせフォームを作るその４です。 今回はフォームから DB に追加できるようにしま</description>
    </item>
    
    <item>
      <title>Springを使ってお問い合わせフォームを作るその３</title>
      <link>https://swiswiswift.com/2021-10-06/</link>
      <pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-10-06/</guid>
      <description>Springを使ってお問い合わせフォームを作るその３です。 今回は Spring と DB を接続して前回作成した contact テーブ</description>
    </item>
    
    <item>
      <title>Springを使ってお問い合わせフォームを作るその２</title>
      <link>https://swiswiswift.com/2021-10-05/</link>
      <pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-10-05/</guid>
      <description>Springを使ってお問い合わせフォームを作るその２です。 今回はDBまわりを作っていきます。 まずDo</description>
    </item>
    
    <item>
      <title>Springを使ってお問い合わせフォームを作るその１</title>
      <link>https://swiswiswift.com/2021-10-04/</link>
      <pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-10-04/</guid>
      <description>Springを使ってお問い合わせフォームを作ります。 ユーザーがフォームにお問い合わせ内容を書いて投稿</description>
    </item>
    
    <item>
      <title>Dockerを使ってMySQLを練習する</title>
      <link>https://swiswiswift.com/2021-10-03/</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-10-03/</guid>
      <description>Dockerを使ってMySQLを練習する方法です。 まず以下のような docker-compose.yml を作成します。 version: &amp;#34;3.7&amp;#34; services: mysql: image: mysql:8.0.20 container_name: swiswiswift-mysql environment:</description>
    </item>
    
    <item>
      <title>Golangでtext/templateを使ってhtmlファイルを生成する</title>
      <link>https://swiswiswift.com/2021-10-02/</link>
      <pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-10-02/</guid>
      <description>Golangでtext/templateを使ってhtmlファイルを生成する方法です。 Pokemon構</description>
    </item>
    
    <item>
      <title>MapViewのタップした箇所に黒丸を描画する</title>
      <link>https://swiswiswift.com/2021-10-01/</link>
      <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-10-01/</guid>
      <description>MapViewのタップした箇所に黒丸を描画する方法です。 タップした箇所に黒丸を描画しています。黒丸の</description>
    </item>
    
    <item>
      <title>PCBEで作った基板をPCBGOGOで注文する</title>
      <link>https://swiswiswift.com/2021-09-05/</link>
      <pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-09-05/</guid>
      <description>PCBEで作った基板をPCBGOGOで注文する方法です。 ファイル -&amp;gt; 基盤見積もり作成 -&amp;gt; 画像のように「デ</description>
    </item>
    
    <item>
      <title>AppStoreConnectで「銀行振り込みが完了しませんでした」というメッセージが現れて消えない</title>
      <link>https://swiswiswift.com/2021-09-04/</link>
      <pubDate>Sat, 04 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-09-04/</guid>
      <description>AppStoreConnectで「銀行振り込みが完了しませんでした」というメッセージが現れて消えない</description>
    </item>
    
    <item>
      <title>MacOSでフォルダをzipに圧縮する</title>
      <link>https://swiswiswift.com/2021-09-03/</link>
      <pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-09-03/</guid>
      <description>MacOSでフォルダをzipに圧縮する方法です。 zipにすることで LINE とかで送ることができるようになり</description>
    </item>
    
    <item>
      <title>Golangで構造体をJSONファイルとして出力する</title>
      <link>https://swiswiswift.com/2021-09-02/</link>
      <pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-09-02/</guid>
      <description>Golangで構造体をJSONファイルとして出力する。 このコードでは構造体PokemonをJSONと</description>
    </item>
    
    <item>
      <title>Golangで配列のJSONを構造体の配列に変換する</title>
      <link>https://swiswiswift.com/2021-09-01/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-09-01/</guid>
      <description>Golangで構造体をJSONファイルとして出力する方法です。 このコードではローカルのJSONファイ</description>
    </item>
    
    <item>
      <title>GolangでJSONを構造体に変換する</title>
      <link>https://swiswiswift.com/2021-08-01/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-08-01/</guid>
      <description>GolangでJSONを構造体に変換する方法です。 このコードではローカルのJSONファイルを読みとり</description>
    </item>
    
    <item>
      <title>iOSで実機ビルドだと動けどTestFlightから配信すると動かない</title>
      <link>https://swiswiswift.com/2021-07-05/</link>
      <pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-07-05/</guid>
      <description>iOSアプリ開発中に実機ビルドだと動けどTestFlightから配信すると動かない。ということがあり</description>
    </item>
    
    <item>
      <title>複数の型を持つJSONをemumでDecodeする</title>
      <link>https://swiswiswift.com/2021-07-04/</link>
      <pubDate>Sun, 04 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-07-04/</guid>
      <description>複数の型を持つ JSON を enum を使って Decode する方法です。 とある API を叩くと JSON が返ってきますが、その中身がポケモンな</description>
    </item>
    
    <item>
      <title>自分で定義したStructをUserDefaultsに保存する</title>
      <link>https://swiswiswift.com/2021-07-03/</link>
      <pubDate>Sat, 03 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-07-03/</guid>
      <description>自分で定義したStructをUserDefaultsに保存する方法です。 そのままでは保存することがで</description>
    </item>
    
    <item>
      <title>Identifiableに適合していないStructでListを使う</title>
      <link>https://swiswiswift.com/2021-07-02/</link>
      <pubDate>Fri, 02 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-07-02/</guid>
      <description>Identifiableに適合していないStructでListを使う方法です。 id でプロパティユニーク</description>
    </item>
    
    <item>
      <title>iOSでMKMapViewの上に図形を描画する</title>
      <link>https://swiswiswift.com/2021-07-01/</link>
      <pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-07-01/</guid>
      <description>iOSのMKMapViewの上に図形を描画する方法です。 MKPolygon を使うことで任意の多角形を描画することがで</description>
    </item>
    
    <item>
      <title>SwiftUIのTabViewのタブをコードから動的に切り替える</title>
      <link>https://swiswiswift.com/2021-06-01/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-06-01/</guid>
      <description>SwiftUIのTabViewのタブをコードから動的に切り替える方法です。 コードで動的にタブを切り替</description>
    </item>
    
    <item>
      <title>JetpackComposeで画面遷移する</title>
      <link>https://swiswiswift.com/2021-05-11/</link>
      <pubDate>Tue, 11 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-11/</guid>
      <description>JetpackComposeで画面遷移する方法です。 以下の記事を参考にしながら画面遷移してみました。</description>
    </item>
    
    <item>
      <title>iOSでバージョンとビルド番号を取得する</title>
      <link>https://swiswiswift.com/2021-05-10/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-10/</guid>
      <description>iOSでバージョンとビルド番号を取得する方法です。 バージョンとビルド番号を文字列で取得します。 オプシ</description>
    </item>
    
    <item>
      <title>SwiftUIでListにButtonを設定してパラメーターの違う画面に遷移する</title>
      <link>https://swiswiswift.com/2021-05-09/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-09/</guid>
      <description>SwiftUIでListにButtonを設定してパラメーターの違う画面に遷移する方法です。 詳細ページ</description>
    </item>
    
    <item>
      <title>SwiftUIで少しカスタマイズしたActivityIndicatorを表示する</title>
      <link>https://swiswiswift.com/2021-05-08/</link>
      <pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-08/</guid>
      <description>SwiftUIで少しカスタマイズしたActivityIndicatorを表示する方法です。背景色をつ</description>
    </item>
    
    <item>
      <title>Swiftでデフォルト引数を使う</title>
      <link>https://swiswiswift.com/2021-05-07/</link>
      <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-07/</guid>
      <description>Swiftでデフォルト引数を使う方法です。 favorite 関数に引数を渡さず呼び出すと &amp;quot;I love Snorlax が返り、任意の名前を渡</description>
    </item>
    
    <item>
      <title>SwiftUIでActivityIndicatorを表示する</title>
      <link>https://swiswiswift.com/2021-05-06/</link>
      <pubDate>Thu, 06 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-06/</guid>
      <description>SwiftUIでActivityIndicatorを表示する方法です。 ロード中などのくるくるするやつ</description>
    </item>
    
    <item>
      <title>SwiftUIでUIActivityViewControllerを表示する</title>
      <link>https://swiswiswift.com/2021-05-05/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-05/</guid>
      <description>SwiftUIでUIActivityViewControllerを表示する方法です。 ボタンを押すと URL</description>
    </item>
    
    <item>
      <title>DockerのMySQLでdocker-entrypoint-initdb.dの完了を待つ</title>
      <link>https://swiswiswift.com/2021-05-04/</link>
      <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-04/</guid>
      <description>DockerのMySQLでdocker-entrypoint-initdb.dの完了を待つ方法です。</description>
    </item>
    
    <item>
      <title>waitコマンドで複数の処理の完了を待つ</title>
      <link>https://swiswiswift.com/2021-05-03/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-03/</guid>
      <description>waitコマンドで複数の処理の完了を待つ方法です。 sh script.sh を実行すると sleep.sh の完了を待ち、最後の Echo 文を実行し</description>
    </item>
    
    <item>
      <title>SwiftUIでSearchBar(TextField)にクリアボタンをつける</title>
      <link>https://swiswiswift.com/2021-05-02/</link>
      <pubDate>Sun, 02 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-02/</guid>
      <description>SwiftUIでSearchBar(TextField)にクリアボタンをつける方法です。 TextFiled に文字を入</description>
    </item>
    
    <item>
      <title>SwiftUIでSearchBar(TextField)を使って検索する</title>
      <link>https://swiswiswift.com/2021-05-01/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-05-01/</guid>
      <description>SwiftUIでSearchBar(TextField)を使って検索する方法です。 TextFiled に文字を入力する</description>
    </item>
    
    <item>
      <title>SwiftUIのListの中にボタンを複数設置する</title>
      <link>https://swiswiswift.com/2021-04-08/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-04-08/</guid>
      <description>SwiftUIのListの中にボタンを複数設置する方法です。 buttonStyle(PlainButtonStyle()) を設定することできました。 参考サイト SwiftUI</description>
    </item>
    
    <item>
      <title>SwiftUIのListでSpacerの部分にもタップ判定をつける</title>
      <link>https://swiswiswift.com/2021-04-07/</link>
      <pubDate>Wed, 07 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-04-07/</guid>
      <description>SwiftUIのListでSpacerの部分にもタップ判定をつける方法です。 .contentShape(Rectangle()) を設定することでタップ</description>
    </item>
    
    <item>
      <title>Elmで配列を繰り返して表示する</title>
      <link>https://swiswiswift.com/2021-04-06/</link>
      <pubDate>Tue, 06 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-04-06/</guid>
      <description>Elmで配列を繰り返して表示する方法です。 Stringの配列の内容を繰り返して表示しています。 ちなみ</description>
    </item>
    
    <item>
      <title>Elmで型エイリアスが入った配列を繰り返し表示す</title>
      <link>https://swiswiswift.com/2021-04-05/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-04-05/</guid>
      <description>Elmで型エイリアスが入った配列を繰り返し表示する方法です。 Pokemonという型エイリアスの配列の</description>
    </item>
    
    <item>
      <title>Elmで型エイリアスを定義する</title>
      <link>https://swiswiswift.com/2021-04-04/</link>
      <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-04-04/</guid>
      <description>Elmで型エイリアスを定義する方法です。 Pokemonという型エイリアスを定義して、その内容を表示し</description>
    </item>
    
    <item>
      <title>ElmでIntをStringに変換する</title>
      <link>https://swiswiswift.com/2021-04-03/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-04-03/</guid>
      <description>ElmでIntをStringに変換する方法です。 String.fromInt で変換することができました。 Elmは慣れるまで難し</description>
    </item>
    
    <item>
      <title>SwiftUIでListをEditModeにして並び替える</title>
      <link>https://swiswiswift.com/2021-04-02/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-04-02/</guid>
      <description>SwiftUIでListをEditModeにして並び替える方法です。 UITableViewのEdit</description>
    </item>
    
    <item>
      <title>Swiftでプロジェクトの中に含まれるJSONファイルを読み込む</title>
      <link>https://swiswiswift.com/2021-04-01/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-04-01/</guid>
      <description>Swiftでプロジェクトの中に含まれるJSONファイルを読み込む方法です。 まずプロジェクトに読み込み</description>
    </item>
    
    <item>
      <title>SwiftUIでシートを表示し、プッシュ遷移後にシートを閉じる</title>
      <link>https://swiswiswift.com/2021-03-10/</link>
      <pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-10/</guid>
      <description>SwiftUIでシートを表示し、プッシュ遷移後にシートを閉じる方法です。 遷移後のシートでもisPre</description>
    </item>
    
    <item>
      <title>SwiftUIで初めの画面に遷移する（popToRootViewController）</title>
      <link>https://swiswiswift.com/2021-03-09/</link>
      <pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-09/</guid>
      <description>SwiftUIで初めの画面に遷移する（popToRootViewController）方法です。 isDetailLink が</description>
    </item>
    
    <item>
      <title>Swiftで10進数を2進数に変換する</title>
      <link>https://swiswiswift.com/2021-03-08/</link>
      <pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-08/</guid>
      <description>Swiftで10進数を2進数に変換する方法です。 TextFieldに数字を入力し、変換ボタンを押すと</description>
    </item>
    
    <item>
      <title>SwiftUIのTextFieldで表示するキーボードを指定する</title>
      <link>https://swiswiswift.com/2021-03-07/</link>
      <pubDate>Sun, 07 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-07/</guid>
      <description>SwiftUIのTextFieldで表示するキーボードを指定する方法です。 keyboardType を指定することで表示する</description>
    </item>
    
    <item>
      <title>SwiftでMKMapViewに図を追加する</title>
      <link>https://swiswiswift.com/2021-03-06/</link>
      <pubDate>Sat, 06 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-06/</guid>
      <description>SwiftでMKMapViewに図を追加する方法です。 以下の例では大阪、松本、東京を結ぶ三角形を追加</description>
    </item>
    
    <item>
      <title>SwiftでMKMapViewに線を引く</title>
      <link>https://swiswiswift.com/2021-03-05/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-05/</guid>
      <description>SwiftでMKMapViewに線を引く方法です。 以下の例では大阪、松本、東京で線を引いています。</description>
    </item>
    
    <item>
      <title>SwiftUIでButtonを有効にしたり無効にしたりする</title>
      <link>https://swiswiswift.com/2021-03-04/</link>
      <pubDate>Thu, 04 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-04/</guid>
      <description>SwiftUIでButtonを有効にしたり無効にしたりする方法です。 Toggleを押すとボタンが有効</description>
    </item>
    
    <item>
      <title>Swiftで配列からランダムに任意の個数抽出する</title>
      <link>https://swiswiswift.com/2021-03-03/</link>
      <pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-03/</guid>
      <description>Swiftで配列からランダムに任意の個数抽出する方法です。 もっと良いやり方がありましたらTwitte</description>
    </item>
    
    <item>
      <title>SwiftUIでViewを横スクロールで表示する</title>
      <link>https://swiswiswift.com/2021-03-02/</link>
      <pubDate>Tue, 02 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-02/</guid>
      <description>SwiftUIでViewを横スクロールで表示する方法です。 SwiftUIだと簡単に実装できて良いです</description>
    </item>
    
    <item>
      <title>QGridを使ってCollectionViewを実装する</title>
      <link>https://swiswiswift.com/2021-03-01/</link>
      <pubDate>Mon, 01 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-03-01/</guid>
      <description>QGridを使ってCollectionViewを実装する方法です。 iOS13のSwiftUIではCo</description>
    </item>
    
    <item>
      <title>Swiftでオンライン上のファイルを再生する</title>
      <link>https://swiswiswift.com/2021-02-10/</link>
      <pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-10/</guid>
      <description>Swiftでオンライン上のファイルを再生する方法です。 簡単に実装できました。ただエラーハンドリングが</description>
    </item>
    
    <item>
      <title>SwiftUIでアラートを入れ子にして使うことができない</title>
      <link>https://swiswiswift.com/2021-02-09/</link>
      <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-09/</guid>
      <description>SwiftUIでアラートを入れ子にして使うことができなかったのでそのメモです。 以下のコードの様に HStack の</description>
    </item>
    
    <item>
      <title>iOSでGoogle-Mobile-Ads-SDKの８系が入らない</title>
      <link>https://swiswiswift.com/2021-02-08/</link>
      <pubDate>Mon, 08 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-08/</guid>
      <description>iOSでGoogle-Mobile-Ads-SDKの８系が入らない時の対処法です。 Firebase/adMob を外したらうまく</description>
    </item>
    
    <item>
      <title>SwiftUIでボタンを押すとポップアップを表示する</title>
      <link>https://swiswiswift.com/2021-02-07/</link>
      <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-07/</guid>
      <description>SwiftUIでボタンを押すとポップアップを表示する方法です。 以下の例ではボタンを押すとアラート（中</description>
    </item>
    
    <item>
      <title>SwiftUIでBMIを計算し、結果を別のViewで表示する</title>
      <link>https://swiswiswift.com/2021-02-06/</link>
      <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-06/</guid>
      <description>SwiftUIでBMIを計算し、結果を別のViewで表示する方法です。 身長と体重を入力し、計算ボタン</description>
    </item>
    
    <item>
      <title>@Stateと@Bindingの使い分け</title>
      <link>https://swiswiswift.com/2021-02-05/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-05/</guid>
      <description>@Stateと@Bindingの使い分けについです。 @State のついた変数を変更することでViewにその変更</description>
    </item>
    
    <item>
      <title>TableViewのセルを長押しでContextMenuを表示する</title>
      <link>https://swiswiswift.com/2021-02-04/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-04/</guid>
      <description>TableViewのセルを長押しでContextMenuを表示する方法です。 手軽にメニューが表示する</description>
    </item>
    
    <item>
      <title>SwiftUIで複数のモーダルをEnumで出し分ける</title>
      <link>https://swiswiswift.com/2021-02-03/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-03/</guid>
      <description>SwiftUIで複数のモーダルをEnumで出し分ける方法です。 enumを使うことでスッキリと書くこと</description>
    </item>
    
    <item>
      <title>SwiftUIでフルスクリーンモーダルを表示する（iOS14以上）</title>
      <link>https://swiswiswift.com/2021-02-02/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-02/</guid>
      <description>SwiftUIでフルスクリーンモーダルを表示する方法です。（iOS14以上） いままでSwiftUIで</description>
    </item>
    
    <item>
      <title>SwiftUIでモーダルを表示する時に値を渡す</title>
      <link>https://swiswiswift.com/2021-02-01/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-02-01/</guid>
      <description>SwiftUIでモーダルを表示する時に値を渡す方法です。 TextFieldでname変数に文字列を入</description>
    </item>
    
    <item>
      <title>Swiftで文字列を圧縮して保存し、そのデータを読み取る</title>
      <link>https://swiswiswift.com/2021-01-01/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2021-01-01/</guid>
      <description>Swiftで文字列を圧縮して保存し、そのデータを読み取る方法です。 zlib というアルゴリズムで文字列を圧縮</description>
    </item>
    
    <item>
      <title>SwiftUIでAVAudioPlayerNodeで音楽を再生し、再生終了を検知する</title>
      <link>https://swiswiswift.com/2020-12-13/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-13/</guid>
      <description>SwiftUIでAVAudioPlayerNodeで音楽を再生し、再生終了を検知する方法です。 AVAudioPlayer は Delegate</description>
    </item>
    
    <item>
      <title>SwiftUIでAVAudioPlayerで音楽を再生し、再生終了を検知する</title>
      <link>https://swiswiswift.com/2020-12-12/</link>
      <pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-12/</guid>
      <description>SwiftUIでAVAudioPlayerで音楽を再生し、再生終了を検知する方法です。 SwiftUI</description>
    </item>
    
    <item>
      <title>ビック光（IIJmioひかり）の接続パスワードを忘れた時のメモ</title>
      <link>https://swiswiswift.com/2020-12-11/</link>
      <pubDate>Fri, 11 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-11/</guid>
      <description>ビック光（IIJmioひかり）の接続パスワードを忘れた時のメモです。 WiFiルーターを変えたタイミン</description>
    </item>
    
    <item>
      <title>SwiftUIを使ったTODOアプリのサンプル</title>
      <link>https://swiswiswift.com/2020-12-10/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-10/</guid>
      <description>SwiftUIを使ったTODOアプリのサンプルコードです。 InputView で入力した TODOは ContentView に表示されます。</description>
    </item>
    
    <item>
      <title>AVAudioPlayerNodeを使って音楽の再生、一時停止、再生速度変更、ピッチ変更、ボリューム変更を行う</title>
      <link>https://swiswiswift.com/2020-12-09/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-09/</guid>
      <description>AVAudioPlayerNodeを使って音楽の再生、一時停止、再生速度変更、ピッチ変更、ボリューム</description>
    </item>
    
    <item>
      <title>AVAudioPlayerを使って音楽の再生、一時停止、停止、ボリューム変更、再生速度変更を行う</title>
      <link>https://swiswiswift.com/2020-12-08/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-08/</guid>
      <description>AVAudioPlayerを使って音楽の再生、一時停止、停止、ボリューム変更、再生速度変更を行う方法</description>
    </item>
    
    <item>
      <title>SwiftUIでImageを長押しするとContextMenuを表示する</title>
      <link>https://swiswiswift.com/2020-12-07/</link>
      <pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-07/</guid>
      <description>SwiftUIでImageを長押しするとContextMenuを表示する方法です。 アイコンが表示され</description>
    </item>
    
    <item>
      <title>ImageViewを長押しするとContextMenuを表示する</title>
      <link>https://swiswiswift.com/2020-12-06/</link>
      <pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-06/</guid>
      <description>ImageViewを長押しするとUIMenuを表示する方法です。 アイコンが表示されているImageV</description>
    </item>
    
    <item>
      <title>SwiftUIでMapを表示してアノテーションを表示する</title>
      <link>https://swiswiswift.com/2020-12-05/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-05/</guid>
      <description>SwiftUIでMapを表示してアノテーションを表示する方法です。 iOS14からSwiftUIでMa</description>
    </item>
    
    <item>
      <title>UIStepperを使って値を増減させる</title>
      <link>https://swiswiswift.com/2020-12-04/</link>
      <pubDate>Fri, 04 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-04/</guid>
      <description>UIStepperを使って値を増減させる方法です。 UIStepperを使うと値を増減させるUIを簡単</description>
    </item>
    
    <item>
      <title>Xcodeでプロジェクトを作成してGithubにプッシュする</title>
      <link>https://swiswiswift.com/2020-12-03/</link>
      <pubDate>Thu, 03 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-03/</guid>
      <description>Xcodeでプロジェクトを作成してGithubにプッシュする忘備録です。 まずプロジェクトを作成します</description>
    </item>
    
    <item>
      <title>SwiftでSpringBootで作られたAPIに文字列を渡す</title>
      <link>https://swiswiswift.com/2020-12-02/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-02/</guid>
      <description>SwiftでSpringBootで作られたAPIに文字列を渡した時にちょっと詰まったのでそれの忘備録</description>
    </item>
    
    <item>
      <title>SpringBootでBeanを返すとプロパティ名のisが省略される</title>
      <link>https://swiswiswift.com/2020-12-01/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-12-01/</guid>
      <description>SpringBoot で boolean型 で isXXX という名前のプロパティを持つ Bean を返すとisが省略されたので、それ周りの挙動の</description>
    </item>
    
    <item>
      <title>TableViewでセルのロングタップを検出する</title>
      <link>https://swiswiswift.com/2020-11-10/</link>
      <pubDate>Tue, 10 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-10/</guid>
      <description>TableViewでセルのロングタップを検出する方法です。 通常のタップとロングタップをそれぞれのイベ</description>
    </item>
    
    <item>
      <title>UIAlertControllerの中でTextFieldを使い、文字数を制限する</title>
      <link>https://swiswiswift.com/2020-11-09/</link>
      <pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-09/</guid>
      <description>UIAlertControllerの中でTextFieldを使い、文字数を制限する方法です。 このサン</description>
    </item>
    
    <item>
      <title>UIAlertControllerの中でTextFieldを使う</title>
      <link>https://swiswiswift.com/2020-11-08/</link>
      <pubDate>Sun, 08 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-08/</guid>
      <description>UIAlertControllerの中でTextFieldを使う方法です。 Alertの中でテキストを</description>
    </item>
    
    <item>
      <title>SwiftUIでMapを使う。Mapにピンを立てる</title>
      <link>https://swiswiswift.com/2020-11-07/</link>
      <pubDate>Sat, 07 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-07/</guid>
      <description>SwiftUIでMapを使う。Mapにピンを立てる方法です。 UIViewRepresentableを</description>
    </item>
    
    <item>
      <title>SwiftUIでViewの上にViewを重ねる</title>
      <link>https://swiswiswift.com/2020-11-06/</link>
      <pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-06/</guid>
      <description>SwiftUIでViewの上にViewを重ねる方法です。 Imageの上に半透明に黒いTextを重ねて</description>
    </item>
    
    <item>
      <title>ディレクトリにあるwavファイルをcafに変換する</title>
      <link>https://swiswiswift.com/2020-11-05/</link>
      <pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-05/</guid>
      <description>ディレクトリにあるwavファイルをcafに変換する方法です。 参考: bashのfor文でよく使うものメ</description>
    </item>
    
    <item>
      <title>UIViewに影をつける</title>
      <link>https://swiswiswift.com/2020-11-04/</link>
      <pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-04/</guid>
      <description>UIViewに影をつける方法です。 オレンジ色のUIView の周りに影をつけています。 影があると浮き上</description>
    </item>
    
    <item>
      <title>シェルスクリプトでディレクトリにあるファイル名の一覧でループする</title>
      <link>https://swiswiswift.com/2020-11-03/</link>
      <pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-03/</guid>
      <description>シェルスクリプトでディレクトリにあるファイル名の一覧でループする方法です。 参考: bashのfor文で</description>
    </item>
    
    <item>
      <title>画面内にPageViewControllerがあるウォークスルー画面を実装する</title>
      <link>https://swiswiswift.com/2020-11-02/</link>
      <pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-02/</guid>
      <description>画面内にPageViewControllerがあるウォークスルー画面を実装する方法です。 一番最後のペ</description>
    </item>
    
    <item>
      <title>SwiftUIで端末のシェイクを検知する</title>
      <link>https://swiswiswift.com/2020-11-01/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-11-01/</guid>
      <description>SwiftUIで端末のシェイクを検知する方法です。 端末をシェイクすると Text 内の文字が変わります。 Rea</description>
    </item>
    
    <item>
      <title>SwiftUIでAppStorageを使ってUserDefaultの値を監視する</title>
      <link>https://swiswiswift.com/2020-10-08/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-08/</guid>
      <description>SwiftUIでAppStorageを使ってUserDefaultの値を監視する方法です。 UserD</description>
    </item>
    
    <item>
      <title>SwiftUIでListの中に複数のNavigationLinkを設置する</title>
      <link>https://swiswiswift.com/2020-10-07/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-07/</guid>
      <description>SwiftUIでListの中に複数のNavigationLinkを設置する方法です。 素直に実装すると</description>
    </item>
    
    <item>
      <title>ディレクトリにあるwavファイルをcafに変換する</title>
      <link>https://swiswiswift.com/2020-10-06/</link>
      <pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-06/</guid>
      <description>ディレクトリにあるwavファイルをcafに変換する方法です。ディレクトリに存在する全ての.wavファ</description>
    </item>
    
    <item>
      <title>ディレクトリにあるtxtファイルでループする</title>
      <link>https://swiswiswift.com/2020-10-05/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-05/</guid>
      <description>ディレクトリにあるtxtファイルでループする方法です。ディレクトリに存在する全ての.txtファイルに</description>
    </item>
    
    <item>
      <title>ディレクトリにあるファイル名でループする</title>
      <link>https://swiswiswift.com/2020-10-04/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-04/</guid>
      <description>ディレクトリにあるファイル名でループする方法です。ディレクトリに存在する全てのファイルに処理をしたい</description>
    </item>
    
    <item>
      <title>SwiftUIでVStackの周りに影をつける</title>
      <link>https://swiswiswift.com/2020-10-03/</link>
      <pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-03/</guid>
      <description>SwiftでUIViewの周りに影をつける方法です。 ImageのViewの周りに影をつけています。 shadowOffset</description>
    </item>
    
    <item>
      <title>UIPageViewControllerでウォークスルー画面を実装する</title>
      <link>https://swiswiswift.com/2020-10-02/</link>
      <pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-02/</guid>
      <description>UIPageViewControllerでウォークスルー画面を実装する方法です。 ウォークスルー画面は</description>
    </item>
    
    <item>
      <title>SwiftUIでViewの周りに影をつける</title>
      <link>https://swiswiswift.com/2020-10-01/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-10-01/</guid>
      <description>SwiftでUIViewの周りに影をつける方法です。 ImageのViewの周りに影をつけています。 shadowOffset</description>
    </item>
    
    <item>
      <title>Swiftで文章を読み上げる（音声合成）</title>
      <link>https://swiswiswift.com/2020-09-15/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-15/</guid>
      <description>Swiftで文章を読み上げる（音声合成）方法です。 AVFoundation を import し、以下のコードを書くことで iPhone に文字列を読み</description>
    </item>
    
    <item>
      <title>SwiftUIでButton内の画像やテキストの色を変えない</title>
      <link>https://swiswiswift.com/2020-09-14/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-14/</guid>
      <description>SwiftUIでButton内の画像やテキストの色を変えない方法です。 .buttonStyle(PlainButtonStyle()) ではフルーツの一覧を表示して</description>
    </item>
    
    <item>
      <title>SwiftUIで画面遷移時に値を渡す</title>
      <link>https://swiswiswift.com/2020-09-13/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-13/</guid>
      <description>SwiftUIで画面遷移時に値を渡す方法です。 ContentView ではフルーツの一覧を表示しています。 フルーツが表示さ</description>
    </item>
    
    <item>
      <title>GithubのAPIを叩き、SwiftUIでリポジトリを取得する。一番最後までいくと追加で取得しIndicator を表示する</title>
      <link>https://swiswiswift.com/2020-09-12/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-12/</guid>
      <description>GithubのAPIを叩き、リポジトリを取得する。一番最後までいくと追加で取得しIndicator を</description>
    </item>
    
    <item>
      <title>GithubのAPIを叩き、SwiftUIでリポジトリの情報をリストに表示する。一番下までスクロールされたら追加する</title>
      <link>https://swiswiswift.com/2020-09-11/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-11/</guid>
      <description>GithubのAPIを叩き、リポジトリの情報をリストに表示する。一番下までスクロールされたら追加する</description>
    </item>
    
    <item>
      <title>GithubのAPIを叩き、SwiftUIでリポジトリの情報をリストに表示する（Combine）</title>
      <link>https://swiswiswift.com/2020-09-10/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-10/</guid>
      <description>GithubのAPIを叩き、リポジトリの情報をリストに表示する方法です。 Infinite List Scroll with SwiftUI and Combine を参考にさせて</description>
    </item>
    
    <item>
      <title>GithubのAPIを叩き、SwiftUIでリポジトリの情報をリストに表示する（Closure）</title>
      <link>https://swiswiswift.com/2020-09-09/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-09/</guid>
      <description>GithubのAPIを叩き、SwiftUIでリポジトリの情報をリストに表示する方法です。 Infinite List Scroll with SwiftUI and</description>
    </item>
    
    <item>
      <title>SwiftUIでViewを横に等間隔で横に並べる</title>
      <link>https://swiswiswift.com/2020-09-08/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-08/</guid>
      <description>SwiftUIでViewを横に等間隔で横に並べて表示するほうほうです。 アイコンを等間隔で表示したりす</description>
    </item>
    
    <item>
      <title>SwiftUIで画像を丸く切り取り、枠を付ける</title>
      <link>https://swiswiswift.com/2020-09-07/</link>
      <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-07/</guid>
      <description>SwiftUIで丸い枠に合わせて画像を丸く切り取り、枠を付ける方法です。 アイコンの表示する箇所などに</description>
    </item>
    
    <item>
      <title>SwiftUIで画像をリサイズして表示（clip）</title>
      <link>https://swiswiswift.com/2020-09-06/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-06/</guid>
      <description>SwiftUIで画像をリサイズして表示します。 アスペクト比が異なる場合ははみ出た箇所を切り取って表示</description>
    </item>
    
    <item>
      <title>SwiftUIで画像をリサイズして表示（fit）</title>
      <link>https://swiswiswift.com/2020-09-05/</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-05/</guid>
      <description>SwiftUIで画像をリサイズして表示します。 アスペクト比が異なる場合は余白が赤色で表示されます。</description>
    </item>
    
    <item>
      <title>Buttonを押すとTextの文字が変わる</title>
      <link>https://swiswiswift.com/2020-09-04/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-04/</guid>
      <description>SwiftUIでButtonが押されたら文字の色を変える方法です。 ボタンが押されたタイミングで @State var text</description>
    </item>
    
    <item>
      <title>SwiftUIでアラートとシートを出し分ける</title>
      <link>https://swiswiswift.com/2020-09-03/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-03/</guid>
      <description>SwiftUIでアラートとシートを出し分ける方法です。 TextField に入力された文字列が Double に変換できるかチェック</description>
    </item>
    
    <item>
      <title>curl で iOSにVoIPプッシュを送る</title>
      <link>https://swiswiswift.com/2020-09-02/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-02/</guid>
      <description>curl で iOSにVoIPプッシュを送る方法です。 まず VoIPプッシュ通知用の .p12 ファイルを .pem に変換します。</description>
    </item>
    
    <item>
      <title>SwiftUIでプログラムで前の画面に戻る</title>
      <link>https://swiswiswift.com/2020-09-01/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-09-01/</guid>
      <description>SwiftUI でプログラムで前の画面に戻る方法です。 NavigationView と NavigationLink を使うと画面遷移することができます。 戻るボタンは自動で</description>
    </item>
    
    <item>
      <title>Swiftで仮引数を持つイニシャライザをスマートに書く</title>
      <link>https://swiswiswift.com/2020-08-09/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-09/</guid>
      <description>Swiftで仮引数を持つイニシャライザをスマートに書く方法です。 仮引数がついたイニシャライザをもち、</description>
    </item>
    
    <item>
      <title>Xcodeで行を入れ替える</title>
      <link>https://swiswiswift.com/2020-08-08/</link>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-08/</guid>
      <description>Xcodeで行を入れ替える方法です。 command + option + [ でカーソルのある行を上に持ってくることができます。 また</description>
    </item>
    
    <item>
      <title>Xcodeでコードをフォーマットする</title>
      <link>https://swiswiswift.com/2020-08-07/</link>
      <pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-07/</guid>
      <description>Xcodeでコードをフォーマットする方法です。 command + a でコードを全て選択し、control + i でコード</description>
    </item>
    
    <item>
      <title>SwiftUIのTextFieldで編集中と編集完了を検知する</title>
      <link>https://swiswiswift.com/2020-08-06/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-06/</guid>
      <description>SwiftUIのTextFieldで編集中と編集完了を検知する方法です。 UIKit よりも少ないコードで実現で</description>
    </item>
    
    <item>
      <title>UIAlertControllerでアラートを表示する</title>
      <link>https://swiswiswift.com/2020-08-05/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-05/</guid>
      <description>UIAlertControllerを使ってアラートを出すサンプルです。 UIAlertControllerStyle.alert を UIAlertControllerStyle.actionSheet にするとニュッと下から出</description>
    </item>
    
    <item>
      <title>SwiftUIのPreviewを横向きにする</title>
      <link>https://swiswiswift.com/2020-08-04/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-04/</guid>
      <description>SwiftUIのPreviewを横向きにする方法です。 Previewのサイズを変更することで実現しま</description>
    </item>
    
    <item>
      <title>Buttonからプッシュ遷移をする（NavigationLinkを無効にする）</title>
      <link>https://swiswiswift.com/2020-08-03/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-03/</guid>
      <description>Buttonからプッシュ遷移をする方法です。 この方法であれば、NavigationLink を擬似的に</description>
    </item>
    
    <item>
      <title>SwiftUIでNavigationBarを隠す</title>
      <link>https://swiswiswift.com/2020-08-02/</link>
      <pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-02/</guid>
      <description>SwiftUI で NavigationBar を隠す方法です。 .navigationBarHidden(true) を設定すると隠すことができます。 理由は不明ですが、空文字で仮のタイトルを設定</description>
    </item>
    
    <item>
      <title>UIGestureRecognizer でジェスチャーイベントを取得する</title>
      <link>https://swiswiswift.com/2020-08-01/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-08-01/</guid>
      <description>UIGestureRecognizer でジェスチャーイベントを取得する方法です。 UITapGestureRecognizer, UIPinchGestureRecognizer, UILongPressGestureRecognizer, UISwipeGestureRecognizer などを使ってスワイプ、ピンチなどのイベントを取得</description>
    </item>
    
    <item>
      <title>UIPickerViewを使って値を選択する</title>
      <link>https://swiswiswift.com/2020-07-05/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-07-05/</guid>
      <description>UIPickerViewを使って値を取得するサンプルコードです。 PIPickerViewは選択肢の中</description>
    </item>
    
    <item>
      <title>IntelliJでJavaのGradleのプロジェクトを作成する</title>
      <link>https://swiswiswift.com/2020-07-04/</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-07-04/</guid>
      <description>IntelliJでJavaのGradleのプロジェクトを作成する方法です。 IntelliJを使うと簡</description>
    </item>
    
    <item>
      <title>Spring InitializrでアプリをSpringアプリを作成する</title>
      <link>https://swiswiswift.com/2020-07-03/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-07-03/</guid>
      <description>Spring Initializr でアプリをSpringアプリを作成する方法です。 Spring Initializr を使うとアプリの雛形を作ることができます。 Spring</description>
    </item>
    
    <item>
      <title>iPadでモーダルのサイズを取得する</title>
      <link>https://swiswiswift.com/2020-07-02/</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-07-02/</guid>
      <description>iPadでモーダルのサイズを取得する方法です。 viewWillLayoutSubviews でモーダルのサイズを取得することができます。</description>
    </item>
    
    <item>
      <title>削除、セルの移動が可能なUITableViewを作る</title>
      <link>https://swiswiswift.com/2020-07-01/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-07-01/</guid>
      <description>削除、セルの移動が可能なUITableViewを作る方法です。 TableViewを使うと簡単に編集可</description>
    </item>
    
    <item>
      <title>よくあるチュートリアル画面をUIPageViewControllerとSwiftUIで作る</title>
      <link>https://swiswiswift.com/2020-06-28/</link>
      <pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-28/</guid>
      <description>UIPageViewControllerとSwiftUIでよくあるチュートリアル画面を作ります。 画面</description>
    </item>
    
    <item>
      <title>UserDefaults に配列を保存してTableViewに表示する</title>
      <link>https://swiswiswift.com/2020-06-27/</link>
      <pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-27/</guid>
      <description>UserDefaults に配列を保存してTableViewに表示する方法です。 FirstViewController のボタンを押すと UserDefaults に現在の時刻が文字列とし</description>
    </item>
    
    <item>
      <title>UINavigationBar, UITabBar の色を変える</title>
      <link>https://swiswiswift.com/2020-06-26/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-26/</guid>
      <description>iOSでUINavigationBar, UITabBar の色を変える方法です。 エヴァンゲリオンをイメージしたカラー</description>
    </item>
    
    <item>
      <title>UITabBarControllerにUINavigationControllerを入れ子で実装する</title>
      <link>https://swiswiswift.com/2020-06-25/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-25/</guid>
      <description>UITabBarControllerにUINavigationControllerを入れ子で実装する</description>
    </item>
    
    <item>
      <title>SwiftUIでUITestを動かす</title>
      <link>https://swiswiswift.com/2020-06-24/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-24/</guid>
      <description>SwiftUIでUITestを動かす方法です。 UIKit の時と違って sleep を入れないと良い感じに動かなかったです</description>
    </item>
    
    <item>
      <title>SwiftUIでText中の文字の太さや色を変える</title>
      <link>https://swiswiswift.com/2020-06-22/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-22/</guid>
      <description>SwiftUIでText中の文字の太さや色を変える方法です。 SwiftUI で Text を結合できるのが面白いです。</description>
    </item>
    
    <item>
      <title>SwiftUIで続きを読む。。。ボタンがあるViewを実装する</title>
      <link>https://swiswiswift.com/2020-06-20/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-20/</guid>
      <description>SwiftUIで続きを読む。。。ボタンがあるViewを実装する方法です。 背景を透明色にし、そのサイズ</description>
    </item>
    
    <item>
      <title>Swiftで録画開始とスクリーンショットが取られたことを検知する</title>
      <link>https://swiswiswift.com/2020-06-15/</link>
      <pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-15/</guid>
      <description>Swiftで録画開始とスクリーンショットが取られたことを検知する方法です。 画面録画開始前に captureStatusDidChange を実行さ</description>
    </item>
    
    <item>
      <title>XcodeでAtCoderをC&#43;&#43;でやってみる</title>
      <link>https://swiswiswift.com/2020-06-02/</link>
      <pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-02/</guid>
      <description>XcodeでAtCoderをC++でやってみました。 AppStore から Xcode をインストールし、Create a new Xcode project で</description>
    </item>
    
    <item>
      <title>SwiftUIで閉じることができないモーダルを表示する</title>
      <link>https://swiswiswift.com/2020-06-01/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-06-01/</guid>
      <description>SwiftUIで閉じることができないモーダルを表示する方法です。 以下の記事の応用です、UIKit を使</description>
    </item>
    
    <item>
      <title>シミュレーターのスクリーンショットを影無しで撮影する（ツールバー無しで撮影する）</title>
      <link>https://swiswiswift.com/2020-05-14/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-14/</guid>
      <description>シミュレーターのスクリーンショットを影無しで撮影する（ツールバー無しで撮影する）方法です。 command + shift + 4</description>
    </item>
    
    <item>
      <title>SwiftUIでモーダルからフルモーダルを表示する</title>
      <link>https://swiswiswift.com/2020-05-13/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-13/</guid>
      <description>SwiftUIでモーダルからフルモーダルを表示する方法です。 以下の記事の改良版？です。 SwiftUI</description>
    </item>
    
    <item>
      <title>SwiftUIでアプリ起動時に画面を遷移させる</title>
      <link>https://swiswiswift.com/2020-05-12/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-12/</guid>
      <description>SwiftUIでアプリ起動時に画面を遷移させる方法です。 登録の導線で途中離脱したらその途中から再開さ</description>
    </item>
    
    <item>
      <title>FunctionBuilderを使ってViewに影をつける</title>
      <link>https://swiswiswift.com/2020-05-07/</link>
      <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-07/</guid>
      <description>FunctionBuilderを使ってViewに影をつける方法です。 FunctionBuilderと</description>
    </item>
    
    <item>
      <title>ViewModifierを使ってViewに影をつける</title>
      <link>https://swiswiswift.com/2020-05-06/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-06/</guid>
      <description>ViewModifierを使ってViewに影をつける方法です。 FunctionBuilderとVie</description>
    </item>
    
    <item>
      <title>SwiftUIでフルスクリーンモーダルを表示する</title>
      <link>https://swiswiswift.com/2020-05-05/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-05/</guid>
      <description>SwiftUIでフルスクリーンモーダルを表示する方法です。 SwiftにもっとAPI増えて欲しいです。</description>
    </item>
    
    <item>
      <title>SwiftUIでNavigationViewのタイトルやテーブルビューの背景を変える</title>
      <link>https://swiswiswift.com/2020-05-04/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-04/</guid>
      <description>SwiftUIでNavigationViewのタイトルやテーブルビューの背景を変える方法です。 TableView と UITextView</description>
    </item>
    
    <item>
      <title>SwiftUI で文字列中にタップ可能なリンクを追加する</title>
      <link>https://swiswiswift.com/2020-05-03/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-05-03/</guid>
      <description>SwiftUI で文字列中にタップ可能なリンクを追加するを作成する方法です。 UIViewRepresentable と UITextView を使って実現しました。 Reference: UITe</description>
    </item>
    
    <item>
      <title>SwiftでPDFを作成する</title>
      <link>https://swiswiswift.com/2020-04-03/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-04-03/</guid>
      <description>Swift で PDF を作成する方法です。 PDFKit で簡単に PDF を作ることができました、素敵ですね。 参考: Creating a PDF in Swift with PDFKit</description>
    </item>
    
    <item>
      <title>UIActivityViewControllerでText, JSON, PDFを共有する</title>
      <link>https://swiswiswift.com/2020-04-02/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-04-02/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SwiftUIでWebViewを表示する</title>
      <link>https://swiswiswift.com/2020-03-27/</link>
      <pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-03-27/</guid>
      <description>SwiftUIでWebViewを表示する方法です。 UIViewRepresentable を使わなくても良い WebView が早く出て欲しいです。</description>
    </item>
    
    <item>
      <title>SwiftUIでListの要素を削除した入り増やしたりする</title>
      <link>https://swiswiswift.com/2020-03-01/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-03-01/</guid>
      <description>SwiftUIでListの要素を削除した入り増やしたりする方法です。 Closure で渡すのはあまりよくない気がし</description>
    </item>
    
    <item>
      <title>SwiftUIでキーボードをボタンで隠す</title>
      <link>https://swiswiswift.com/2020-02-29/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-29/</guid>
      <description>SwiftUIでキーボードをボタンで隠す方法です。 UIApplicationを拡張して実現しています</description>
    </item>
    
    <item>
      <title>SwiftUIでKeyboardの高さや出現を検知する</title>
      <link>https://swiswiswift.com/2020-02-28/</link>
      <pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-28/</guid>
      <description>SwiftUIでKeyboardの高さや出現を検知する方法です。 Combineを使って実現しています</description>
    </item>
    
    <item>
      <title>SwiftUIで複数行の文字列を入力する</title>
      <link>https://swiswiswift.com/2020-02-27/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-27/</guid>
      <description>SwiftUIで複数行の文字列を入力する方法です。 UIKitのTextViewを使って実現しています</description>
    </item>
    
    <item>
      <title>SwiftUIで下からPickerを出す</title>
      <link>https://swiswiswift.com/2020-02-26/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-26/</guid>
      <description>SwiftUIで下から Picker を出す方法です。 下からモーダルのように表示させています。 Importing an image into SwiftUI using UIImagePickerController</description>
    </item>
    
    <item>
      <title>SwiftUIでUIImagePickerControllerを使う</title>
      <link>https://swiswiswift.com/2020-02-25/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-25/</guid>
      <description>SwiftUIでSwiftUIでUIImagePickerControllerを使う方法です。 UIKit と同</description>
    </item>
    
    <item>
      <title>SwiftUIでButton内の画像の色を変えない</title>
      <link>https://swiswiswift.com/2020-02-24/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-24/</guid>
      <description>SwiftUIでButton内の画像の色を変えない方法です。 デフォルトのままだと以下の画像のように色</description>
    </item>
    
    <item>
      <title>iOS13のModalPresentationStyleを全部試してみた</title>
      <link>https://swiswiswift.com/2020-02-23/</link>
      <pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-23/</guid>
      <description>iOS13のModalPresentationStyleを全部試してみました。 PopPage モーダルのことを弊社</description>
    </item>
    
    <item>
      <title>Swiftで動画の終了を検知する</title>
      <link>https://swiswiswift.com/2020-02-22/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-22/</guid>
      <description>Swiftで動画の終了を検知するサンプルです。 動画はこちらのサイトからお借りしました。 Hybrid Creative Movies SAKURA こちら</description>
    </item>
    
    <item>
      <title>Swiftで動画を再生する</title>
      <link>https://swiswiswift.com/2020-02-21/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-21/</guid>
      <description>Swiftで動画を再生するサンプルです。 動画はこちらのサイトからお借りしました。 Hybrid Creative Movies SAKURA こちらのサイ</description>
    </item>
    
    <item>
      <title>SwiftUIでSwiftUIでサイドメニュー（ハンバーガーメニュー）を表示する</title>
      <link>https://swiswiswift.com/2020-02-20/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-20/</guid>
      <description>SwiftUIでサイドメニュー（ハンバーガーメニュー）を表示するサンプルです。 ドラッグで消す箇所など</description>
    </item>
    
    <item>
      <title>SwiftUIのListのSectionの色を変える</title>
      <link>https://swiswiswift.com/2020-02-19/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-19/</guid>
      <description>SwiftUIのListのSectionの色を変えるサンプルです。 Appearanceを使って背景色</description>
    </item>
    
    <item>
      <title>タップでセクション区切りのListViewにチェックを入れる</title>
      <link>https://swiswiswift.com/2020-02-18/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-18/</guid>
      <description>タップでセクション区切りのListViewにチェックを入れるサンプルです。 タップすることで State が変化し</description>
    </item>
    
    <item>
      <title>タップでListViewにチェックを入れる</title>
      <link>https://swiswiswift.com/2020-02-17/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-17/</guid>
      <description>タップで ListView にチェックを入れるサンプルです。 タップすることで State が変化し、✔︎を描画するようになります。</description>
    </item>
    
    <item>
      <title>SwiftでCSVを集計する</title>
      <link>https://swiswiswift.com/2020-02-16/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-16/</guid>
      <description>Swift で CSV を集計する方法です。 まず前処理として、CSV ファイルを utf8 に変換する必要があります。 Mac の場合は Numbers</description>
    </item>
    
    <item>
      <title>UIViewの背景をグリッドにしたり、ドットにしたりする</title>
      <link>https://swiswiswift.com/2020-02-14/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-14/</guid>
      <description>UIView の背景をグリッドにしたり、ドットにしたりする方法です。 今回は GridView という UIView のサブクラスを作り、ボタンを</description>
    </item>
    
    <item>
      <title>ReplayKitを使って画面を録音する</title>
      <link>https://swiswiswift.com/2020-02-12/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-12/</guid>
      <description>ReplayKit を使うと画面を録画することができます。 凄く簡単に使うことができる上に、マイクで実況？をしたりするこ</description>
    </item>
    
    <item>
      <title>SwiftUIでUICollectionViewのようにViewを並べる</title>
      <link>https://swiswiswift.com/2020-02-09/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-09/</guid>
      <description>SwiftUI で UICollectionView のように表示する方法です。 Q-Mobile/QGrid というライブラリを使うと簡単です。 QGrid を参考にしながら書いてみました</description>
    </item>
    
    <item>
      <title>SwiftUIでFirestoreの画像を表示する</title>
      <link>https://swiswiswift.com/2020-02-08/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-08/</guid>
      <description>SwiftUI で Firestore の画像を表示する方法です。 UIImage は SDWebImage を使えば簡単に表示できますが、SwiftUI ではそれができませ</description>
    </item>
    
    <item>
      <title>SwiftUIのToggleの変更を検知する</title>
      <link>https://swiswiswift.com/2020-02-05/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-05/</guid>
      <description>SwiftUIのToggleの変更を検知し、print 文を実行します。 参考: How can I trigger an action when a swiftUI toggle() is toggled?</description>
    </item>
    
    <item>
      <title>SwiftUIで複数行のPickerを作成する</title>
      <link>https://swiswiswift.com/2020-01-14/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-14/</guid>
      <description>UIPickerView のような複数行の Picker を作成する方法です。 UIPickerView と使い勝手がかなり異なり、戸惑いました。 参考: Multi-Component Picker (UIPickerView) in SwiftUI 追</description>
    </item>
    
    <item>
      <title>SwiftUIのPickerでLabelを表示しない</title>
      <link>https://swiswiswift.com/2020-01-13/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-13/</guid>
      <description>SwiftUIのPickerでLabelを表示しない方法です。 labelsHidden を設定することで可能です。 参考: How to</description>
    </item>
    
    <item>
      <title>SwiftUIでPicker を表示する</title>
      <link>https://swiswiswift.com/2020-01-12/</link>
      <pubDate>Sun, 12 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-12/</guid>
      <description>SwiftUI で Picker を表示するサンプルです。 複数行の場合はこちらです。 SwiftUIで複数行のPickerを作成す</description>
    </item>
    
    <item>
      <title>SwiftUI で画面遷移先の View から遷移元のメソッドを呼び出す</title>
      <link>https://swiswiswift.com/2020-01-11/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-11/</guid>
      <description>SwiftUI で画面遷移先の View から遷移元のメソッドを呼び出すサンプルです。 delegate を使ったのですが、Combine で書</description>
    </item>
    
    <item>
      <title>Swiftで数字が連番になった配列を作成する</title>
      <link>https://swiswiswift.com/2020-01-10/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-10/</guid>
      <description>Swiftで数字が連番になった配列を作成する方法です。 なかなか書き方を覚えられません。</description>
    </item>
    
    <item>
      <title>MVPアーキテクチャを使ったサンプルアプリ</title>
      <link>https://swiswiswift.com/2019-12-30/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-30/</guid>
      <description>MVPアーキテクチャを使ったサンプルアプリです。 Unitテスト、UIテストも書きました。 以下のような</description>
    </item>
    
    <item>
      <title>StoryboardsをiOS13以上のプロジェクトから削除する</title>
      <link>https://swiswiswift.com/2019-12-29/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-29/</guid>
      <description>Swift &amp;amp; Storyboard でファイルを作成します。 Main.storyboard を削除します。 Main storyboard file base name の項を削除する。 Application Scene Manifest -&amp;gt; Application Session Role -&amp;gt; Item0 -&amp;gt; Storyboard Name を削</description>
    </item>
    
    <item>
      <title>HugoでGistが表示されない</title>
      <link>https://swiswiswift.com/2019-12-28/</link>
      <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-28/</guid>
      <description>Hugo のバージョンを更新したところ、以下のような Gist のページが表示されなくなりました。 &amp;lt;script src=&amp;#34;https://gist.github.com/takoikatakotako/5aba51305d74c009a2c878897837e006.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 以下のように書き</description>
    </item>
    
    <item>
      <title>Dockerで Alpineベースのコンテナに入る</title>
      <link>https://swiswiswift.com/2019-12-21/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-21/</guid>
      <description>Docker コンテナの中に入ってシェルを使いたい時ありますよね。 普通は以下のようなコマンドでコンテナの中に入る</description>
    </item>
    
    <item>
      <title>SwiftUI でアラートを表示する</title>
      <link>https://swiswiswift.com/2019-12-20/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-20/</guid>
      <description>SwiftUI でアラートを表示する方法です。 UIAlertController とはかなり書き方が異なります。 Property Wrapper の @State がまだ慣れません。</description>
    </item>
    
    <item>
      <title>Swift5.1で追加されたFunctionBuilderを使ってStructを作る</title>
      <link>https://swiswiswift.com/2019-12-19/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-19/</guid>
      <description>Swift5.1で追加されたFunctionBuilderを使ってStructを作る方法です。 SwiftUI でも</description>
    </item>
    
    <item>
      <title>SwiftUIでリストのセルをタップするとアラートが表示される方法</title>
      <link>https://swiswiswift.com/2019-12-18/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-18/</guid>
      <description>SwiftUI でリストのセルをタップするとアラートが表示される方法です。 まだまだ SwiftUI に慣れません。</description>
    </item>
    
    <item>
      <title>SwiftUIでリストを編集する</title>
      <link>https://swiswiswift.com/2019-12-17/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-17/</guid>
      <description>SwiftUIでリストを編集する方法です。 UITableView よりも短いコードで書くことができました。 参考: How to enable editing on</description>
    </item>
    
    <item>
      <title>Dockerを使ってPostgreSQLを立て、テーブルを作成する。</title>
      <link>https://swiswiswift.com/2019-11-22/</link>
      <pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-22/</guid>
      <description>postgres-Docker Hub 以下のコマンドで、ローカルの 5432ポートに postgres11 を立てることができ、kabigon というユーザーで</description>
    </item>
    
    <item>
      <title>TabViewを使って画面を切り替える（SwiftUI）</title>
      <link>https://swiswiswift.com/2019-11-21/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-21/</guid>
      <description>TabViewを使って画面を切り替えるサンプルです。 かなり簡単に書くことができますね。 TabView - SwiftUI | Apple Developer Documentation</description>
    </item>
    
    <item>
      <title>ListViewからそれぞれ別のViewに遷移する（SwiftUI）</title>
      <link>https://swiswiswift.com/2019-11-20/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-20/</guid>
      <description>設定画面のようにListViewからそれぞれ別のViewに遷移する方法が少し手間でした。 もっと良い方</description>
    </item>
    
    <item>
      <title>Alamofireで受け取ったJsonをCodableを使ってパースする</title>
      <link>https://swiswiswift.com/2019-11-19/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-19/</guid>
      <description>お天気Webサービス（Livedoor Weather Web Service） の API を Alamofire から叩き、帰ってきた JSON を struct にパース</description>
    </item>
    
    <item>
      <title>SwiftUIでStructが使いまわされる</title>
      <link>https://swiswiswift.com/2019-11-14/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-14/</guid>
      <description>onDisappear で id を再生成することで回避しました。 @State に変化が無い場合はキャッシュを使い回したりするということでし</description>
    </item>
    
    <item>
      <title>SwiftUIでListを表示する</title>
      <link>https://swiswiswift.com/2019-11-13/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-13/</guid>
      <description>SwiftUI でList を表示する方法です。 画面遷移後の画面なので、NavigationBar がいます。</description>
    </item>
    
    <item>
      <title>インフラエンジニアなりたてで知らなかった単語をまとめ</title>
      <link>https://swiswiswift.com/2019-11-08/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-08/</guid>
      <description>インフラの勉強をし始めて分からなくて調べた単語をまとめました。 コンソリデーティッドビリング（Cons</description>
    </item>
    
    <item>
      <title>PHP で本当に簡単なモックサーバーを作る</title>
      <link>https://swiswiswift.com/2019-11-07/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-07/</guid>
      <description>ローカルにモックサーバーが必要だったので簡単なものをPHPで作ってみました。 signup.php でユーザー登録を行い、</description>
    </item>
    
    <item>
      <title>cURL（curl）でアプリにプッシュ通知を送信する</title>
      <link>https://swiswiswift.com/2019-11-06/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-06/</guid>
      <description>curl コマンドで iOS端末にプッシュ通知を送信する方法です。 証明書と秘密鍵の両方を含めたpemファイルを</description>
    </item>
    
    <item>
      <title>p12ファイルから証明書と秘密鍵を取り出す</title>
      <link>https://swiswiswift.com/2019-11-05/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-05/</guid>
      <description>.p12 ファイルから証明書と秘密鍵を取り出す方法です。 AWS SNS を Terraform で書くときに必要でした。 $ openssl pkcs12 -in xxxx.p12 -nodes -nokeys -out certificate.pem $</description>
    </item>
    
    <item>
      <title>gem でインストールした cocoapods をアップデートする</title>
      <link>https://swiswiswift.com/2019-09-12/</link>
      <pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-09-12/</guid>
      <description>gem でインストールした cocoapods のバージョンをアップデートする方法です。 cocoapods のライバル？の carthage が気になっています。</description>
    </item>
    
    <item>
      <title>iOSDC Japan 2019のDay1において、ルーキーズLT枠で登壇させていただきました</title>
      <link>https://swiswiswift.com/2019-09-11/</link>
      <pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-09-11/</guid>
      <description>まとめ ルーキーズLT枠で申し込んでよかったです！楽しかったです！ ルーキーズLT 私はルーキーズLT枠で</description>
    </item>
    
    <item>
      <title>TableViewのセルの高さを変更する（Swift5.0.1）</title>
      <link>https://swiswiswift.com/2019-07-30/</link>
      <pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-07-30/</guid>
      <description>TableView のセルの高さを変更する方法です。 一括で帰るときは .rowHeight を使い、個別に変えたいときは heightForRowAt を使うと実現できま</description>
    </item>
    
    <item>
      <title>ビズリーチキャンパスでアカウントがロックされた時の解除方法</title>
      <link>https://swiswiswift.com/2019-07-29/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-07-29/</guid>
      <description>パスワードをリセットする事で、アカウントのロックが解除されました。 運営への問い合わせをしなくても解除</description>
    </item>
    
    <item>
      <title>UIButton、ボタンを表示する(Swift5.0)</title>
      <link>https://swiswiswift.com/2019-06-03/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-06-03/</guid>
      <description>UIButton を使ってボタンを表示するサンプルコードです。 角丸ボタンはよく使います。</description>
    </item>
    
    <item>
      <title>一定間隔の値をUISlider で取得する(Swift5.0)</title>
      <link>https://swiswiswift.com/2019-06-02/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-06-02/</guid>
      <description>0, 0.5, 1.0, 1.5 …. と一定間隔の値をUISlider で取得するサンプルコードです。</description>
    </item>
    
    <item>
      <title>UISlider で値を取得する(Swift5.0)</title>
      <link>https://swiswiswift.com/2019-06-01/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-06-01/</guid>
      <description>UISlider で値を取得するサンプルコードです。 最小値と最大値を設定することで、その間の任意の値を取ることができ</description>
    </item>
    
    <item>
      <title>CallKit を使って着信画面を表示する</title>
      <link>https://swiswiswift.com/2019-05-12/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-05-12/</guid>
      <description>CallKit を使うことで着信時のUIを使うことができます。 電話がかかってくるアプリを作る時に使いました。</description>
    </item>
    
    <item>
      <title>ログイン時にメッセージを表示する（CentOS7）</title>
      <link>https://swiswiswift.com/2019-04-12/</link>
      <pubDate>Fri, 12 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-04-12/</guid>
      <description>サーバーを複数管理していると間違えて異なるサーバにログインしてしまう事があります。 ログイン時に表示し</description>
    </item>
    
    <item>
      <title>iOSでUITest（E2Eテスト）を行う(Swift5.0)</title>
      <link>https://swiswiswift.com/2019-04-11/</link>
      <pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-04-11/</guid>
      <description>そしてそのアプリのUITest を実装しました。 参考: 【Swift】初めてのUITest導入</description>
    </item>
    
    <item>
      <title>Java で文字列をシャッフルする</title>
      <link>https://swiswiswift.com/2019-03-15/</link>
      <pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-03-15/</guid>
      <description>Java での文字列のシャッフル方法です。 結構面倒だったので、記事にしました。 .suffld みたいなのが欲しいです。</description>
    </item>
    
    <item>
      <title>RootViewController をアニメーション付きで切り替える(Swift4.2)</title>
      <link>https://swiswiswift.com/2019-02-01/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-02-01/</guid>
      <description>RootViewController をアニメーション付きで切り替えるサンプルコードです。 チュートリアルの後とかでの使用を想定しています</description>
    </item>
    
    <item>
      <title>id_rsa’ are too open.</title>
      <link>https://swiswiswift.com/2019-01-28/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-28/</guid>
      <description>以下のエラーが出てssh接続ができなくなりました。 原因は秘密鍵の権限を制限してあげることで解決しまし</description>
    </item>
    
    <item>
      <title>ローカルのJsonファイルをParseしてテーブルビューに表示する(Swift4.2)</title>
      <link>https://swiswiswift.com/2019-01-27/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-27/</guid>
      <description>ローカルに追加したJsonファイルをパースし、TableViewに表示するサンプルコードです。 Swi</description>
    </item>
    
    <item>
      <title>SwiftでUITestを導入(Swift4.2)</title>
      <link>https://swiswiswift.com/2019-01-26/</link>
      <pubDate>Sat, 26 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-26/</guid>
      <description>プロジェクトにUITestを追加します。 プロジェクト作成時に作らなかった場合は以下の画像の手順で追加</description>
    </item>
    
    <item>
      <title>UITableViewでテーブルにアイテムを表示（Swift4.2）</title>
      <link>https://swiswiswift.com/2019-01-22/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-22/</guid>
      <description>UITableViewのクラス階層 NSObject ↑ UIResponder ↑ UIView ↑ UIScrollView ↑ UITableView AppleDeveloperリファレンスUITa</description>
    </item>
    
    <item>
      <title>NavigationControllerで画面遷移を行う（Swift4.2）</title>
      <link>https://swiswiswift.com/2019-01-21/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-21/</guid>
      <description>NavigationContorollerのサンプルコードです。 NavigationContorol</description>
    </item>
    
    <item>
      <title>NavigationControllerのRootを切り替える（Swift4.2）</title>
      <link>https://swiswiswift.com/2019-01-20/</link>
      <pubDate>Sun, 20 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-20/</guid>
      <description></description>
    </item>
    
    <item>
      <title>tar (child): gzip: Cannot exec: No such file or directory</title>
      <link>https://swiswiswift.com/2019-01-17/</link>
      <pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-17/</guid>
      <description>$ tar -zxvf openjdk-11.0.1_linux-x64_bin.tar.gz tar (child): gzip: Cannot exec: No such file or directory tar (child): Error is not recoverable: exiting now tar: Child returned status 2 tar: Error is not recoverable: exiting now 依存パッケージの gzip を入れてあげる</description>
    </item>
    
    <item>
      <title>sudo 時に PATH を引き継ぐ</title>
      <link>https://swiswiswift.com/2019-01-16/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-16/</guid>
      <description>which java と sudo which java でパスが違ったのでその解決 参考: sudo「コマンドが見つかりません」PATHが初期化され</description>
    </item>
    
    <item>
      <title>CentOS7にRailsをインストールする</title>
      <link>https://swiswiswift.com/2019-01-14/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-14/</guid>
      <description>CentOS7にRailsをインストールした時のメモになります。 最終的なNginxの nginx.conf ファイルはこち</description>
    </item>
    
    <item>
      <title>ImagePickerControllerで画像を選択する(Swift4.2)</title>
      <link>https://swiswiswift.com/2019-01-11/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-11/</guid>
      <description># Swift 4.2 Swift3の記事はこちら UIImagePickerControllerで画像の選択 iPhon</description>
    </item>
    
    <item>
      <title>ListViewを使ってリスト表示する(Kotlin)</title>
      <link>https://swiswiswift.com/2019-01-08/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-08/</guid>
      <description>ListViewを使ってリストの表示を行います。 Kotlin 、Android は設定ファイルが多くて難しいです。</description>
    </item>
    
    <item>
      <title>Function(Swift4.2)</title>
      <link>https://swiswiswift.com/2019-01-02/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-02/</guid>
      <description>Swiftで関数を作る方法です。 最近はネット記事を見ないでも見なくても書けるようになってきました。</description>
    </item>
    
    <item>
      <title>Array(Swift4.2)</title>
      <link>https://swiswiswift.com/2019-01-01/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-01-01/</guid>
      <description>#Swift4.2 Swiftの配列です。配列の作成と呼び出しについて記載します。 #Swift3の記事はこちら Array</description>
    </item>
    
    <item>
      <title>Print(Swift4.2)</title>
      <link>https://swiswiswift.com/2018-12-31/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-12-31/</guid>
      <description>#Swift4.2 print文を使うことでコンソールに配列の中身や文字列などの情報を出力することができます。</description>
    </item>
    
    <item>
      <title>UITableViewの中身をUISearchBarで検索する(Swift4)</title>
      <link>https://swiswiswift.com/2018-12-30/</link>
      <pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-12-30/</guid>
      <description>#Swift4.2 UITableViewとUISearchBarを組み合わせたサンプルです。 ナビゲーションバーにある</description>
    </item>
    
    <item>
      <title>アプリ使用中に位置情報を取得する</title>
      <link>https://swiswiswift.com/2018-12-29/</link>
      <pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-12-29/</guid>
      <description>#Swift 4.2 アプリ使用中に緯度と経度を取得するサンプルコードです。 端末の緯度と経度が変わるとラベル文字列が更</description>
    </item>
    
    <item>
      <title>Lifesumアプリのインタラクションが素敵だったので再現してみた</title>
      <link>https://swiswiswift.com/2018-12-28/</link>
      <pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-12-28/</guid>
      <description>#Swift4.2 Lifesumというアプリの登録導線のインタラクションがとても素敵だったので再現してみました。 イン</description>
    </item>
    
    <item>
      <title>押すとクニュっとするボタンを実装する</title>
      <link>https://swiswiswift.com/2018-12-27/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-12-27/</guid>
      <description>#Swift 4.2 押すとクニュっとするボタンのサンプルコードです。 iOSでよくあるマイクロインタラクションです。 僕</description>
    </item>
    
    <item>
      <title>SSH で入ることのできるDockerイメージ(Ubuntu14.04)</title>
      <link>https://swiswiswift.com/2018-12-26/</link>
      <pubDate>Wed, 26 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-12-26/</guid>
      <description>Ansibleの練習のため、SSHで入ることができるイメージが欲しくて書きました。 CentOS7はこ</description>
    </item>
    
    <item>
      <title>SSH で入ることのできるDockerイメージ(CentOS7)</title>
      <link>https://swiswiswift.com/2018-12-25/</link>
      <pubDate>Tue, 25 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-12-25/</guid>
      <description>Ansibleの練習のため、SSHで入ることができるイメージが欲しくて書きました。 docker build -t ssh_centos7:latest . --no-cache docker run -d</description>
    </item>
    
    <item>
      <title>食洗機の分岐水栓取り付け工事を自分で行う。</title>
      <link>https://swiswiswift.com/2018-12-24/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-12-24/</guid>
      <description>例のPayPyaの20%キャッシュバックキャンペーンに釣られてビックカメラで食洗機を買いました。 パナ</description>
    </item>
    
    <item>
      <title>Alamofireを使ってAPIからJSONを取得する(Swift4.2)</title>
      <link>https://swiswiswift.com/2018-12-01/</link>
      <pubDate>Sat, 01 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-12-01/</guid>
      <description>古い記事(Swift3)は こちら Alamofireを使ってAPIからJSONを取得する #Xcode 10.1 #Swift 4.2 swi</description>
    </item>
    
    <item>
      <title>Android Studio でアイコンを設定する</title>
      <link>https://swiswiswift.com/2018-11-29/</link>
      <pubDate>Thu, 29 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-11-29/</guid>
      <description>– File -&amp;gt; Image Assets で Configure Image Asset を開く – Pathの…ボタンを押し、アイコンにしたい画像を選択する。 – Resize でサイズの微</description>
    </item>
    
    <item>
      <title>BottomNavigationViewで切り替え時に色を変える</title>
      <link>https://swiswiswift.com/2018-11-20/</link>
      <pubDate>Tue, 20 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-11-20/</guid>
      <description>res/color ディレクトリ以下に bottom_navigation_color.xml ファイルを作成し、そこにstateごとの色を書くことで実現できます。</description>
    </item>
    
    <item>
      <title>SSH で入ることのできるDockerイメージ(CentOS6)</title>
      <link>https://swiswiswift.com/2018-11-19/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-11-19/</guid>
      <description>Ansibleの練習のため、SSHで入ることができるイメージが欲しくて書きました。 $ docker build -t docker_ssh:latest . $ docker run</description>
    </item>
    
    <item>
      <title>パスワードの入力欄の中身を確認したい</title>
      <link>https://swiswiswift.com/2018-11-14/</link>
      <pubDate>Wed, 14 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-11-14/</guid>
      <description>ログイン画面のパスワード入力欄で黒丸●●●●●となっている中身を確認する方法です。 要素と検証を開いて</description>
    </item>
    
    <item>
      <title>Fragmentsを入れ子にしたBottomNavigationを実装する</title>
      <link>https://swiswiswift.com/2018-11-13/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-11-13/</guid>
      <description>BottomNavigationはiOSのTabBarControllerによく似たAPIです。 Bo</description>
    </item>
    
    <item>
      <title>Xcode10でプロジェクト名を変更する</title>
      <link>https://swiswiswift.com/2018-11-12/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-11-12/</guid>
      <description>こちらの記事を参考にさせていただきました。 ありがとうございます！ 参考記事の方が丁寧に書いてありますの</description>
    </item>
    
    <item>
      <title>Build input file cannot be found: Libraries/WebSocket/libfishhook.a’</title>
      <link>https://swiswiswift.com/2018-09-27/</link>
      <pubDate>Thu, 27 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-09-27/</guid>
      <description>//参考 Xcode 10 libfishhook.a cannot be found Xcodeを10.0 にアップデートしたら上記のエラーが出てReactNative</description>
    </item>
    
    <item>
      <title>KotlinでListViewを内包したTabを作成する</title>
      <link>https://swiswiswift.com/2018-09-25/</link>
      <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-09-25/</guid>
      <description>KotlinでListViewを内包したTabを作成しました。 参考にさせて頂いたWebページです。 す</description>
    </item>
    
    <item>
      <title>グループスタイルのTableViewを作成する</title>
      <link>https://swiswiswift.com/2018-09-20/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-09-20/</guid>
      <description>グループスタイルのテーブルビューを表示するサンプルコードです 設定画面などはこんな感じですね。</description>
    </item>
    
    <item>
      <title>SafeAreaを取得する</title>
      <link>https://swiswiswift.com/2018-09-19/</link>
      <pubDate>Wed, 19 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-09-19/</guid>
      <description>iPhoneXが登場したことで、iPhoneXのレイアウト(SafeAreaの取得)には気を使うよう</description>
    </item>
    
    <item>
      <title>iOSでバーコードを読み取る</title>
      <link>https://swiswiswift.com/2018-09-17/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-09-17/</guid>
      <description>Swiftでバーコードを読み取るサンプルコードです。 Swift 4.1 // 参考にさせて頂いたサイトです Swift 4でQRコー</description>
    </item>
    
    <item>
      <title>ReactNativeで画像をボタンにする(TouchableOpacity)</title>
      <link>https://swiswiswift.com/2018-08-19/</link>
      <pubDate>Sun, 19 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-08-19/</guid>
      <description>ReactNativeで画像などのViewをボタンにするTouchableOpacityの実装サンプ</description>
    </item>
    
    <item>
      <title>ReactNativeでテキストを表示</title>
      <link>https://swiswiswift.com/2018-08-18/</link>
      <pubDate>Sat, 18 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-08-18/</guid>
      <description>ReactNativeでTextを表示するサンプルです。 react-native: 0.56.0</description>
    </item>
    
    <item>
      <title>ReactNativeでたまにしか使わないコマンドのメモ</title>
      <link>https://swiswiswift.com/2018-08-17/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-08-17/</guid>
      <description>ReactNativeでたまにしか使わないけど大事なコメントのメモです。 react-native-c</description>
    </item>
    
    <item>
      <title>ReactNativeでインディケーターを表示する</title>
      <link>https://swiswiswift.com/2018-08-16/</link>
      <pubDate>Thu, 16 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-08-16/</guid>
      <description>ReactNativeでIndicatorを表示するサンプルです。 react-native: 0.56.0</description>
    </item>
    
    <item>
      <title>ReactNativeで画像を表示する</title>
      <link>https://swiswiswift.com/2018-08-15/</link>
      <pubDate>Wed, 15 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-08-15/</guid>
      <description>ReactNativeで画像を表示するサンプルです。 iOSで画像をインターネットから取得する場合はA</description>
    </item>
    
    <item>
      <title>FlexBoxでViewの大きさを指定する</title>
      <link>https://swiswiswift.com/2018-08-14/</link>
      <pubDate>Tue, 14 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-08-14/</guid>
      <description>FlexBoxでViewの大きさを指定するサンプルコードです。 react-native: 0.56.0 紫、黄土色、水色のViewが 1 : 2</description>
    </item>
    
    <item>
      <title>ReactNativeでFlatListを表示する</title>
      <link>https://swiswiswift.com/2018-08-13/</link>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-08-13/</guid>
      <description>ReactNativeでFlatListを表示するサンプルです。 react-native: 0.56.0 で動作を確認しました。</description>
    </item>
    
    <item>
      <title>ReactNativeでボタンを表示する</title>
      <link>https://swiswiswift.com/2018-08-12/</link>
      <pubDate>Sun, 12 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-08-12/</guid>
      <description>ReactNativeでボタンを表示するサンプルです。 ボタンを押すとアラームが表示されます。 react-native: 0.56.0</description>
    </item>
    
    <item>
      <title>CollectionViewにSearchBarをつけて検索する</title>
      <link>https://swiswiswift.com/2018-07-18/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-07-18/</guid>
      <description>コレクションビューにサーチバーとコレクションビューをつけて検索するサンプルです。</description>
    </item>
    
    <item>
      <title>最小構成のhtml、css、javascriptのテンプレート</title>
      <link>https://swiswiswift.com/2018-07-17/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-07-17/</guid>
      <description>html, css, javascriptのミニマムなテンプレートです。 毎回調べているのでメモです。</description>
    </item>
    
    <item>
      <title>流れるように動く背景を実装する</title>
      <link>https://swiswiswift.com/2018-06-28/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-06-28/</guid>
      <description>私が作っている４択化学というアプリの背景の実装方法をたまに聞かれるので、それのサンプルコードを書きま</description>
    </item>
    
    <item>
      <title>PageViewControllerとPageControl</title>
      <link>https://swiswiswift.com/2018-06-21/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-06-21/</guid>
      <description>チュートリアル画面や電子書籍リーダーによく使われるPageViewControllerの実装サンプル</description>
    </item>
    
    <item>
      <title>CustomViewをコードで実装する</title>
      <link>https://swiswiswift.com/2018-06-19/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-06-19/</guid>
      <description>コードでカスタムビューを作り表示するサンプルです。 私はxibやstoryboradを使わずに実装する</description>
    </item>
    
    <item>
      <title>UITabBarControllerにUINavigationControllerを入れ子で実装する</title>
      <link>https://swiswiswift.com/2018-06-03/</link>
      <pubDate>Sun, 03 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-06-03/</guid>
      <description>UITabBarControllerにUINavigationControllerを入れるコードです</description>
    </item>
    
    <item>
      <title>UITabBarControllerを実装する</title>
      <link>https://swiswiswift.com/2018-06-02/</link>
      <pubDate>Sat, 02 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-06-02/</guid>
      <description>Viewの切り替えに使われるUITabBarControllerを実装サンプルです。 UITabBar</description>
    </item>
    
    <item>
      <title>let’s encryptでさくらサーバーをhttpsにする</title>
      <link>https://swiswiswift.com/2018-05-25/</link>
      <pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-05-25/</guid>
      <description>以下のサイトを参考にして証明書の設定をして以下の.htaccessをrootにおけば完成です。 ちょっ</description>
    </item>
    
    <item>
      <title>Asset CatalogでColor Setを使って色を管理する</title>
      <link>https://swiswiswift.com/2018-05-24/</link>
      <pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-05-24/</guid>
      <description>Xcode9(iOS 11)から、色をAssetで管理することができるようになりました。 UIColorのExtensio</description>
    </item>
    
    <item>
      <title>Appleのエンジニアさんにコードレベルの質問を送ってみた</title>
      <link>https://swiswiswift.com/2018-05-21/</link>
      <pubDate>Mon, 21 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-05-21/</guid>
      <description>「AppleDeveloperの登録料が高すぎる」と友達からよく言われるんですが、高いだけあって良い</description>
    </item>
    
    <item>
      <title>UIViewの背景をグラデーションさせる</title>
      <link>https://swiswiswift.com/2018-05-06/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-05-06/</guid>
      <description>UIViewの背景をグラデーションさせるサンプルコードです。 参考にさせていただいたページ 【Swift</description>
    </item>
    
    <item>
      <title>カスタムボタンクラスを実装する</title>
      <link>https://swiswiswift.com/2018-05-02/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-05-02/</guid>
      <description>UIButtonを拡張したカスタムボタンクラスを作成して貼り付けるサンプルコードです。 見た目を別ファ</description>
    </item>
    
    <item>
      <title>TableViewを編集してCellを削除する</title>
      <link>https://swiswiswift.com/2018-04-24/</link>
      <pubDate>Tue, 24 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-04-24/</guid>
      <description>TableViewを編集してCellを削除するサンプルコードです。 NavigationBarに編集ボ</description>
    </item>
    
    <item>
      <title>TableViewを編集してCellを削除する(横スライド)</title>
      <link>https://swiswiswift.com/2018-04-23/</link>
      <pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-04-23/</guid>
      <description>TableViewを編集してCellを削除するサンプルコードです。 以下の関数を追加することで、セルを</description>
    </item>
    
    <item>
      <title>数字を三桁ごとにカンマ区切りにする(日本円の表示)</title>
      <link>https://swiswiswift.com/2018-04-23/</link>
      <pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-04-23/</guid>
      <description>日本円を表示するときのように3桁ごと,で区切る方法を調べてみました。 123,456,789円 みたいな</description>
    </item>
    
    <item>
      <title>現在の日付と曜日、現在時間を取得する</title>
      <link>https://swiswiswift.com/2018-04-20/</link>
      <pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-04-20/</guid>
      <description>Swift4.1で現在の日付と曜日、現在時間を取得するサンプルコードです。 以下の形式の文字列で取得し</description>
    </item>
    
    <item>
      <title>CustomTableViewCellとaccessoryViewを使ってTableVIewのレイアウトをカスタマイズ</title>
      <link>https://swiswiswift.com/2018-04-05/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-04-05/</guid>
      <description>CustomTableViewCellを作ると好きなレイアウトのCellをTableViewで使うこ</description>
    </item>
    
    <item>
      <title>Arduinoでボタンを使う(プルアップ抵抗無し)</title>
      <link>https://swiswiswift.com/2018-03-25/</link>
      <pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-03-25/</guid>
      <description>Arduinoでボタンを使うときのサンプルコードです。 あんまり知られていないんですが、プルアップを使</description>
    </item>
    
    <item>
      <title>Google Cloud FunctionでHelloWorld</title>
      <link>https://swiswiswift.com/2018-03-24/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-03-24/</guid>
      <description>Google様のCloud Functionを触ってみたので、そのメモです。 HelloWorldとJs</description>
    </item>
    
    <item>
      <title>UIAlertControllerにTextFieldを追加する</title>
      <link>https://swiswiswift.com/2018-03-17/</link>
      <pubDate>Sat, 17 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-03-17/</guid>
      <description>UIAlertControllerにTextFieldを追加したサンプルです。</description>
    </item>
    
    <item>
      <title>NavigationControllerを実装する</title>
      <link>https://swiswiswift.com/2018-03-15/</link>
      <pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-03-15/</guid>
      <description>NavigationContorollerのサンプルコードです。 NavigationContorol</description>
    </item>
    
    <item>
      <title>ESP32でRTCモジュールを使う</title>
      <link>https://swiswiswift.com/2018-03-14/</link>
      <pubDate>Wed, 14 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-03-14/</guid>
      <description>ESP32でRTCモジュールを使おうとしたら少し詰まったので記事にしました。 結論を先に書くと、#in</description>
    </item>
    
    <item>
      <title>文字列やURLからQRコードを生成する</title>
      <link>https://swiswiswift.com/2018-03-07/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-03-07/</guid>
      <description>文字列やURLからQRコードを生成するサンプルコードです。 This is a sample code that generates a QR code from a character string or URL. これらの記</description>
    </item>
    
    <item>
      <title>UIAlertControllerでアラートを表示する</title>
      <link>https://swiswiswift.com/2018-03-06/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-03-06/</guid>
      <description>UIAlertControllerを使ってアラートを出すサンプルです。 UIAlertControllerStyle.alert をUIAlertContro</description>
    </item>
    
    <item>
      <title>UIAlertControllerで下からニュッと出す(UIActionSheet)</title>
      <link>https://swiswiswift.com/2018-03-05/</link>
      <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-03-05/</guid>
      <description>下からニュッと出てくるアラートはUIAlertControllerを用いて実装します。 遥か昔、下から</description>
    </item>
    
    <item>
      <title>列挙型 enum</title>
      <link>https://swiswiswift.com/2018-03-04/</link>
      <pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-03-04/</guid>
      <description>列挙型、enumの書き方のサンプルコードです。 ここではpersonというクラスを作り、カビゴンさんの</description>
    </item>
    
    <item>
      <title>iPhoneアプリのプログラミングの勉強法</title>
      <link>https://swiswiswift.com/2018-03-03/</link>
      <pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-03-03/</guid>
      <description>「iPhoneアプリを作るには何から勉強したらいい？」と友達にちょくちょく聞かれるのでオススメの勉強</description>
    </item>
    
    <item>
      <title>UserDefaultsを使ってパラメーターを保存する</title>
      <link>https://swiswiswift.com/2018-01-17/</link>
      <pubDate>Wed, 17 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-01-17/</guid>
      <description>UserDefaultsはアプリを落としても保持しておきたいデータを保存するときに使います。 使い方は</description>
    </item>
    
    <item>
      <title>UIPickerViewを使って値を選択する</title>
      <link>https://swiswiswift.com/2018-01-14/</link>
      <pubDate>Sun, 14 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2018-01-14/</guid>
      <description>はいどーも！ UIPickerViewを使って値を取得するサンプルコードです。 PIPickerView</description>
    </item>
    
    <item>
      <title>一定時間で繰り返しを行う</title>
      <link>https://swiswiswift.com/2017-12-13/</link>
      <pubDate>Wed, 13 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-12-13/</guid>
      <description>Timeを使って3秒ごとに繰り返しを行います。 時計のような機能を持つアプリを作る時に使いました。</description>
    </item>
    
    <item>
      <title>カスタムレイアウトを持つコレクションビューをつくる</title>
      <link>https://swiswiswift.com/2017-11-27/</link>
      <pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-11-27/</guid>
      <description>今作成しているアプリに画像が入れ子となったデザインをつくることになったので、実装方法について調べまし</description>
    </item>
    
    <item>
      <title>SwiftでUDP通信を行い、文字列を送る</title>
      <link>https://swiswiswift.com/2017-11-26/</link>
      <pubDate>Sun, 26 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-11-26/</guid>
      <description>SwiftでUDP通信するメモです。 SwiftSocket をcocoapodsで入れて、こんな感じで書きました。 woom</description>
    </item>
    
    <item>
      <title>Swift3からSwift4への移行時に出る@objc inference warningsを消す</title>
      <link>https://swiswiswift.com/2017-11-25/</link>
      <pubDate>Sat, 25 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-11-25/</guid>
      <description>Xcode8からXcode9へ乗り換えてSwift4へ変換すると以下のエラーが出ます。それの消し方で</description>
    </item>
    
    <item>
      <title>UIScrollViewで画像をピンチで拡大したり縮小する</title>
      <link>https://swiswiswift.com/2017-11-13/</link>
      <pubDate>Mon, 13 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-11-13/</guid>
      <description>UIScrollViewの中にある画像を拡大したり縮小するサンプルです。 ピンチで画像を大きくしたり、</description>
    </item>
    
    <item>
      <title>UINavigationControllerの戻るボタンの戻るを消す</title>
      <link>https://swiswiswift.com/2017-10-14/</link>
      <pubDate>Sat, 14 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-10-14/</guid>
      <description>UINavigationControllerの戻るボタンの文字を消します。 「＜戻る」を「＜」にします</description>
    </item>
    
    <item>
      <title>○秒後に実行させる、毎秒実行する</title>
      <link>https://swiswiswift.com/2017-10-13/</link>
      <pubDate>Fri, 13 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-10-13/</guid>
      <description>Swiftで数秒後に実行する、毎秒実行させるサンプルです。 一秒ごとにコンソールに出力されます。</description>
    </item>
    
    <item>
      <title>UITableViewにヘッダーを設定する</title>
      <link>https://swiswiswift.com/2017-10-08/</link>
      <pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-10-08/</guid>
      <description>UITableViewにヘッダーを設定するサンプルです。 フッターも同様に設定することができます。</description>
    </item>
    
    <item>
      <title>UICollectionViewにCustomセルを追加する</title>
      <link>https://swiswiswift.com/2017-10-03/</link>
      <pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-10-03/</guid>
      <description>UICollectionViewにCustumCollectionセルを追加してみました。 クラス名を</description>
    </item>
    
    <item>
      <title>UICollectionView</title>
      <link>https://swiswiswift.com/2017-10-02/</link>
      <pubDate>Mon, 02 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-10-02/</guid>
      <description>新しい記事 があります。 UICollectionViewのサンプルです。 UICollectionVie</description>
    </item>
    
    <item>
      <title>ESP32でSDカードのテキストファイルを読み書きする。</title>
      <link>https://swiswiswift.com/2017-10-01/</link>
      <pubDate>Sun, 01 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-10-01/</guid>
      <description>ESP32でSDカードに保存されたテキストファイルを読み書きするサンプルです。 読み込んで書き込むシン</description>
    </item>
    
    <item>
      <title>ymf825boardのサンプルコードのピンを変更</title>
      <link>https://swiswiswift.com/2017-09-05/</link>
      <pubDate>Tue, 05 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-09-05/</guid>
      <description>YMF825のサンプルコード (yamaha-webmusic/ymf825board)のピンを変更す</description>
    </item>
    
    <item>
      <title>輸出コンプライアンスのウィザードをスキップする</title>
      <link>https://swiswiswift.com/2017-08-12/</link>
      <pubDate>Sat, 12 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-08-12/</guid>
      <description>アプリをTestFlightなどに提出すると、暗号化が含まれていないか聞かれます。 毎回聞かれるとスキ</description>
    </item>
    
    <item>
      <title>curlでpostでJson送るときにレスポンスヘッダーも確認したい</title>
      <link>https://swiswiswift.com/2017-07-26/</link>
      <pubDate>Wed, 26 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-07-26/</guid>
      <description>curlでpostでJson送るときにレスポンスヘッダーも確認したい時に使いました。 最後に --include をつける</description>
    </item>
    
    <item>
      <title>curlでpostでJson送る</title>
      <link>https://swiswiswift.com/2017-07-25/</link>
      <pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-07-25/</guid>
      <description>Macのターミナルからcurlコマンドでjsonをpostする方法です。 ローカルで開発をしていて、a</description>
    </item>
    
    <item>
      <title>Alamofireを使ってAPIからJSONを取得する</title>
      <link>https://swiswiswift.com/2017-07-09/</link>
      <pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-07-09/</guid>
      <description>新しい記事(Swift4)はこちらAlamofireを使ってAPIからJSONを取得する(Swift</description>
    </item>
    
    <item>
      <title>delegateで別のViewからメソッドを呼び出す</title>
      <link>https://swiswiswift.com/2017-07-08/</link>
      <pubDate>Sat, 08 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-07-08/</guid>
      <description>あるViewから他のViewControllerにある関数などを実行するデリゲートのサンプルです。 今</description>
    </item>
    
    <item>
      <title>現在時刻の取得(kotlin)</title>
      <link>https://swiswiswift.com/2017-06-22/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-06-22/</guid>
      <description>Kotlin で現在時刻の取得を行います。 アラーム機能を持ったアプリを作っています。 このあたりは Swift と異なりますね</description>
    </item>
    
    <item>
      <title>Swiftでクラス名と関数名と行番号を取得、表示する</title>
      <link>https://swiswiswift.com/2017-06-15/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-06-15/</guid>
      <description>「ここは動いたらヤバい！」的な箇所に書くとでデバックが捗ります。 クラス名と行番号、取得表示することが</description>
    </item>
    
    <item>
      <title>UIImagePickerControllerで画像の選択</title>
      <link>https://swiswiswift.com/2017-06-14/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-06-14/</guid>
      <description>iPhoneのフォトライブラリから画像を取得するサンプルプログラムです。 フォトライブラリから画像を選</description>
    </item>
    
    <item>
      <title>rootのログインを禁止にする</title>
      <link>https://swiswiswift.com/2017-06-08/</link>
      <pubDate>Thu, 08 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-06-08/</guid>
      <description>VPSを借りて一番最初に行うrootのログインの禁止のメモです。 rootでサーバーにログインしてパス</description>
    </item>
    
    <item>
      <title>texworksのURL</title>
      <link>https://swiswiswift.com/2017-06-07/</link>
      <pubDate>Wed, 07 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-06-07/</guid>
      <description>Windowsのパソコンを自作し、texworksを入れたのですがショートカットを間違えて消してしま</description>
    </item>
    
    <item>
      <title>Swiftで音楽を再生する</title>
      <link>https://swiswiswift.com/2017-06-05/</link>
      <pubDate>Mon, 05 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-06-05/</guid>
      <description>Swiftで音楽を簡単に再生するサンプルコードです。 リピート再生も簡単にできました。 サンプルコードに</description>
    </item>
    
    <item>
      <title>Igorでグラフの背景を白にする</title>
      <link>https://swiswiswift.com/2017-05-24/</link>
      <pubDate>Wed, 24 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-24/</guid>
      <description>グラフ中で右クリック -&amp;gt; Colors -&amp;gt; both background -&amp;gt; 白色を選択 でできました。 データの解析にすごい便利ですが、先輩のマクロ</description>
    </item>
    
    <item>
      <title>Webテスト用のカンペ</title>
      <link>https://swiswiswift.com/2017-05-23/</link>
      <pubDate>Tue, 23 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-23/</guid>
      <description>JavaScriptのWebテスト用のカンペです。 ブラウザがあればできるところが好きです。 ただ、慣れ</description>
    </item>
    
    <item>
      <title>Androidアプリのアクションバーの影を消す</title>
      <link>https://swiswiswift.com/2017-05-22/</link>
      <pubDate>Mon, 22 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-22/</guid>
      <description>Androidアプリのアクションバーの影を消します。 アプリはどんどん新しいことが増えていくので覚える</description>
    </item>
    
    <item>
      <title>Androidアプリのステータスバーの変更</title>
      <link>https://swiswiswift.com/2017-05-21/</link>
      <pubDate>Sun, 21 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-21/</guid>
      <description>Androidアプリのステータスバーの変更方法です。 色を直指定するのは良くないです、Color.xm</description>
    </item>
    
    <item>
      <title>FizzBuzz(C)</title>
      <link>https://swiswiswift.com/2017-05-20/</link>
      <pubDate>Sat, 20 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-20/</guid>
      <description>FizzBuzzをCで解きました。 いろいろな言語で FizzBuzz を作ってみると違いが出て面白いですね。</description>
    </item>
    
    <item>
      <title>FizzBuzz(Ruby)</title>
      <link>https://swiswiswift.com/2017-05-19/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-19/</guid>
      <description>FizzBuzzをRubyで解いてみました。 いろいろな言語で FizzBuzz を作ってみると違いが出て面白いですね。</description>
    </item>
    
    <item>
      <title>Webテスト用のカンペ(Ruby)</title>
      <link>https://swiswiswift.com/2017-05-18/</link>
      <pubDate>Thu, 18 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-18/</guid>
      <description>Webテスト用のカンペです。 就活してるとWebテストで競技プログラミングがよく出てくるので、まとめて</description>
    </item>
    
    <item>
      <title>Array(Ruby)</title>
      <link>https://swiswiswift.com/2017-05-17/</link>
      <pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-17/</guid>
      <description>Rubyの配列についてです。 最近は競技プログラミングを Ruby でやっています。 C++ への移行タイミングをいつに</description>
    </item>
    
    <item>
      <title>UIStatusBarを白くする</title>
      <link>https://swiswiswift.com/2017-05-16/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-16/</guid>
      <description>UIStatusBarを白くする方法その1 UIStatusBarを白くする方法その1です。特定のVi</description>
    </item>
    
    <item>
      <title>UITableViewとUISearchBar</title>
      <link>https://swiswiswift.com/2017-05-15/</link>
      <pubDate>Mon, 15 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-15/</guid>
      <description>UITableViewとUISearchBarを組み合わせたサンプルです。 ナビゲーションバーにある虫</description>
    </item>
    
    <item>
      <title>UserNotification(LocalNotification)</title>
      <link>https://swiswiswift.com/2017-05-14/</link>
      <pubDate>Sun, 14 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-14/</guid>
      <description>UserNotificationはユーザーに対して通知を発行する時に使用します。 UserNotifi</description>
    </item>
    
    <item>
      <title>音声認識(SFSpeechRecognizer)</title>
      <link>https://swiswiswift.com/2017-05-13/</link>
      <pubDate>Sat, 13 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-13/</guid>
      <description>iOS10からSpeech Frameworkが登場しました。 ここではSFSpeechRecogniz</description>
    </item>
    
    <item>
      <title>UITextField</title>
      <link>https://swiswiswift.com/2017-05-12/</link>
      <pubDate>Fri, 12 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-12/</guid>
      <description>UITextFieldは文字の入力に使われます。 UITextFieldのクラス階層 NSObject ↑ UIResponder ↑ UIView ↑ UIControl ↑ UITextField</description>
    </item>
    
    <item>
      <title>cafファイルの作成</title>
      <link>https://swiswiswift.com/2017-05-11/</link>
      <pubDate>Thu, 11 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-11/</guid>
      <description>.cafファイルはiOSに用いられる音声ファイル形式です。以下はwavファイルを同名で出力するコマン</description>
    </item>
    
    <item>
      <title>UINavigationBar</title>
      <link>https://swiswiswift.com/2017-05-10/</link>
      <pubDate>Wed, 10 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-10/</guid>
      <description>iOSアプリの画面上部によく使われているUINavigationBarについてです。 UINaviga</description>
    </item>
    
    <item>
      <title>UILabel</title>
      <link>https://swiswiswift.com/2017-05-09/</link>
      <pubDate>Tue, 09 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-09/</guid>
      <description>UILabelクラスは文字表示を管理するクラスです。画面に文字を表示させたい時に使用します。 UILa</description>
    </item>
    
    <item>
      <title>現在時刻の取得</title>
      <link>https://swiswiswift.com/2017-05-08/</link>
      <pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-08/</guid>
      <description>現在時間を取得します。 AppleDeveloperリファレンスNSCalender サンプルプログラム</description>
    </item>
    
    <item>
      <title>UITableView</title>
      <link>https://swiswiswift.com/2017-05-07/</link>
      <pubDate>Sun, 07 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-07/</guid>
      <description>UITableViewはリストのような形でテキストを表示するクラスです。データ一覧などを表示する時な</description>
    </item>
    
    <item>
      <title>UIButton</title>
      <link>https://swiswiswift.com/2017-05-05/</link>
      <pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-05/</guid>
      <description>UIButtonクラスはボタンを設置するためのクラスです。 ボタンタップでアクションを起こすことができ</description>
    </item>
    
    <item>
      <title>UIBarButtonItem</title>
      <link>https://swiswiswift.com/2017-05-04/</link>
      <pubDate>Thu, 04 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-04/</guid>
      <description>UINavigationBarの要素追加、カスタマイズに用いられるUIBarButtonItemにつ</description>
    </item>
    
    <item>
      <title>Dictionary</title>
      <link>https://swiswiswift.com/2017-05-02/</link>
      <pubDate>Tue, 02 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-02/</guid>
      <description>Swiftの辞書配列です。 辞書配列の作成と呼び出しについて記載します。 人によって辞書配列だったり、ハ</description>
    </item>
    
    <item>
      <title>Array</title>
      <link>https://swiswiswift.com/2017-05-01/</link>
      <pubDate>Mon, 01 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-05-01/</guid>
      <description>配列の書き方 Swiftの配列です。配列の作成と呼び出しについて記載します。 配列の追加、挿入、削除 配列</description>
    </item>
    
    <item>
      <title>404 Not Found</title>
      <link>https://swiswiswift.com/404/</link>
      <pubDate>Sat, 01 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/404/</guid>
      <description>404 Not Found ブログのシステムを移行したため、記事の URL が変わっています。 記事自体は全て移しましたので、 トップ</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://swiswiswift.com/about/</link>
      <pubDate>Sat, 01 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/about/</guid>
      <description>インフラとアプリをメインにやっているエンジニアです。 個人開発アプリを作って一発当てるのが夢です。 Twitter Github</description>
    </item>
    
    <item>
      <title>サイトリニューアルしました</title>
      <link>https://swiswiswift.com/2017-04-01/</link>
      <pubDate>Sat, 01 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2017-04-01/</guid>
      <description></description>
    </item>
    
    <item>
      <title>プライバシーポリシー</title>
      <link>https://swiswiswift.com/privacy/</link>
      <pubDate>Sat, 01 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/privacy/</guid>
      <description>利用規約 この利用規約（以下，「本規約」といいます。）は，キャラーム運営（以下，「当運営」といいます。</description>
    </item>
    
  </channel>
</rss>
